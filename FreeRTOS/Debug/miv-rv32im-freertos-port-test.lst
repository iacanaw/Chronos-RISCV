
miv-rv32im-freertos-port-test.elf:     file format elf32-littleriscv
miv-rv32im-freertos-port-test.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x80000000

Program Header:
    LOAD off    0x00001000 vaddr 0x80000000 paddr 0x80000000 align 2**12
         filesz 0x00006f80 memsz 0x00041630 flags rwx

Sections:
Idx Name           Size      VMA       LMA       File off  Algn  Flags
  0 .text          00006e80  80000000  80000000  00001000  2**4  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .sdata         00000020  80006e80  80006e80  00007e80  2**4  CONTENTS, ALLOC, LOAD, DATA
  2 .data          000000e0  80006ea0  80006ea0  00007ea0  2**4  CONTENTS, ALLOC, LOAD, DATA
  3 .sbss          00000070  80006f80  80006f80  00007f80  2**4  ALLOC
  4 .bss           0001a640  80006ff0  80006ff0  00007f80  2**4  ALLOC
  5 .heap          00010000  80021630  80021630  00007f80  2**4  ALLOC
  6 .stack         00010000  80031630  80031630  00007f80  2**4  ALLOC
  7 .debug_line    0000af17  00000000  00000000  00007f80  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_info    0000f385  00000000  00000000  00012e97  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev  00002ae1  00000000  00000000  0002221c  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000918  00000000  00000000  00024d00  2**3  CONTENTS, READONLY, DEBUGGING
 11 .debug_str     00012b23  00000000  00000000  00025618  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges  000007e8  00000000  00000000  0003813b  2**0  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro   000058b6  00000000  00000000  00038923  2**0  CONTENTS, READONLY, DEBUGGING
 14 .comment       00000039  00000000  00000000  0003e1d9  2**0  CONTENTS, READONLY
 15 .debug_frame   00002190  00000000  00000000  0003e214  2**2  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
80000000 l    d  .text	00000000 .text
80006e80 l    d  .sdata	00000000 .sdata
80006ea0 l    d  .data	00000000 .data
80006f80 l    d  .sbss	00000000 .sbss
80006ff0 l    d  .bss	00000000 .bss
80021630 l    d  .heap	00000000 .heap
80031630 l    d  .stack	00000000 .stack
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_macro	00000000 .debug_macro
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 ./riscv_hal/entry.o
8000000c l       .text	00000000 handle_reset
80000004 l       .text	00000000 nmi_vector
80000008 l       .text	00000000 trap_vector
80000030 l       .text	00000000 trap_entry
00000000 l    df *ABS*	00000000 init.c
80000160 l     F .text	00000050 zero_section
00000000 l    df *ABS*	00000000 riscv_hal.c
80000238 l     F .text	000000b8 PLIC_DisableIRQ
800002f0 l     F .text	00000044 PLIC_ClaimIRQ
80000334 l     F .text	0000004c PLIC_CompleteIRQ
80006f80 l     O .sbss	00000008 g_systick_increment
00000000 l    df *ABS*	00000000 riscv_hal_stubs.c
00000000 l    df *ABS*	00000000 syscall.c
80006f88 l     O .sbss	00000008 g_stdio_uart
80006f90 l     O .sbss	00000004 g_stdio_uart_init_done
80000de0 l     F .text	00000030 stub
00000000 l    df *ABS*	00000000 core_uart_apb.c
00000000 l    df *ABS*	00000000 heap_2.c
80006ff0 l     O .bss	00019000 ucHeap
80006f94 l     O .sbss	00000008 xStart
80006f9c l     O .sbss	00000008 xEnd
80006e80 l     O .sdata	00000004 xFreeBytesRemaining
80006fa4 l     O .sbss	00000004 xHeapHasBeenInitialised.2777
800014f4 l     F .text	00000074 prvHeapInit
00000000 l    df *ABS*	00000000 port.c
80001568 l     F .text	0000004c raise_soft_interrupt
80006e84 l     O .sdata	00000004 uxCriticalNesting
80006e88 l     O .sdata	00000004 mtime
80006e8c l     O .sdata	00000004 mtimecmp
80001628 l     F .text	000000cc prvSetNextTimerInterrupt
800017c0 l     F .text	0000002c prvTaskExitError
00000000 l    df *ABS*	00000000 list.c
00000000 l    df *ABS*	00000000 string.c
00000000 l    df *ABS*	00000000 tasks.c
8001fff0 l     O .bss	00000064 pxReadyTasksLists
80020054 l     O .bss	00000014 xDelayedTaskList1
80020068 l     O .bss	00000014 xDelayedTaskList2
80006fb0 l     O .sbss	00000004 pxDelayedTaskList
80006fb4 l     O .sbss	00000004 pxOverflowDelayedTaskList
8002007c l     O .bss	00000014 xPendingReadyList
80020090 l     O .bss	00000014 xTasksWaitingTermination
80006fb8 l     O .sbss	00000004 uxTasksDeleted
800200a4 l     O .bss	00000014 xSuspendedTaskList
80006fbc l     O .sbss	00000004 uxCurrentNumberOfTasks
80006fc0 l     O .sbss	00000004 xTickCount
80006fc4 l     O .sbss	00000004 uxTopReadyPriority
80006fc8 l     O .sbss	00000004 xSchedulerRunning
80006fcc l     O .sbss	00000004 uxPendedTicks
80006fd0 l     O .sbss	00000004 xYieldPending
80006fd4 l     O .sbss	00000004 xNumOfOverflows
80006fd8 l     O .sbss	00000004 uxTaskNumber
80006fdc l     O .sbss	00000004 xNextTaskUnblockTime
80006fe0 l     O .sbss	00000004 uxSchedulerSuspended
80002a44 l     F .text	000000c0 prvAllocateTCBAndStack
80002724 l     F .text	00000138 prvInitialiseTCBVariables
8000285c l     F .text	000000c0 prvInitialiseTaskLists
80002b44 l     F .text	00000060 prvResetNextTaskUnblockTime
800029bc l     F .text	00000088 prvAddCurrentTaskToDelayedList
800026f0 l     F .text	00000034 prvIdleTask
8000291c l     F .text	000000a0 prvCheckTasksWaitingTermination
80002b04 l     F .text	00000040 prvDeleteTCB
00000000 l    df *ABS*	00000000 chronos.c
80002bcc l     F .text	000000b4 PLIC_EnableIRQ
80002c80 l     F .text	0000003c PLIC_SetPriority
00000000 l    df *ABS*	00000000 globalMaster.c
00000000 l    df *ABS*	00000000 applications.c
00000000 l    df *ABS*	00000000 packet.c
00000000 l    df *ABS*	00000000 main.c
8000640c l     F .text	000000d0 PLIC_init
80006710 l     F .text	00000094 GlobalManagerTask
80006658 l     F .text	000000b8 vUartAliveTask
00000000 l    df *ABS*	00000000 syswrite.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 impure.c
80006f20 l     O .data	00000060 impure_data
800015e8 g     F .text	00000040 vPortExitCritical
00010000 g       *ABS*	00000000 STACK_SIZE
800200b8 g     O .bss	00000004 SendingSlot
800009b8  w    F .text	00000020 External_11_IRQHandler
80007680 g       .sdata	00000000 __global_pointer$
80002e40 g     F .text	00000048 printsv
80006ea0 g       *ABS*	00000000 __data_load
80001880 g     F .text	000000cc SysTick_Handler
800008f8  w    F .text	00000020 External_5_IRQHandler
80006048 g     F .text	000000a8 API_PipeInitialization
800048f0 g     F .text	00000128 API_TilesReset
80000fc0 g       .text	00000000 HW_get_8bit_reg_field
80003628 g     F .text	00000080 reverse
800044ac g     F .text	00000078 API_AddPendingReq
80020b34 g     O .bss	00000024 priorityMatrix
80006378 g     F .text	00000094 API_checkPipe
80006fac g     O .sbss	00000004 pxCurrentTCB
80006f80 g       .sbss	00000000 __sbss_start
80002cbc g     F .text	000000d8 Chronos_init
80020b30 g     O .bss	00000004 errno
800200bc g     O .bss	000000f0 ServicePipe
80000ef8 g       .text	00000000 HW_set_32bit_reg
80000ad8  w    F .text	00000020 External_20_IRQHandler
8000194c g     F .text	00000044 xPortStartScheduler
80000380 g     F .text	00000024 __enable_irq
80001e4c g     F .text	0000021c xTaskGenericCreate
8000623c g     F .text	000000a0 API_GetServiceSlot
80006e80 g       .sdata	00000000 __sdata_start
80001428 g     F .text	000000cc vPortFree
800201ac g     O .bss	00000004 messageID
80003888 g     F .text	000000a0 API_PushSendQueue
80021618 g     O .bss	00000008 g_uart
80000f98 g       .text	00000000 HW_set_8bit_reg_field
80000b98  w    F .text	00000020 External_26_IRQHandler
8000078c g     F .text	0000010c handle_trap
80004820 g     F .text	00000070 API_GetApplicationFreeSlot
80001b20 g     F .text	00000088 vListInsertEnd
00080000 g       *ABS*	00000000 RAM_SIZE
80000998  w    F .text	00000020 External_10_IRQHandler
80020b58 g     O .bss	00000780 applications
80002e04 g     F .text	0000003c printi
80001af8 g     F .text	00000028 vListInitialiseItem
80000c18  w    F .text	00000020 External_30_IRQHandler
80000a78  w    F .text	00000020 External_17_IRQHandler
80031630 g       .heap	00000000 _heap_end
80000d90 g     F .text	00000050 _isatty
80021630 g       .bss	00000000 __bss_end
800004ec g     F .text	000002a0 handle_syscall
8000463c g     F .text	000001e4 API_AddApplication
8000124c g     F .text	000001dc pvPortMalloc
800060f0 g     F .text	0000014c API_GetMessageSlot
80004d98 g     F .text	00000304 API_DealocateTask
800001b0 g     F .text	0000006c _init
80001a94 g     F .text	00000064 vListInitialise
80000f88 g       .text	00000000 HW_set_8bit_reg
80000f90 g       .text	00000000 HW_get_8bit_reg
800023e0 g     F .text	00000038 xTaskGetTickCount
80004ac0 g     F .text	000002d8 API_AllocateTasks
800059d0 g     F .text	000000b4 API_TaskListInit
80005b7c g     F .text	000001c0 API_TaskAllocation
8000520c g     F .text	00000134 API_ClearTaskSlotFromTile
80005b0c g     F .text	00000070 API_GetFreeTaskSlot
80006ff0 g       .sbss	00000000 __sbss_end
80005e0c g     F .text	000000bc API_TaskStart
80000f08 g       .text	00000000 HW_set_32bit_reg_field
800067a4 g     F .text	0000001c write
800055dc g     F .text	00000128 API_TaskAllocated
80006628 g     F .text	00000014 vApplicationMallocFailedHook
80000b78  w    F .text	00000020 External_25_IRQHandler
80041630 g       .stack	00000000 __stack_top
80000bf8  w    F .text	00000020 External_29_IRQHandler
800201b0 g     O .bss	00000034 incommingPacket
80002068 g     F .text	000000dc vTaskDelete
8000119c g     F .text	000000b0 UART_polled_tx_string
80000c58 g     F .text	000000e8 write_hex
800009f8  w    F .text	00000020 External_13_IRQHandler
8000306c g     F .text	00000570 External_2_IRQHandler
00010000 g       *ABS*	00000000 HEAP_SIZE
800009d8  w    F .text	00000020 External_12_IRQHandler
80003848 g     F .text	00000040 makeAddress
800010e8 g     F .text	000000b4 UART_send
80002f3c g     F .text	0000004c SendRaw
80000000 g       .text	00000000 _start
80002258 g     F .text	00000028 vTaskSuspendAll
80003928 g     F .text	0000008c API_PopSendQueue
800003a4 g     F .text	000000a8 handle_m_timer_interrupt
80002d94 g     F .text	00000070 prints
80001c7c g     F .text	00000098 uxListRemove
80005704 g     F .text	000002cc API_ApplicationStart
80002f88 g     F .text	00000094 NI_enable_irq
80006e80 g       *ABS*	00000000 __sdata_load
80006f80 g       .data	00000000 __data_end
80002604 g     F .text	000000ec vTaskSwitchContext
80000a98  w    F .text	00000020 External_18_IRQHandler
80000f30 g       .text	00000000 HW_get_32bit_reg_field
800036a8 g     F .text	000001a0 myItoa
80000b18  w    F .text	00000020 External_22_IRQHandler
80000a38  w    F .text	00000020 External_15_IRQHandler
80001a6c g     F .text	00000028 vPortYield
80005a84 g     F .text	00000088 API_GetCurrentTaskSlot
80000000 g       *ABS*	00000000 RAM_START_ADDRESS
80006ff0 g       .bss	00000000 __bss_start
800212d8 g     O .bss	000002d0 TaskList
80000a58  w    F .text	00000020 External_16_IRQHandler
80001d14 g     F .text	000000e8 memset
800064dc g     F .text	0000014c main
800035dc g     F .text	0000004c mySwap
80001ba8 g     F .text	000000d4 vListInsert
80000bd8  w    F .text	00000020 External_28_IRQHandler
80004370 g     F .text	0000013c API_CheckMessagePipe
80004890 g     F .text	00000060 API_ApplicationsReset
80002ba4 g     F .text	00000028 xTaskGetCurrentTaskHandle
80000f48 g       .text	00000000 HW_get_16bit_reg
80006ea0 g       .sdata	00000000 __sdata_end
80005ec8 g     F .text	00000180 API_FinishRunningTask
80031630 g       .heap	00000000 __heap_end
80000a18  w    F .text	00000020 External_14_IRQHandler
800050bc g     F .text	00000150 API_GetTaskSlotFromTile
8000509c g     F .text	00000020 getNextPriorityAddr
8000542c g     F .text	000001b0 API_RepositoryAllocation
8000021c g     F .text	0000001c _fini
80002280 g     F .text	00000160 xTaskResumeAll
800021c8 g     F .text	00000090 vTaskStartScheduler
80003c14 g     F .text	0000030c API_SendMessage
80006ea0 g     O .data	00000080 ext_irq_handler_table
800201e4 g     O .bss	00000020 SendingQueue
800067c0 g     F .text	00000054 _write_r
80000f50 g       .text	00000000 HW_set_16bit_reg_field
80003aac g     F .text	00000168 API_AckTaskAllocation
80020204 g     O .bss	00000004 SendingQueue_tail
80006e90 g     O .sdata	00000004 _impure_ptr
80031630 g       .stack	00000000 __stack_bottom
80001990 g     F .text	000000dc Software_IRQHandler
800062dc g     F .text	0000009c API_ClearPipeSlot
80000bb8  w    F .text	00000020 External_27_IRQHandler
80000958  w    F .text	00000020 External_8_IRQHandler
80000978  w    F .text	00000020 External_9_IRQHandler
80021630 g       .heap	00000000 __heap_start
80000898  w    F .text	00000020 Invalid_IRQHandler
800039b4 g     F .text	000000f8 API_Try2Send
800008b8  w    F .text	00000020 External_3_IRQHandler
80002418 g     F .text	000001ec xTaskIncrementTick
80005d3c g     F .text	000000d0 API_GetTaskSlot
80006fa8 g     O .sbss	00000004 g_startscheduler
80002f14 g     F .text	00000028 getYpos
80000ab8  w    F .text	00000020 External_19_IRQHandler
80000e10 g     F .text	000000e8 _write
80002ee8 g     F .text	0000002c getXpos
80021630 g       .bss	00000000 _end
800016f4 g     F .text	000000cc vPortSetupTimer
80020208 g     O .bss	00000014 str
8002021c g     O .bss	00000004 SendingQueue_front
80004524 g     F .text	00000118 API_RepositoryWakeUp
80002e88 g     F .text	00000060 printsvsv
80002144 g     F .text	00000084 vTaskDelay
80000fd0 g     F .text	00000118 UART_init
80000f00 g       .text	00000000 HW_get_32bit_reg
80000d40 g     F .text	00000050 _exit
80000f40 g       .text	00000000 HW_set_16bit_reg
800040b4 g     F .text	000002bc API_SendMessageReq
80001dfc g     F .text	00000050 strlen
800017ec g     F .text	00000094 pxPortInitialiseStack
8000301c g     F .text	00000050 External_1_IRQHandler
80003f20 g     F .text	00000194 API_SendFinishTask
80000918  w    F .text	00000020 External_6_IRQHandler
80000c38  w    F .text	00000020 External_31_IRQHandler
80005340 g     F .text	000000ec API_GetSystemTasksSlots
800015b4 g     F .text	00000034 vPortEnterCritical
80006ea0 g       .data	00000000 __data_start
80021620 g     O .bss	00000004 ProcessorAddr
800215a8 g     O .bss	00000004 priorityPointer
80000af8  w    F .text	00000020 External_21_IRQHandler
800215ac g     O .bss	0000006c Tiles
800004bc g     F .text	00000030 handle_m_soft_interrupt
8000044c g     F .text	00000070 handle_m_ext_interrupt
80000f78 g       .text	00000000 HW_get_16bit_reg_field
80000b38  w    F .text	00000020 External_23_IRQHandler
80000b58  w    F .text	00000020 External_24_IRQHandler
800008d8  w    F .text	00000020 External_4_IRQHandler
80020220 g     O .bss	00000910 MessagePipe
80004a18 g     F .text	000000a8 GeneratePatternMatrix
80000938  w    F .text	00000020 External_7_IRQHandler
8000663c g     F .text	0000001c vApplicationIdleHook



Disassembly of section .text:

80000000 <_start>:
_start():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:30

  .section      .text.entry
  .globl _start

_start:
  j handle_reset
80000000:	00c0006f          	j	8000000c <handle_reset>

80000004 <nmi_vector>:
nmi_vector():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:33

nmi_vector:
  j nmi_vector
80000004:	0000006f          	j	80000004 <nmi_vector>

80000008 <trap_vector>:
trap_vector():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:36

trap_vector:
  j trap_entry
80000008:	0280006f          	j	80000030 <trap_entry>

8000000c <handle_reset>:
handle_reset():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:39

handle_reset:
  la t0, trap_entry
8000000c:	00000297          	auipc	t0,0x0
80000010:	02428293          	addi	t0,t0,36 # 80000030 <trap_entry>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:40
  csrw mtvec, t0
80000014:	30529073          	csrw	mtvec,t0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:41
  csrwi mstatus, 0
80000018:	30005073          	csrwi	mstatus,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:42
  csrwi mie, 0
8000001c:	30405073          	csrwi	mie,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:60
  lui t0, 0x0
  fscsr t0
#endif

  # initialize global pointer
  la gp, __global_pointer$
80000020:	00018193          	mv	gp,gp
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:63

  # initialize stack pointer
  la sp, __stack_top
80000024:	00041117          	auipc	sp,0x41
80000028:	60c10113          	addi	sp,sp,1548 # 80041630 <__stack_top>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:66

  # perform the rest of initialization in C
  j _init
8000002c:	1840006f          	j	800001b0 <_init>

80000030 <trap_entry>:
trap_entry():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:70


trap_entry:
  addi sp, sp, -32*REGBYTES
80000030:	f8010113          	addi	sp,sp,-128
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:72

  SREG x1, 0 * REGBYTES(sp)
80000034:	00112023          	sw	ra,0(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:73
  SREG x2, 1 * REGBYTES(sp)
80000038:	00212223          	sw	sp,4(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:74
  SREG x3, 2 * REGBYTES(sp)
8000003c:	00312423          	sw	gp,8(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:75
  SREG x4, 3 * REGBYTES(sp)
80000040:	00412623          	sw	tp,12(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:76
  SREG x5, 4 * REGBYTES(sp)
80000044:	00512823          	sw	t0,16(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:77
  SREG x6, 5 * REGBYTES(sp)
80000048:	00612a23          	sw	t1,20(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:78
  SREG x7, 6 * REGBYTES(sp)
8000004c:	00712c23          	sw	t2,24(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:79
  SREG x8, 7 * REGBYTES(sp)
80000050:	00812e23          	sw	s0,28(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:80
  SREG x9, 8 * REGBYTES(sp)
80000054:	02912023          	sw	s1,32(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:81
  SREG x10, 9 * REGBYTES(sp)
80000058:	02a12223          	sw	a0,36(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:82
  SREG x11, 10 * REGBYTES(sp)
8000005c:	02b12423          	sw	a1,40(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:83
  SREG x12, 11 * REGBYTES(sp)
80000060:	02c12623          	sw	a2,44(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:84
  SREG x13, 12 * REGBYTES(sp)
80000064:	02d12823          	sw	a3,48(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:85
  SREG x14, 13 * REGBYTES(sp)
80000068:	02e12a23          	sw	a4,52(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:86
  SREG x15, 14 * REGBYTES(sp)
8000006c:	02f12c23          	sw	a5,56(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:87
  SREG x16, 15 * REGBYTES(sp)
80000070:	03012e23          	sw	a6,60(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:88
  SREG x17, 16 * REGBYTES(sp)
80000074:	05112023          	sw	a7,64(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:89
  SREG x18, 17 * REGBYTES(sp)
80000078:	05212223          	sw	s2,68(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:90
  SREG x19, 18 * REGBYTES(sp)
8000007c:	05312423          	sw	s3,72(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:91
  SREG x20, 19 * REGBYTES(sp)
80000080:	05412623          	sw	s4,76(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:92
  SREG x21, 20 * REGBYTES(sp)
80000084:	05512823          	sw	s5,80(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:93
  SREG x22, 21 * REGBYTES(sp)
80000088:	05612a23          	sw	s6,84(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:94
  SREG x23, 22 * REGBYTES(sp)
8000008c:	05712c23          	sw	s7,88(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:95
  SREG x24, 23 * REGBYTES(sp)
80000090:	05812e23          	sw	s8,92(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:96
  SREG x25, 24 * REGBYTES(sp)
80000094:	07912023          	sw	s9,96(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:97
  SREG x26, 25 * REGBYTES(sp)
80000098:	07a12223          	sw	s10,100(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:98
  SREG x27, 26 * REGBYTES(sp)
8000009c:	07b12423          	sw	s11,104(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:99
  SREG x28, 27 * REGBYTES(sp)
800000a0:	07c12623          	sw	t3,108(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:100
  SREG x29, 28 * REGBYTES(sp)
800000a4:	07d12823          	sw	t4,112(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:101
  SREG x30, 29 * REGBYTES(sp)
800000a8:	07e12a23          	sw	t5,116(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:102
  SREG x31, 30 * REGBYTES(sp)
800000ac:	07f12c23          	sw	t6,120(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:105


  csrr t0, mepc
800000b0:	341022f3          	csrr	t0,mepc
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:106
  SREG t0, 31 * REGBYTES(sp)
800000b4:	06512e23          	sw	t0,124(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:108

  csrr a0, mcause
800000b8:	34202573          	csrr	a0,mcause
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:109
  csrr a1, mepc
800000bc:	341025f3          	csrr	a1,mepc
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:110
  mv a2, sp
800000c0:	00010613          	mv	a2,sp
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:111
  jal handle_trap
800000c4:	6c8000ef          	jal	ra,8000078c <handle_trap>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:112
  csrw mepc, a0
800000c8:	34151073          	csrw	mepc,a0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:115

  # Remain in M-mode after mret
  li t0, MSTATUS_MPP
800000cc:	000022b7          	lui	t0,0x2
800000d0:	80028293          	addi	t0,t0,-2048 # 1800 <HEAP_SIZE-0xe800>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:116
  csrs mstatus, t0
800000d4:	3002a073          	csrs	mstatus,t0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:118

  LREG x1, 0 * REGBYTES(sp)
800000d8:	00012083          	lw	ra,0(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:119
  LREG x2, 1 * REGBYTES(sp)
800000dc:	00412103          	lw	sp,4(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:120
  LREG x3, 2 * REGBYTES(sp)
800000e0:	00812183          	lw	gp,8(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:121
  LREG x4, 3 * REGBYTES(sp)
800000e4:	00c12203          	lw	tp,12(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:122
  LREG x5, 4 * REGBYTES(sp)
800000e8:	01012283          	lw	t0,16(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:123
  LREG x6, 5 * REGBYTES(sp)
800000ec:	01412303          	lw	t1,20(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:124
  LREG x7, 6 * REGBYTES(sp)
800000f0:	01812383          	lw	t2,24(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:125
  LREG x8, 7 * REGBYTES(sp)
800000f4:	01c12403          	lw	s0,28(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:126
  LREG x9, 8 * REGBYTES(sp)
800000f8:	02012483          	lw	s1,32(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:127
  LREG x10, 9 * REGBYTES(sp)
800000fc:	02412503          	lw	a0,36(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:128
  LREG x11, 10 * REGBYTES(sp)
80000100:	02812583          	lw	a1,40(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:129
  LREG x12, 11 * REGBYTES(sp)
80000104:	02c12603          	lw	a2,44(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:130
  LREG x13, 12 * REGBYTES(sp)
80000108:	03012683          	lw	a3,48(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:131
  LREG x14, 13 * REGBYTES(sp)
8000010c:	03412703          	lw	a4,52(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:132
  LREG x15, 14 * REGBYTES(sp)
80000110:	03812783          	lw	a5,56(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:133
  LREG x16, 15 * REGBYTES(sp)
80000114:	03c12803          	lw	a6,60(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:134
  LREG x17, 16 * REGBYTES(sp)
80000118:	04012883          	lw	a7,64(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:135
  LREG x18, 17 * REGBYTES(sp)
8000011c:	04412903          	lw	s2,68(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:136
  LREG x19, 18 * REGBYTES(sp)
80000120:	04812983          	lw	s3,72(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:137
  LREG x20, 19 * REGBYTES(sp)
80000124:	04c12a03          	lw	s4,76(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:138
  LREG x21, 20 * REGBYTES(sp)
80000128:	05012a83          	lw	s5,80(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:139
  LREG x22, 21 * REGBYTES(sp)
8000012c:	05412b03          	lw	s6,84(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:140
  LREG x23, 22 * REGBYTES(sp)
80000130:	05812b83          	lw	s7,88(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:141
  LREG x24, 23 * REGBYTES(sp)
80000134:	05c12c03          	lw	s8,92(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:142
  LREG x25, 24 * REGBYTES(sp)
80000138:	06012c83          	lw	s9,96(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:143
  LREG x26, 25 * REGBYTES(sp)
8000013c:	06412d03          	lw	s10,100(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:144
  LREG x27, 26 * REGBYTES(sp)
80000140:	06812d83          	lw	s11,104(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:145
  LREG x28, 27 * REGBYTES(sp)
80000144:	06c12e03          	lw	t3,108(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:146
  LREG x29, 28 * REGBYTES(sp)
80000148:	07012e83          	lw	t4,112(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:147
  LREG x30, 29 * REGBYTES(sp)
8000014c:	07412f03          	lw	t5,116(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:148
  LREG x31, 30 * REGBYTES(sp)
80000150:	07812f83          	lw	t6,120(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:150

  addi sp, sp, 32*REGBYTES
80000154:	08010113          	addi	sp,sp,128
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/entry.S:151
  mret
80000158:	30200073          	mret
8000015c:	0000                	unimp
	...

80000160 <zero_section>:
zero_section():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:47
        ++p_vma;
    }
}

static void zero_section(uint32_t * start, uint32_t * end)
{
80000160:	fd010113          	addi	sp,sp,-48
80000164:	02812623          	sw	s0,44(sp)
80000168:	03010413          	addi	s0,sp,48
8000016c:	fca42e23          	sw	a0,-36(s0)
80000170:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:48
    uint32_t * p_zero = start;
80000174:	fdc42783          	lw	a5,-36(s0)
80000178:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:50
    
    while(p_zero <= end)
8000017c:	0180006f          	j	80000194 <zero_section+0x34>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:52
    {
        *p_zero = 0;
80000180:	fec42783          	lw	a5,-20(s0)
80000184:	0007a023          	sw	zero,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:53
        ++p_zero;
80000188:	fec42783          	lw	a5,-20(s0)
8000018c:	00478793          	addi	a5,a5,4
80000190:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:50
    while(p_zero <= end)
80000194:	fec42703          	lw	a4,-20(s0)
80000198:	fd842783          	lw	a5,-40(s0)
8000019c:	fee7f2e3          	bleu	a4,a5,80000180 <zero_section+0x20>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:55
    }
}
800001a0:	00000013          	nop
800001a4:	02c12403          	lw	s0,44(sp)
800001a8:	03010113          	addi	sp,sp,48
800001ac:	00008067          	ret

800001b0 <_init>:
_init():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:58

void _init(void)
{
800001b0:	fe010113          	addi	sp,sp,-32
800001b4:	00112e23          	sw	ra,28(sp)
800001b8:	00812c23          	sw	s0,24(sp)
800001bc:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:60
    extern int main(int, char**);
    const char *argv0 = "hello";
800001c0:	800077b7          	lui	a5,0x80007
800001c4:	82078793          	addi	a5,a5,-2016 # 80006820 <__stack_top+0xfffc51f0>
800001c8:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:61
    char *argv[] = {(char *)argv0, NULL, NULL};
800001cc:	fec42783          	lw	a5,-20(s0)
800001d0:	fef42023          	sw	a5,-32(s0)
800001d4:	fe042223          	sw	zero,-28(s0)
800001d8:	fe042423          	sw	zero,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:66

// Imperas - this is loaded directly by simulator so must not be copied
//    copy_section(&__sdata_load, &__sdata_start, &__sdata_end);
//    copy_section(&__data_load, &__data_start, &__data_end);
    zero_section(&__sbss_start, &__sbss_end);
800001dc:	97018593          	addi	a1,gp,-1680 # 80006ff0 <__sbss_end>
800001e0:	90018513          	addi	a0,gp,-1792 # 80006f80 <__data_end>
800001e4:	f7dff0ef          	jal	ra,80000160 <zero_section>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:67
    zero_section(&__bss_start, &__bss_end);
800001e8:	800217b7          	lui	a5,0x80021
800001ec:	63078593          	addi	a1,a5,1584 # 80021630 <__stack_top+0xfffe0000>
800001f0:	97018513          	addi	a0,gp,-1680 # 80006ff0 <__sbss_end>
800001f4:	f6dff0ef          	jal	ra,80000160 <zero_section>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:69
    
    main(1, argv);
800001f8:	fe040793          	addi	a5,s0,-32
800001fc:	00078593          	mv	a1,a5
80000200:	00100513          	li	a0,1
80000204:	2d8060ef          	jal	ra,800064dc <main>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:70
}
80000208:	00000013          	nop
8000020c:	01c12083          	lw	ra,28(sp)
80000210:	01812403          	lw	s0,24(sp)
80000214:	02010113          	addi	sp,sp,32
80000218:	00008067          	ret

8000021c <_fini>:
_fini():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:75

/* Function called after main() finishes */
void
_fini()
{
8000021c:	ff010113          	addi	sp,sp,-16
80000220:	00812623          	sw	s0,12(sp)
80000224:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/init.c:76
}
80000228:	00000013          	nop
8000022c:	00c12403          	lw	s0,12(sp)
80000230:	01010113          	addi	sp,sp,16
80000234:	00008067          	ret

80000238 <PLIC_DisableIRQ>:
PLIC_DisableIRQ():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:174
 * 	If you wish to disable the external interrupt while the interrupt handler
 * 	for that external interrupt is executing then you must use the return value
 * 	EXT_IRQ_DISABLE to return from the extern interrupt handler.
 */
static inline void PLIC_DisableIRQ(IRQn_Type IRQn)
{
80000238:	fd010113          	addi	sp,sp,-48
8000023c:	02812623          	sw	s0,44(sp)
80000240:	03010413          	addi	s0,sp,48
80000244:	fca42e23          	sw	a0,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:175
    unsigned long hart_id = read_csr(mhartid);
80000248:	f14027f3          	csrr	a5,mhartid
8000024c:	fef42623          	sw	a5,-20(s0)
80000250:	fec42783          	lw	a5,-20(s0)
80000254:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:176
    uint32_t current = PLIC->TARGET_ENABLES[hart_id].ENABLES[IRQn / 32];
80000258:	40000737          	lui	a4,0x40000
8000025c:	fdc42783          	lw	a5,-36(s0)
80000260:	0057d793          	srli	a5,a5,0x5
80000264:	fe842683          	lw	a3,-24(s0)
80000268:	00569693          	slli	a3,a3,0x5
8000026c:	00f686b3          	add	a3,a3,a5
80000270:	000017b7          	lui	a5,0x1
80000274:	80078793          	addi	a5,a5,-2048 # 800 <HEAP_SIZE-0xf800>
80000278:	00f687b3          	add	a5,a3,a5
8000027c:	00279793          	slli	a5,a5,0x2
80000280:	00f707b3          	add	a5,a4,a5
80000284:	0007a783          	lw	a5,0(a5)
80000288:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:178

    current &= ~((uint32_t)1 << (IRQn % 32));
8000028c:	fdc42783          	lw	a5,-36(s0)
80000290:	01f7f793          	andi	a5,a5,31
80000294:	00100713          	li	a4,1
80000298:	00f717b3          	sll	a5,a4,a5
8000029c:	fff7c793          	not	a5,a5
800002a0:	fe442703          	lw	a4,-28(s0)
800002a4:	00f777b3          	and	a5,a4,a5
800002a8:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:180

    PLIC->TARGET_ENABLES[hart_id].ENABLES[IRQn / 32] = current;
800002ac:	40000737          	lui	a4,0x40000
800002b0:	fdc42783          	lw	a5,-36(s0)
800002b4:	0057d793          	srli	a5,a5,0x5
800002b8:	fe842683          	lw	a3,-24(s0)
800002bc:	00569693          	slli	a3,a3,0x5
800002c0:	00f686b3          	add	a3,a3,a5
800002c4:	000017b7          	lui	a5,0x1
800002c8:	80078793          	addi	a5,a5,-2048 # 800 <HEAP_SIZE-0xf800>
800002cc:	00f687b3          	add	a5,a3,a5
800002d0:	00279793          	slli	a5,a5,0x2
800002d4:	00f707b3          	add	a5,a4,a5
800002d8:	fe442703          	lw	a4,-28(s0)
800002dc:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:181
}
800002e0:	00000013          	nop
800002e4:	02c12403          	lw	s0,44(sp)
800002e8:	03010113          	addi	sp,sp,48
800002ec:	00008067          	ret

800002f0 <PLIC_ClaimIRQ>:
PLIC_ClaimIRQ():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:205

/*==============================================================================
 * The function PLIC_ClaimIRQ() claims the interrupt from the PLIC controller.
 */
static inline uint32_t PLIC_ClaimIRQ(void)
{
800002f0:	fe010113          	addi	sp,sp,-32
800002f4:	00812e23          	sw	s0,28(sp)
800002f8:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:206
    unsigned long hart_id = read_csr(mhartid);
800002fc:	f14027f3          	csrr	a5,mhartid
80000300:	fef42623          	sw	a5,-20(s0)
80000304:	fec42783          	lw	a5,-20(s0)
80000308:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:208

    return PLIC->TARGET[hart_id].CLAIM_COMPLETE;
8000030c:	40000737          	lui	a4,0x40000
80000310:	fe842783          	lw	a5,-24(s0)
80000314:	20078793          	addi	a5,a5,512
80000318:	00c79793          	slli	a5,a5,0xc
8000031c:	00f707b3          	add	a5,a4,a5
80000320:	0047a783          	lw	a5,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:209
}
80000324:	00078513          	mv	a0,a5
80000328:	01c12403          	lw	s0,28(sp)
8000032c:	02010113          	addi	sp,sp,32
80000330:	00008067          	ret

80000334 <PLIC_CompleteIRQ>:
PLIC_CompleteIRQ():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:216
/*==============================================================================
 * The function PLIC_CompleteIRQ() indicates to the PLIC controller the interrupt
 * is processed and claim is complete.
 */
static inline void PLIC_CompleteIRQ(uint32_t source)
{
80000334:	fd010113          	addi	sp,sp,-48
80000338:	02812623          	sw	s0,44(sp)
8000033c:	03010413          	addi	s0,sp,48
80000340:	fca42e23          	sw	a0,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:217
    unsigned long hart_id = read_csr(mhartid);
80000344:	f14027f3          	csrr	a5,mhartid
80000348:	fef42623          	sw	a5,-20(s0)
8000034c:	fec42783          	lw	a5,-20(s0)
80000350:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:219

    PLIC->TARGET[hart_id].CLAIM_COMPLETE = source;
80000354:	40000737          	lui	a4,0x40000
80000358:	fe842783          	lw	a5,-24(s0)
8000035c:	20078793          	addi	a5,a5,512
80000360:	00c79793          	slli	a5,a5,0xc
80000364:	00f707b3          	add	a5,a4,a5
80000368:	fdc42703          	lw	a4,-36(s0)
8000036c:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:220
}
80000370:	00000013          	nop
80000374:	02c12403          	lw	s0,44(sp)
80000378:	03010113          	addi	sp,sp,48
8000037c:	00008067          	ret

80000380 <__enable_irq>:
__enable_irq():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:96

/*------------------------------------------------------------------------------
 * Enabler all interrupts.
 */
void __enable_irq(void)
{
80000380:	fe010113          	addi	sp,sp,-32
80000384:	00812e23          	sw	s0,28(sp)
80000388:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:97
    set_csr(mstatus, MSTATUS_MIE);
8000038c:	300467f3          	csrrsi	a5,mstatus,8
80000390:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:98
}
80000394:	00000013          	nop
80000398:	01c12403          	lw	s0,28(sp)
8000039c:	02010113          	addi	sp,sp,32
800003a0:	00008067          	ret

800003a4 <handle_m_timer_interrupt>:
handle_m_timer_interrupt():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:128

/*------------------------------------------------------------------------------
 * RISC-V interrupt handler for machine timer interrupts.
 */
void handle_m_timer_interrupt()
{
800003a4:	fe010113          	addi	sp,sp,-32
800003a8:	00112e23          	sw	ra,28(sp)
800003ac:	00812c23          	sw	s0,24(sp)
800003b0:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:129
    clear_csr(mie, MIP_MTIP);
800003b4:	08000793          	li	a5,128
800003b8:	3047b7f3          	csrrc	a5,mie,a5
800003bc:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:131

    SysTick_Handler();
800003c0:	4c0010ef          	jal	ra,80001880 <SysTick_Handler>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:133

    PRCI->MTIMECMP[read_csr(mhartid)] = PRCI->MTIME + g_systick_increment;
800003c4:	44000737          	lui	a4,0x44000
800003c8:	0000c7b7          	lui	a5,0xc
800003cc:	00f707b3          	add	a5,a4,a5
800003d0:	ffc7a803          	lw	a6,-4(a5) # bffc <HEAP_SIZE-0x4004>
800003d4:	ff87a783          	lw	a5,-8(a5)
800003d8:	9001a583          	lw	a1,-1792(gp) # 80006f80 <__data_end>
800003dc:	9041a603          	lw	a2,-1788(gp) # 80006f84 <__data_end+0x4>
800003e0:	44000537          	lui	a0,0x44000
800003e4:	f1402773          	csrr	a4,mhartid
800003e8:	fee42423          	sw	a4,-24(s0)
800003ec:	fe842883          	lw	a7,-24(s0)
800003f0:	00b786b3          	add	a3,a5,a1
800003f4:	00068313          	mv	t1,a3
800003f8:	00f33333          	sltu	t1,t1,a5
800003fc:	00c80733          	add	a4,a6,a2
80000400:	00e307b3          	add	a5,t1,a4
80000404:	00078713          	mv	a4,a5
80000408:	00068793          	mv	a5,a3
8000040c:	00070813          	mv	a6,a4
80000410:	00001737          	lui	a4,0x1
80000414:	80070713          	addi	a4,a4,-2048 # 800 <HEAP_SIZE-0xf800>
80000418:	00e88733          	add	a4,a7,a4
8000041c:	00371713          	slli	a4,a4,0x3
80000420:	00e50733          	add	a4,a0,a4
80000424:	00f72023          	sw	a5,0(a4)
80000428:	01072223          	sw	a6,4(a4)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:135

    set_csr(mie, MIP_MTIP);
8000042c:	08000793          	li	a5,128
80000430:	3047a7f3          	csrrs	a5,mie,a5
80000434:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:136
}
80000438:	00000013          	nop
8000043c:	01c12083          	lw	ra,28(sp)
80000440:	01812403          	lw	s0,24(sp)
80000444:	02010113          	addi	sp,sp,32
80000448:	00008067          	ret

8000044c <handle_m_ext_interrupt>:
handle_m_ext_interrupt():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:181

/*------------------------------------------------------------------------------
 * 
 */
void handle_m_ext_interrupt()
{
8000044c:	fe010113          	addi	sp,sp,-32
80000450:	00112e23          	sw	ra,28(sp)
80000454:	00812c23          	sw	s0,24(sp)
80000458:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:182
    uint32_t int_num  = PLIC_ClaimIRQ();
8000045c:	e95ff0ef          	jal	ra,800002f0 <PLIC_ClaimIRQ>
80000460:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:183
    uint8_t disable = EXT_IRQ_KEEP_ENABLED;
80000464:	fe0405a3          	sb	zero,-21(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:185

    disable = ext_irq_handler_table[int_num]();
80000468:	800077b7          	lui	a5,0x80007
8000046c:	fec42703          	lw	a4,-20(s0)
80000470:	00271713          	slli	a4,a4,0x2
80000474:	ea078793          	addi	a5,a5,-352 # 80006ea0 <__stack_top+0xfffc5870>
80000478:	00f707b3          	add	a5,a4,a5
8000047c:	0007a783          	lw	a5,0(a5)
80000480:	000780e7          	jalr	a5
80000484:	00050793          	mv	a5,a0
80000488:	fef405a3          	sb	a5,-21(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:187

    PLIC_CompleteIRQ(int_num);
8000048c:	fec42503          	lw	a0,-20(s0)
80000490:	ea5ff0ef          	jal	ra,80000334 <PLIC_CompleteIRQ>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:189

    if(EXT_IRQ_DISABLE == disable)
80000494:	feb44703          	lbu	a4,-21(s0)
80000498:	00100793          	li	a5,1
8000049c:	00f71663          	bne	a4,a5,800004a8 <handle_m_ext_interrupt+0x5c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:191
    {
        PLIC_DisableIRQ((IRQn_Type)int_num);
800004a0:	fec42503          	lw	a0,-20(s0)
800004a4:	d95ff0ef          	jal	ra,80000238 <PLIC_DisableIRQ>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:193
    }
}
800004a8:	00000013          	nop
800004ac:	01c12083          	lw	ra,28(sp)
800004b0:	01812403          	lw	s0,24(sp)
800004b4:	02010113          	addi	sp,sp,32
800004b8:	00008067          	ret

800004bc <handle_m_soft_interrupt>:
handle_m_soft_interrupt():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:196

void handle_m_soft_interrupt()
{
800004bc:	ff010113          	addi	sp,sp,-16
800004c0:	00112623          	sw	ra,12(sp)
800004c4:	00812423          	sw	s0,8(sp)
800004c8:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:197
    Software_IRQHandler();
800004cc:	4c4010ef          	jal	ra,80001990 <Software_IRQHandler>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:200

    /*Clear software interrupt*/
    PRCI->MSIP[0] = 0x00;
800004d0:	440007b7          	lui	a5,0x44000
800004d4:	0007a023          	sw	zero,0(a5) # 44000000 <RAM_SIZE+0x43f80000>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:201
}
800004d8:	00000013          	nop
800004dc:	00c12083          	lw	ra,12(sp)
800004e0:	00812403          	lw	s0,8(sp)
800004e4:	01010113          	addi	sp,sp,16
800004e8:	00008067          	ret

800004ec <handle_syscall>:
handle_syscall():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:204

/* syscall funcion defined at system_call.c */
unsigned int handle_syscall(){
800004ec:	fd010113          	addi	sp,sp,-48
800004f0:	02112623          	sw	ra,44(sp)
800004f4:	02812423          	sw	s0,40(sp)
800004f8:	03212223          	sw	s2,36(sp)
800004fc:	03010413          	addi	s0,sp,48
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:207
	unsigned int arg0, arg1, arg2, arg3, arg4, arg5, type;
	unsigned int *pointer;
	register long temp asm("s2") = 0;
80000500:	00000913          	li	s2,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:208
	asm("addi	s2, sp, 0");
80000504:	00010913          	mv	s2,sp
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:210
	
	pointer = (unsigned int *)(temp + (29*4));
80000508:	00090793          	mv	a5,s2
8000050c:	07478793          	addi	a5,a5,116
80000510:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:211
	arg0 =  *pointer;
80000514:	fec42783          	lw	a5,-20(s0)
80000518:	0007a783          	lw	a5,0(a5)
8000051c:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:213

	pointer = (unsigned int *)(temp + (30*4));
80000520:	00090793          	mv	a5,s2
80000524:	07878793          	addi	a5,a5,120
80000528:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:214
	arg1 = *pointer;
8000052c:	fec42783          	lw	a5,-20(s0)
80000530:	0007a783          	lw	a5,0(a5)
80000534:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:216
	
	pointer = (unsigned int *)(temp + (31*4));
80000538:	00090793          	mv	a5,s2
8000053c:	07c78793          	addi	a5,a5,124
80000540:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:217
	arg2 = *pointer;
80000544:	fec42783          	lw	a5,-20(s0)
80000548:	0007a783          	lw	a5,0(a5)
8000054c:	fef42023          	sw	a5,-32(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:219

	pointer = (unsigned int *)(temp + (32*4));
80000550:	00090793          	mv	a5,s2
80000554:	08078793          	addi	a5,a5,128
80000558:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:220
	arg3 = *pointer;
8000055c:	fec42783          	lw	a5,-20(s0)
80000560:	0007a783          	lw	a5,0(a5)
80000564:	fcf42e23          	sw	a5,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:222

	pointer = (unsigned int *)(temp + (33*4));
80000568:	00090793          	mv	a5,s2
8000056c:	08478793          	addi	a5,a5,132
80000570:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:223
	arg4 = *pointer;
80000574:	fec42783          	lw	a5,-20(s0)
80000578:	0007a783          	lw	a5,0(a5)
8000057c:	fcf42c23          	sw	a5,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:225

	pointer = (unsigned int *)(temp + (34*4));
80000580:	00090793          	mv	a5,s2
80000584:	08878793          	addi	a5,a5,136
80000588:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:226
	arg4 = *pointer;
8000058c:	fec42783          	lw	a5,-20(s0)
80000590:	0007a783          	lw	a5,0(a5)
80000594:	fcf42c23          	sw	a5,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:228

	pointer = (unsigned int *)(temp + (36*4));
80000598:	00090793          	mv	a5,s2
8000059c:	09078793          	addi	a5,a5,144
800005a0:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:229
	type = *pointer;
800005a4:	fec42783          	lw	a5,-20(s0)
800005a8:	0007a783          	lw	a5,0(a5)
800005ac:	fcf42a23          	sw	a5,-44(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:231
	
	switch (type){
800005b0:	fd442783          	lw	a5,-44(s0)
800005b4:	ff678793          	addi	a5,a5,-10
800005b8:	03800713          	li	a4,56
800005bc:	12f76663          	bltu	a4,a5,800006e8 <handle_syscall+0x1fc>
800005c0:	00279713          	slli	a4,a5,0x2
800005c4:	800077b7          	lui	a5,0x80007
800005c8:	8a878793          	addi	a5,a5,-1880 # 800068a8 <__stack_top+0xfffc5278>
800005cc:	00f707b3          	add	a5,a4,a5
800005d0:	0007a783          	lw	a5,0(a5)
800005d4:	00078067          	jr	a5
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:234

		case SYS_TESTING:
			prints("Detectei uma chamada TESTE de sistema!\n");
800005d8:	800077b7          	lui	a5,0x80007
800005dc:	82878513          	addi	a0,a5,-2008 # 80006828 <__stack_top+0xfffc51f8>
800005e0:	7b4020ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:235
			printsv("arg0 ", arg0);
800005e4:	fe842783          	lw	a5,-24(s0)
800005e8:	00078593          	mv	a1,a5
800005ec:	800077b7          	lui	a5,0x80007
800005f0:	85078513          	addi	a0,a5,-1968 # 80006850 <__stack_top+0xfffc5220>
800005f4:	04d020ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:236
			printsv("arg1 ", arg1);
800005f8:	fe442783          	lw	a5,-28(s0)
800005fc:	00078593          	mv	a1,a5
80000600:	800077b7          	lui	a5,0x80007
80000604:	85878513          	addi	a0,a5,-1960 # 80006858 <__stack_top+0xfffc5228>
80000608:	039020ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:237
			printsv("arg2 ", arg2);
8000060c:	fe042783          	lw	a5,-32(s0)
80000610:	00078593          	mv	a1,a5
80000614:	800077b7          	lui	a5,0x80007
80000618:	86078513          	addi	a0,a5,-1952 # 80006860 <__stack_top+0xfffc5230>
8000061c:	025020ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:238
			printsv("arg3 ", arg3);
80000620:	fdc42783          	lw	a5,-36(s0)
80000624:	00078593          	mv	a1,a5
80000628:	800077b7          	lui	a5,0x80007
8000062c:	86878513          	addi	a0,a5,-1944 # 80006868 <__stack_top+0xfffc5238>
80000630:	011020ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:239
			printsv("arg4 ", arg4);
80000634:	fd842783          	lw	a5,-40(s0)
80000638:	00078593          	mv	a1,a5
8000063c:	800077b7          	lui	a5,0x80007
80000640:	87078513          	addi	a0,a5,-1936 # 80006870 <__stack_top+0xfffc5240>
80000644:	7fc020ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:240
			printsv("type ", type);
80000648:	fd442783          	lw	a5,-44(s0)
8000064c:	00078593          	mv	a1,a5
80000650:	800077b7          	lui	a5,0x80007
80000654:	87878513          	addi	a0,a5,-1928 # 80006878 <__stack_top+0xfffc5248>
80000658:	7e8020ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:241
			break;
8000065c:	1140006f          	j	80000770 <handle_syscall+0x284>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:244

        case SYS_PRINTS:
            prints(arg0);
80000660:	fe842783          	lw	a5,-24(s0)
80000664:	00078513          	mv	a0,a5
80000668:	72c020ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:245
            UART_polled_tx_string( &g_uart, arg0 );
8000066c:	fe842783          	lw	a5,-24(s0)
80000670:	00078593          	mv	a1,a5
80000674:	800217b7          	lui	a5,0x80021
80000678:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
8000067c:	321000ef          	jal	ra,8000119c <UART_polled_tx_string>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:246
            break;
80000680:	0f00006f          	j	80000770 <handle_syscall+0x284>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:249
        
        case SYS_PRINTI:
            printi(arg0);
80000684:	fe842783          	lw	a5,-24(s0)
80000688:	00078513          	mv	a0,a5
8000068c:	778020ef          	jal	ra,80002e04 <printi>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:250
            myItoa(arg0, str, 10);
80000690:	fe842703          	lw	a4,-24(s0)
80000694:	00a00613          	li	a2,10
80000698:	800207b7          	lui	a5,0x80020
8000069c:	20878593          	addi	a1,a5,520 # 80020208 <__stack_top+0xfffdebd8>
800006a0:	00070513          	mv	a0,a4
800006a4:	004030ef          	jal	ra,800036a8 <myItoa>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:251
            UART_polled_tx_string( &g_uart, (const uint8_t *)str );
800006a8:	800207b7          	lui	a5,0x80020
800006ac:	20878593          	addi	a1,a5,520 # 80020208 <__stack_top+0xfffdebd8>
800006b0:	800217b7          	lui	a5,0x80021
800006b4:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
800006b8:	2e5000ef          	jal	ra,8000119c <UART_polled_tx_string>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:252
            break;
800006bc:	0b40006f          	j	80000770 <handle_syscall+0x284>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:256
        
        case SYS_SEND_MSG:
            //              addr, task
            API_SendMessage(arg0, arg1);
800006c0:	fe442583          	lw	a1,-28(s0)
800006c4:	fe842503          	lw	a0,-24(s0)
800006c8:	54c030ef          	jal	ra,80003c14 <API_SendMessage>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:257
            break;
800006cc:	0a40006f          	j	80000770 <handle_syscall+0x284>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:261
        
        case SYS_RECV_MSG:
            //                 addr, task
            API_SendMessageReq(arg0, arg1);
800006d0:	fe442583          	lw	a1,-28(s0)
800006d4:	fe842503          	lw	a0,-24(s0)
800006d8:	1dd030ef          	jal	ra,800040b4 <API_SendMessageReq>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:262
            break;
800006dc:	0940006f          	j	80000770 <handle_syscall+0x284>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:265
        
        case SYS_END_TASK:
            API_FinishRunningTask();
800006e0:	7e8050ef          	jal	ra,80005ec8 <API_FinishRunningTask>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:266
            break;
800006e4:	08c0006f          	j	80000770 <handle_syscall+0x284>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:269

		default:
			prints("Systemcall não identificada!\n");
800006e8:	800077b7          	lui	a5,0x80007
800006ec:	88078513          	addi	a0,a5,-1920 # 80006880 <__stack_top+0xfffc5250>
800006f0:	6a4020ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:270
			printsv("arg0 ", arg0);
800006f4:	fe842783          	lw	a5,-24(s0)
800006f8:	00078593          	mv	a1,a5
800006fc:	800077b7          	lui	a5,0x80007
80000700:	85078513          	addi	a0,a5,-1968 # 80006850 <__stack_top+0xfffc5220>
80000704:	73c020ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:271
			printsv("arg1 ", arg1);
80000708:	fe442783          	lw	a5,-28(s0)
8000070c:	00078593          	mv	a1,a5
80000710:	800077b7          	lui	a5,0x80007
80000714:	85878513          	addi	a0,a5,-1960 # 80006858 <__stack_top+0xfffc5228>
80000718:	728020ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:272
			printsv("arg2 ", arg2);
8000071c:	fe042783          	lw	a5,-32(s0)
80000720:	00078593          	mv	a1,a5
80000724:	800077b7          	lui	a5,0x80007
80000728:	86078513          	addi	a0,a5,-1952 # 80006860 <__stack_top+0xfffc5230>
8000072c:	714020ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:273
			printsv("arg3 ", arg3);
80000730:	fdc42783          	lw	a5,-36(s0)
80000734:	00078593          	mv	a1,a5
80000738:	800077b7          	lui	a5,0x80007
8000073c:	86878513          	addi	a0,a5,-1944 # 80006868 <__stack_top+0xfffc5238>
80000740:	700020ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:274
			printsv("arg4 ", arg4);
80000744:	fd842783          	lw	a5,-40(s0)
80000748:	00078593          	mv	a1,a5
8000074c:	800077b7          	lui	a5,0x80007
80000750:	87078513          	addi	a0,a5,-1936 # 80006870 <__stack_top+0xfffc5240>
80000754:	6ec020ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:275
			printsv("type ", type);
80000758:	fd442783          	lw	a5,-44(s0)
8000075c:	00078593          	mv	a1,a5
80000760:	800077b7          	lui	a5,0x80007
80000764:	87878513          	addi	a0,a5,-1928 # 80006878 <__stack_top+0xfffc5248>
80000768:	6d8020ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:276
			break;
8000076c:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:278
	}
	return 42;
80000770:	02a00793          	li	a5,42
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:293
	// 	value = *p;
	// 	printsvsv("i: ", i, " value: ", value);
	// }
    // prints("Cheguei aqui!!!!!!! sucessooo :D\n");
	////////////////////////////////////////////////////
}
80000774:	00078513          	mv	a0,a5
80000778:	02c12083          	lw	ra,44(sp)
8000077c:	02812403          	lw	s0,40(sp)
80000780:	02412903          	lw	s2,36(sp)
80000784:	03010113          	addi	sp,sp,48
80000788:	00008067          	ret

8000078c <handle_trap>:
handle_trap():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:299

/*------------------------------------------------------------------------------
 * Trap/Interrupt handler
 */
uintptr_t handle_trap(uintptr_t mcause, uintptr_t epc)
{
8000078c:	fe010113          	addi	sp,sp,-32
80000790:	00112e23          	sw	ra,28(sp)
80000794:	00812c23          	sw	s0,24(sp)
80000798:	02010413          	addi	s0,sp,32
8000079c:	fea42623          	sw	a0,-20(s0)
800007a0:	feb42423          	sw	a1,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:300
    if (mcause == ENV_CALL_M || mcause == ENV_CALL_H || mcause == ENV_CALL_S || mcause == ENV_CALL_U){
800007a4:	fec42703          	lw	a4,-20(s0)
800007a8:	00b00793          	li	a5,11
800007ac:	02f70463          	beq	a4,a5,800007d4 <handle_trap+0x48>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:300 (discriminator 1)
800007b0:	fec42703          	lw	a4,-20(s0)
800007b4:	00a00793          	li	a5,10
800007b8:	00f70e63          	beq	a4,a5,800007d4 <handle_trap+0x48>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:300 (discriminator 2)
800007bc:	fec42703          	lw	a4,-20(s0)
800007c0:	00900793          	li	a5,9
800007c4:	00f70863          	beq	a4,a5,800007d4 <handle_trap+0x48>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:300 (discriminator 3)
800007c8:	fec42703          	lw	a4,-20(s0)
800007cc:	00800793          	li	a5,8
800007d0:	00f71c63          	bne	a4,a5,800007e8 <handle_trap+0x5c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:301
        handle_syscall();
800007d4:	d19ff0ef          	jal	ra,800004ec <handle_syscall>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:302
        epc = (uintptr_t) (epc + 4);
800007d8:	fe842783          	lw	a5,-24(s0)
800007dc:	00478793          	addi	a5,a5,4
800007e0:	fef42423          	sw	a5,-24(s0)
800007e4:	09c0006f          	j	80000880 <handle_trap+0xf4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:304
    }
    else if ((mcause & MCAUSE_INT) && ((mcause & MCAUSE_CAUSE)  == IRQ_M_EXT)){
800007e8:	fec42783          	lw	a5,-20(s0)
800007ec:	0207d263          	bgez	a5,80000810 <handle_trap+0x84>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:304 (discriminator 1)
800007f0:	fec42703          	lw	a4,-20(s0)
800007f4:	800007b7          	lui	a5,0x80000
800007f8:	fff7c793          	not	a5,a5
800007fc:	00f77733          	and	a4,a4,a5
80000800:	00b00793          	li	a5,11
80000804:	00f71663          	bne	a4,a5,80000810 <handle_trap+0x84>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:305
        handle_m_ext_interrupt();
80000808:	c45ff0ef          	jal	ra,8000044c <handle_m_ext_interrupt>
8000080c:	0740006f          	j	80000880 <handle_trap+0xf4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:307
    }
    else if ((mcause & MCAUSE_INT) && ((mcause & MCAUSE_CAUSE)  == IRQ_M_TIMER)){
80000810:	fec42783          	lw	a5,-20(s0)
80000814:	0207d263          	bgez	a5,80000838 <handle_trap+0xac>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:307 (discriminator 1)
80000818:	fec42703          	lw	a4,-20(s0)
8000081c:	800007b7          	lui	a5,0x80000
80000820:	fff7c793          	not	a5,a5
80000824:	00f77733          	and	a4,a4,a5
80000828:	00700793          	li	a5,7
8000082c:	00f71663          	bne	a4,a5,80000838 <handle_trap+0xac>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:308
        handle_m_timer_interrupt();
80000830:	b75ff0ef          	jal	ra,800003a4 <handle_m_timer_interrupt>
80000834:	04c0006f          	j	80000880 <handle_trap+0xf4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:310
    }
    else if ((mcause & MCAUSE_INT) && ((mcause & MCAUSE_CAUSE)  == IRQ_M_SOFT)){
80000838:	fec42783          	lw	a5,-20(s0)
8000083c:	0207d263          	bgez	a5,80000860 <handle_trap+0xd4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:310 (discriminator 1)
80000840:	fec42703          	lw	a4,-20(s0)
80000844:	800007b7          	lui	a5,0x80000
80000848:	fff7c793          	not	a5,a5
8000084c:	00f77733          	and	a4,a4,a5
80000850:	00300793          	li	a5,3
80000854:	00f71663          	bne	a4,a5,80000860 <handle_trap+0xd4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:311
        handle_m_soft_interrupt();
80000858:	c65ff0ef          	jal	ra,800004bc <handle_m_soft_interrupt>
8000085c:	0240006f          	j	80000880 <handle_trap+0xf4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:314
    }
    else{
        write(1, "trap\n", 5);
80000860:	00500613          	li	a2,5
80000864:	800077b7          	lui	a5,0x80007
80000868:	8a078593          	addi	a1,a5,-1888 # 800068a0 <__stack_top+0xfffc5270>
8000086c:	00100513          	li	a0,1
80000870:	735050ef          	jal	ra,800067a4 <write>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:315
        _exit(mcause);
80000874:	fec42783          	lw	a5,-20(s0)
80000878:	00078513          	mv	a0,a5
8000087c:	4c4000ef          	jal	ra,80000d40 <_exit>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:317
    }
    return epc;
80000880:	fe842783          	lw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal.c:318
}
80000884:	00078513          	mv	a0,a5
80000888:	01c12083          	lw	ra,28(sp)
8000088c:	01812403          	lw	s0,24(sp)
80000890:	02010113          	addi	sp,sp,32
80000894:	00008067          	ret

80000898 <Invalid_IRQHandler>:
Invalid_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:37
{
    ;
}

__attribute__((weak))  uint8_t Invalid_IRQHandler(void)
{
80000898:	ff010113          	addi	sp,sp,-16
8000089c:	00812623          	sw	s0,12(sp)
800008a0:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:38
    return(0);
800008a4:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:39
}
800008a8:	00078513          	mv	a0,a5
800008ac:	00c12403          	lw	s0,12(sp)
800008b0:	01010113          	addi	sp,sp,16
800008b4:	00008067          	ret

800008b8 <External_3_IRQHandler>:
External_3_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:52
{
    return(0);
}

__attribute__((weak))  uint8_t External_3_IRQHandler(void)
{
800008b8:	ff010113          	addi	sp,sp,-16
800008bc:	00812623          	sw	s0,12(sp)
800008c0:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:53
    return(0);
800008c4:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:54
}
800008c8:	00078513          	mv	a0,a5
800008cc:	00c12403          	lw	s0,12(sp)
800008d0:	01010113          	addi	sp,sp,16
800008d4:	00008067          	ret

800008d8 <External_4_IRQHandler>:
External_4_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:57

__attribute__((weak))  uint8_t External_4_IRQHandler(void)
{
800008d8:	ff010113          	addi	sp,sp,-16
800008dc:	00812623          	sw	s0,12(sp)
800008e0:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:58
    return(0);
800008e4:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:59
}
800008e8:	00078513          	mv	a0,a5
800008ec:	00c12403          	lw	s0,12(sp)
800008f0:	01010113          	addi	sp,sp,16
800008f4:	00008067          	ret

800008f8 <External_5_IRQHandler>:
External_5_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:62

__attribute__((weak))  uint8_t External_5_IRQHandler(void)
{
800008f8:	ff010113          	addi	sp,sp,-16
800008fc:	00812623          	sw	s0,12(sp)
80000900:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:63
    return(0);
80000904:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:64
}
80000908:	00078513          	mv	a0,a5
8000090c:	00c12403          	lw	s0,12(sp)
80000910:	01010113          	addi	sp,sp,16
80000914:	00008067          	ret

80000918 <External_6_IRQHandler>:
External_6_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:67

__attribute__((weak))  uint8_t External_6_IRQHandler(void)
{
80000918:	ff010113          	addi	sp,sp,-16
8000091c:	00812623          	sw	s0,12(sp)
80000920:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:68
    return(0);
80000924:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:69
}
80000928:	00078513          	mv	a0,a5
8000092c:	00c12403          	lw	s0,12(sp)
80000930:	01010113          	addi	sp,sp,16
80000934:	00008067          	ret

80000938 <External_7_IRQHandler>:
External_7_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:72

__attribute__((weak))  uint8_t External_7_IRQHandler(void)
{
80000938:	ff010113          	addi	sp,sp,-16
8000093c:	00812623          	sw	s0,12(sp)
80000940:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:73
    return(0);
80000944:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:74
}
80000948:	00078513          	mv	a0,a5
8000094c:	00c12403          	lw	s0,12(sp)
80000950:	01010113          	addi	sp,sp,16
80000954:	00008067          	ret

80000958 <External_8_IRQHandler>:
External_8_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:77

__attribute__((weak))  uint8_t External_8_IRQHandler(void)
{
80000958:	ff010113          	addi	sp,sp,-16
8000095c:	00812623          	sw	s0,12(sp)
80000960:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:78
    return(0);
80000964:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:79
}
80000968:	00078513          	mv	a0,a5
8000096c:	00c12403          	lw	s0,12(sp)
80000970:	01010113          	addi	sp,sp,16
80000974:	00008067          	ret

80000978 <External_9_IRQHandler>:
External_9_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:82

__attribute__((weak))  uint8_t External_9_IRQHandler(void)
{
80000978:	ff010113          	addi	sp,sp,-16
8000097c:	00812623          	sw	s0,12(sp)
80000980:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:83
    return(0);
80000984:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:84
}
80000988:	00078513          	mv	a0,a5
8000098c:	00c12403          	lw	s0,12(sp)
80000990:	01010113          	addi	sp,sp,16
80000994:	00008067          	ret

80000998 <External_10_IRQHandler>:
External_10_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:87

__attribute__((weak))  uint8_t External_10_IRQHandler(void)
{
80000998:	ff010113          	addi	sp,sp,-16
8000099c:	00812623          	sw	s0,12(sp)
800009a0:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:88
    return(0);
800009a4:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:89
}
800009a8:	00078513          	mv	a0,a5
800009ac:	00c12403          	lw	s0,12(sp)
800009b0:	01010113          	addi	sp,sp,16
800009b4:	00008067          	ret

800009b8 <External_11_IRQHandler>:
External_11_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:92

__attribute__((weak))  uint8_t External_11_IRQHandler(void)
{
800009b8:	ff010113          	addi	sp,sp,-16
800009bc:	00812623          	sw	s0,12(sp)
800009c0:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:93
    return(0);
800009c4:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:94
}
800009c8:	00078513          	mv	a0,a5
800009cc:	00c12403          	lw	s0,12(sp)
800009d0:	01010113          	addi	sp,sp,16
800009d4:	00008067          	ret

800009d8 <External_12_IRQHandler>:
External_12_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:97

__attribute__((weak))  uint8_t External_12_IRQHandler(void)
{
800009d8:	ff010113          	addi	sp,sp,-16
800009dc:	00812623          	sw	s0,12(sp)
800009e0:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:98
    return(0);
800009e4:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:99
}
800009e8:	00078513          	mv	a0,a5
800009ec:	00c12403          	lw	s0,12(sp)
800009f0:	01010113          	addi	sp,sp,16
800009f4:	00008067          	ret

800009f8 <External_13_IRQHandler>:
External_13_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:102

__attribute__((weak))  uint8_t External_13_IRQHandler(void)
{
800009f8:	ff010113          	addi	sp,sp,-16
800009fc:	00812623          	sw	s0,12(sp)
80000a00:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:103
    return(0);
80000a04:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:104
}
80000a08:	00078513          	mv	a0,a5
80000a0c:	00c12403          	lw	s0,12(sp)
80000a10:	01010113          	addi	sp,sp,16
80000a14:	00008067          	ret

80000a18 <External_14_IRQHandler>:
External_14_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:107

__attribute__((weak))  uint8_t External_14_IRQHandler(void)
{
80000a18:	ff010113          	addi	sp,sp,-16
80000a1c:	00812623          	sw	s0,12(sp)
80000a20:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:108
    return(0);
80000a24:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:109
}
80000a28:	00078513          	mv	a0,a5
80000a2c:	00c12403          	lw	s0,12(sp)
80000a30:	01010113          	addi	sp,sp,16
80000a34:	00008067          	ret

80000a38 <External_15_IRQHandler>:
External_15_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:112

__attribute__((weak))  uint8_t External_15_IRQHandler(void)
{
80000a38:	ff010113          	addi	sp,sp,-16
80000a3c:	00812623          	sw	s0,12(sp)
80000a40:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:113
    return(0);
80000a44:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:114
}
80000a48:	00078513          	mv	a0,a5
80000a4c:	00c12403          	lw	s0,12(sp)
80000a50:	01010113          	addi	sp,sp,16
80000a54:	00008067          	ret

80000a58 <External_16_IRQHandler>:
External_16_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:117

__attribute__((weak))  uint8_t External_16_IRQHandler(void)
{
80000a58:	ff010113          	addi	sp,sp,-16
80000a5c:	00812623          	sw	s0,12(sp)
80000a60:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:118
    return(0);
80000a64:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:119
}
80000a68:	00078513          	mv	a0,a5
80000a6c:	00c12403          	lw	s0,12(sp)
80000a70:	01010113          	addi	sp,sp,16
80000a74:	00008067          	ret

80000a78 <External_17_IRQHandler>:
External_17_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:122

__attribute__((weak))  uint8_t External_17_IRQHandler(void)
{
80000a78:	ff010113          	addi	sp,sp,-16
80000a7c:	00812623          	sw	s0,12(sp)
80000a80:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:123
    return(0);
80000a84:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:124
}
80000a88:	00078513          	mv	a0,a5
80000a8c:	00c12403          	lw	s0,12(sp)
80000a90:	01010113          	addi	sp,sp,16
80000a94:	00008067          	ret

80000a98 <External_18_IRQHandler>:
External_18_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:127

__attribute__((weak))  uint8_t External_18_IRQHandler(void)
{
80000a98:	ff010113          	addi	sp,sp,-16
80000a9c:	00812623          	sw	s0,12(sp)
80000aa0:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:128
    return(0);
80000aa4:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:129
}
80000aa8:	00078513          	mv	a0,a5
80000aac:	00c12403          	lw	s0,12(sp)
80000ab0:	01010113          	addi	sp,sp,16
80000ab4:	00008067          	ret

80000ab8 <External_19_IRQHandler>:
External_19_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:132

__attribute__((weak))  uint8_t External_19_IRQHandler(void)
{
80000ab8:	ff010113          	addi	sp,sp,-16
80000abc:	00812623          	sw	s0,12(sp)
80000ac0:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:133
    return(0);
80000ac4:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:134
}
80000ac8:	00078513          	mv	a0,a5
80000acc:	00c12403          	lw	s0,12(sp)
80000ad0:	01010113          	addi	sp,sp,16
80000ad4:	00008067          	ret

80000ad8 <External_20_IRQHandler>:
External_20_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:137

__attribute__((weak))  uint8_t External_20_IRQHandler(void)
{
80000ad8:	ff010113          	addi	sp,sp,-16
80000adc:	00812623          	sw	s0,12(sp)
80000ae0:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:138
    return(0);
80000ae4:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:139
}
80000ae8:	00078513          	mv	a0,a5
80000aec:	00c12403          	lw	s0,12(sp)
80000af0:	01010113          	addi	sp,sp,16
80000af4:	00008067          	ret

80000af8 <External_21_IRQHandler>:
External_21_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:142

__attribute__((weak))  uint8_t External_21_IRQHandler(void)
{
80000af8:	ff010113          	addi	sp,sp,-16
80000afc:	00812623          	sw	s0,12(sp)
80000b00:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:143
    return(0);
80000b04:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:144
}
80000b08:	00078513          	mv	a0,a5
80000b0c:	00c12403          	lw	s0,12(sp)
80000b10:	01010113          	addi	sp,sp,16
80000b14:	00008067          	ret

80000b18 <External_22_IRQHandler>:
External_22_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:147

__attribute__((weak))  uint8_t External_22_IRQHandler(void)
{
80000b18:	ff010113          	addi	sp,sp,-16
80000b1c:	00812623          	sw	s0,12(sp)
80000b20:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:148
    return(0);
80000b24:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:149
}
80000b28:	00078513          	mv	a0,a5
80000b2c:	00c12403          	lw	s0,12(sp)
80000b30:	01010113          	addi	sp,sp,16
80000b34:	00008067          	ret

80000b38 <External_23_IRQHandler>:
External_23_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:152

__attribute__((weak))  uint8_t External_23_IRQHandler(void)
{
80000b38:	ff010113          	addi	sp,sp,-16
80000b3c:	00812623          	sw	s0,12(sp)
80000b40:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:153
    return(0);
80000b44:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:154
}
80000b48:	00078513          	mv	a0,a5
80000b4c:	00c12403          	lw	s0,12(sp)
80000b50:	01010113          	addi	sp,sp,16
80000b54:	00008067          	ret

80000b58 <External_24_IRQHandler>:
External_24_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:157

__attribute__((weak))  uint8_t External_24_IRQHandler(void)
{
80000b58:	ff010113          	addi	sp,sp,-16
80000b5c:	00812623          	sw	s0,12(sp)
80000b60:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:158
    return(0);
80000b64:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:159
}
80000b68:	00078513          	mv	a0,a5
80000b6c:	00c12403          	lw	s0,12(sp)
80000b70:	01010113          	addi	sp,sp,16
80000b74:	00008067          	ret

80000b78 <External_25_IRQHandler>:
External_25_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:162

__attribute__((weak))  uint8_t External_25_IRQHandler(void)
{
80000b78:	ff010113          	addi	sp,sp,-16
80000b7c:	00812623          	sw	s0,12(sp)
80000b80:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:163
    return(0);
80000b84:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:164
}
80000b88:	00078513          	mv	a0,a5
80000b8c:	00c12403          	lw	s0,12(sp)
80000b90:	01010113          	addi	sp,sp,16
80000b94:	00008067          	ret

80000b98 <External_26_IRQHandler>:
External_26_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:167

__attribute__((weak))  uint8_t External_26_IRQHandler(void)
{
80000b98:	ff010113          	addi	sp,sp,-16
80000b9c:	00812623          	sw	s0,12(sp)
80000ba0:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:168
    return(0);
80000ba4:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:169
}
80000ba8:	00078513          	mv	a0,a5
80000bac:	00c12403          	lw	s0,12(sp)
80000bb0:	01010113          	addi	sp,sp,16
80000bb4:	00008067          	ret

80000bb8 <External_27_IRQHandler>:
External_27_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:172

__attribute__((weak))  uint8_t External_27_IRQHandler(void)
{
80000bb8:	ff010113          	addi	sp,sp,-16
80000bbc:	00812623          	sw	s0,12(sp)
80000bc0:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:173
    return(0);
80000bc4:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:174
}
80000bc8:	00078513          	mv	a0,a5
80000bcc:	00c12403          	lw	s0,12(sp)
80000bd0:	01010113          	addi	sp,sp,16
80000bd4:	00008067          	ret

80000bd8 <External_28_IRQHandler>:
External_28_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:177

__attribute__((weak))  uint8_t External_28_IRQHandler(void)
{
80000bd8:	ff010113          	addi	sp,sp,-16
80000bdc:	00812623          	sw	s0,12(sp)
80000be0:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:178
    return(0);
80000be4:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:179
}
80000be8:	00078513          	mv	a0,a5
80000bec:	00c12403          	lw	s0,12(sp)
80000bf0:	01010113          	addi	sp,sp,16
80000bf4:	00008067          	ret

80000bf8 <External_29_IRQHandler>:
External_29_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:182

__attribute__((weak))  uint8_t External_29_IRQHandler(void)
{
80000bf8:	ff010113          	addi	sp,sp,-16
80000bfc:	00812623          	sw	s0,12(sp)
80000c00:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:183
    return(0);
80000c04:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:184
}
80000c08:	00078513          	mv	a0,a5
80000c0c:	00c12403          	lw	s0,12(sp)
80000c10:	01010113          	addi	sp,sp,16
80000c14:	00008067          	ret

80000c18 <External_30_IRQHandler>:
External_30_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:187

__attribute__((weak))  uint8_t External_30_IRQHandler(void)
{
80000c18:	ff010113          	addi	sp,sp,-16
80000c1c:	00812623          	sw	s0,12(sp)
80000c20:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:188
    return(0);
80000c24:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:189
}
80000c28:	00078513          	mv	a0,a5
80000c2c:	00c12403          	lw	s0,12(sp)
80000c30:	01010113          	addi	sp,sp,16
80000c34:	00008067          	ret

80000c38 <External_31_IRQHandler>:
External_31_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:192

__attribute__((weak))  uint8_t External_31_IRQHandler(void)
{
80000c38:	ff010113          	addi	sp,sp,-16
80000c3c:	00812623          	sw	s0,12(sp)
80000c40:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:193
    return(0);
80000c44:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_hal_stubs.c:194
}
80000c48:	00078513          	mv	a0,a5
80000c4c:	00c12403          	lw	s0,12(sp)
80000c50:	01010113          	addi	sp,sp,16
80000c54:	00008067          	ret

80000c58 <write_hex>:
write_hex():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:55

char *__env[1] = { 0 };
char **environ = __env;

void write_hex(int fd, uint32_t hex)
{
80000c58:	fd010113          	addi	sp,sp,-48
80000c5c:	02112623          	sw	ra,44(sp)
80000c60:	02812423          	sw	s0,40(sp)
80000c64:	03010413          	addi	s0,sp,48
80000c68:	fca42e23          	sw	a0,-36(s0)
80000c6c:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:61
    uint8_t ii;
    uint8_t jj;
    char towrite;
    uint8_t digit;

    write( fd , "0x", 2 );
80000c70:	00200613          	li	a2,2
80000c74:	800077b7          	lui	a5,0x80007
80000c78:	98c78593          	addi	a1,a5,-1652 # 8000698c <__stack_top+0xfffc535c>
80000c7c:	fdc42503          	lw	a0,-36(s0)
80000c80:	325050ef          	jal	ra,800067a4 <write>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:63

    for (ii = 8 ; ii > 0; ii--)
80000c84:	00800793          	li	a5,8
80000c88:	fef407a3          	sb	a5,-17(s0)
80000c8c:	0980006f          	j	80000d24 <write_hex+0xcc>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:65
    {
        jj = ii-1;
80000c90:	fef44783          	lbu	a5,-17(s0)
80000c94:	fff78793          	addi	a5,a5,-1
80000c98:	fef40723          	sb	a5,-18(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:66
        digit = ((hex & (0xF << (jj*4))) >> (jj*4));
80000c9c:	fee44783          	lbu	a5,-18(s0)
80000ca0:	00279793          	slli	a5,a5,0x2
80000ca4:	00f00713          	li	a4,15
80000ca8:	00f717b3          	sll	a5,a4,a5
80000cac:	00078713          	mv	a4,a5
80000cb0:	fd842783          	lw	a5,-40(s0)
80000cb4:	00f77733          	and	a4,a4,a5
80000cb8:	fee44783          	lbu	a5,-18(s0)
80000cbc:	00279793          	slli	a5,a5,0x2
80000cc0:	00f757b3          	srl	a5,a4,a5
80000cc4:	fef406a3          	sb	a5,-19(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:67
        towrite = digit < 0xA ? ('0' + digit) : ('A' +  (digit - 0xA));
80000cc8:	fed44703          	lbu	a4,-19(s0)
80000ccc:	00900793          	li	a5,9
80000cd0:	00e7ee63          	bltu	a5,a4,80000cec <write_hex+0x94>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:67 (discriminator 1)
80000cd4:	fed44783          	lbu	a5,-19(s0)
80000cd8:	03078793          	addi	a5,a5,48
80000cdc:	0ff7f793          	andi	a5,a5,255
80000ce0:	01879793          	slli	a5,a5,0x18
80000ce4:	4187d793          	srai	a5,a5,0x18
80000ce8:	0180006f          	j	80000d00 <write_hex+0xa8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:67 (discriminator 2)
80000cec:	fed44783          	lbu	a5,-19(s0)
80000cf0:	03778793          	addi	a5,a5,55
80000cf4:	0ff7f793          	andi	a5,a5,255
80000cf8:	01879793          	slli	a5,a5,0x18
80000cfc:	4187d793          	srai	a5,a5,0x18
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:67 (discriminator 4)
80000d00:	fef40623          	sb	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:68 (discriminator 4)
        write( fd, &towrite, 1);
80000d04:	fec40793          	addi	a5,s0,-20
80000d08:	00100613          	li	a2,1
80000d0c:	00078593          	mv	a1,a5
80000d10:	fdc42503          	lw	a0,-36(s0)
80000d14:	291050ef          	jal	ra,800067a4 <write>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:63 (discriminator 4)
    for (ii = 8 ; ii > 0; ii--)
80000d18:	fef44783          	lbu	a5,-17(s0)
80000d1c:	fff78793          	addi	a5,a5,-1
80000d20:	fef407a3          	sb	a5,-17(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:63 (discriminator 2)
80000d24:	fef44783          	lbu	a5,-17(s0)
80000d28:	f60794e3          	bnez	a5,80000c90 <write_hex+0x38>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:70
    }
}
80000d2c:	00000013          	nop
80000d30:	02c12083          	lw	ra,44(sp)
80000d34:	02812403          	lw	s0,40(sp)
80000d38:	03010113          	addi	sp,sp,48
80000d3c:	00008067          	ret

80000d40 <_exit>:
_exit():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:74

               
void _exit(int code)
{
80000d40:	fd010113          	addi	sp,sp,-48
80000d44:	02112623          	sw	ra,44(sp)
80000d48:	02812423          	sw	s0,40(sp)
80000d4c:	03010413          	addi	s0,sp,48
80000d50:	fca42e23          	sw	a0,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:76
#ifdef MSCC_STDIO_THRU_CORE_UART_APB
    const char * message = "\nProgam has exited with code:";
80000d54:	800077b7          	lui	a5,0x80007
80000d58:	99078793          	addi	a5,a5,-1648 # 80006990 <__stack_top+0xfffc5360>
80000d5c:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:78

    write(STDERR_FILENO, message, strlen(message));
80000d60:	fec42503          	lw	a0,-20(s0)
80000d64:	098010ef          	jal	ra,80001dfc <strlen>
80000d68:	00050793          	mv	a5,a0
80000d6c:	00078613          	mv	a2,a5
80000d70:	fec42583          	lw	a1,-20(s0)
80000d74:	00200513          	li	a0,2
80000d78:	22d050ef          	jal	ra,800067a4 <write>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:79
    write_hex(STDERR_FILENO, code);
80000d7c:	fdc42783          	lw	a5,-36(s0)
80000d80:	00078593          	mv	a1,a5
80000d84:	00200513          	li	a0,2
80000d88:	ed1ff0ef          	jal	ra,80000c58 <write_hex>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:82 (discriminator 1)
#endif

    while (1);
80000d8c:	0000006f          	j	80000d8c <_exit+0x4c>

80000d90 <_isatty>:
_isatty():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:101
    curbrk += incr;
    return curbrk - incr;
}

int _isatty(int fd)
{
80000d90:	fe010113          	addi	sp,sp,-32
80000d94:	00812e23          	sw	s0,28(sp)
80000d98:	02010413          	addi	s0,sp,32
80000d9c:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:102
    if (fd == STDOUT_FILENO || fd == STDERR_FILENO)
80000da0:	fec42703          	lw	a4,-20(s0)
80000da4:	00100793          	li	a5,1
80000da8:	00f70863          	beq	a4,a5,80000db8 <_isatty+0x28>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:102 (discriminator 1)
80000dac:	fec42703          	lw	a4,-20(s0)
80000db0:	00200793          	li	a5,2
80000db4:	00f71663          	bne	a4,a5,80000dc0 <_isatty+0x30>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:104
    {
        return 1;
80000db8:	00100793          	li	a5,1
80000dbc:	0140006f          	j	80000dd0 <_isatty+0x40>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:107
    }

    errno = EBADF;
80000dc0:	800217b7          	lui	a5,0x80021
80000dc4:	00900713          	li	a4,9
80000dc8:	b2e7a823          	sw	a4,-1232(a5) # 80020b30 <__stack_top+0xfffdf500>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:108
    return 0;
80000dcc:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:109
}
80000dd0:	00078513          	mv	a0,a5
80000dd4:	01c12403          	lw	s0,28(sp)
80000dd8:	02010113          	addi	sp,sp,32
80000ddc:	00008067          	ret

80000de0 <stub>:
stub():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:112

static int stub(int err)
{
80000de0:	fe010113          	addi	sp,sp,-32
80000de4:	00812e23          	sw	s0,28(sp)
80000de8:	02010413          	addi	s0,sp,32
80000dec:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:113
    errno = err;
80000df0:	800217b7          	lui	a5,0x80021
80000df4:	fec42703          	lw	a4,-20(s0)
80000df8:	b2e7a823          	sw	a4,-1232(a5) # 80020b30 <__stack_top+0xfffdf500>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:114
    return -1;
80000dfc:	fff00793          	li	a5,-1
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:115
}
80000e00:	00078513          	mv	a0,a5
80000e04:	01c12403          	lw	s0,28(sp)
80000e08:	02010113          	addi	sp,sp,32
80000e0c:	00008067          	ret

80000e10 <_write>:
_write():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:226
{
    return stub(ECHILD);
}

ssize_t _write(int fd, const void* ptr, size_t len)
{
80000e10:	fd010113          	addi	sp,sp,-48
80000e14:	02112623          	sw	ra,44(sp)
80000e18:	02812423          	sw	s0,40(sp)
80000e1c:	03010413          	addi	s0,sp,48
80000e20:	fca42e23          	sw	a0,-36(s0)
80000e24:	fcb42c23          	sw	a1,-40(s0)
80000e28:	fcc42a23          	sw	a2,-44(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:229

#ifdef MSCC_STDIO_THRU_CORE_UART_APB
  const uint8_t * current = (const uint8_t *) ptr;
80000e2c:	fd842783          	lw	a5,-40(s0)
80000e30:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:232
  size_t jj;

  if (_isatty(fd))
80000e34:	fdc42503          	lw	a0,-36(s0)
80000e38:	f59ff0ef          	jal	ra,80000d90 <_isatty>
80000e3c:	00050793          	mv	a5,a0
80000e40:	08078c63          	beqz	a5,80000ed8 <_write+0xc8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:238
  {
        /*--------------------------------------------------------------------------
        * Initialize the UART driver if it is the first time this function is
        * called.
        */
        if ( !g_stdio_uart_init_done )
80000e44:	9101a783          	lw	a5,-1776(gp) # 80006f90 <g_stdio_uart_init_done>
80000e48:	02079063          	bnez	a5,80000e68 <_write+0x58>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:245
            /******************************************************************************
            * Baud value:
            * This value is calculated using the following equation:
            *      BAUD_VALUE = (CLOCK / (16 * BAUD_RATE)) - 1
            *****************************************************************************/
            UART_init( &g_stdio_uart, MSCC_STDIO_UART_BASE_ADDR, ((SYS_CLK_FREQ/(16 * MSCC_STDIO_BAUD_VALUE))-1), (DATA_8_BITS | NO_PARITY));
80000e4c:	00100693          	li	a3,1
80000e50:	02c00613          	li	a2,44
80000e54:	700015b7          	lui	a1,0x70001
80000e58:	90818513          	addi	a0,gp,-1784 # 80006f88 <g_stdio_uart>
80000e5c:	174000ef          	jal	ra,80000fd0 <UART_init>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:246
            g_stdio_uart_init_done = 1;
80000e60:	00100713          	li	a4,1
80000e64:	90e1a823          	sw	a4,-1776(gp) # 80006f90 <g_stdio_uart_init_done>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:249
        }

    for (jj = 0; jj < len; jj++)
80000e68:	fe042623          	sw	zero,-20(s0)
80000e6c:	0580006f          	j	80000ec4 <_write+0xb4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:251
    {
        UART_send(&g_stdio_uart, current + jj, 1);
80000e70:	fe842703          	lw	a4,-24(s0)
80000e74:	fec42783          	lw	a5,-20(s0)
80000e78:	00f707b3          	add	a5,a4,a5
80000e7c:	00100613          	li	a2,1
80000e80:	00078593          	mv	a1,a5
80000e84:	90818513          	addi	a0,gp,-1784 # 80006f88 <g_stdio_uart>
80000e88:	260000ef          	jal	ra,800010e8 <UART_send>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:252
        if (current[jj] == '\n')
80000e8c:	fe842703          	lw	a4,-24(s0)
80000e90:	fec42783          	lw	a5,-20(s0)
80000e94:	00f707b3          	add	a5,a4,a5
80000e98:	0007c703          	lbu	a4,0(a5)
80000e9c:	00a00793          	li	a5,10
80000ea0:	00f71c63          	bne	a4,a5,80000eb8 <_write+0xa8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:254
        {
            UART_send(&g_stdio_uart, (const uint8_t *)"\r", 1);
80000ea4:	00100613          	li	a2,1
80000ea8:	800077b7          	lui	a5,0x80007
80000eac:	9b078593          	addi	a1,a5,-1616 # 800069b0 <__stack_top+0xfffc5380>
80000eb0:	90818513          	addi	a0,gp,-1784 # 80006f88 <g_stdio_uart>
80000eb4:	234000ef          	jal	ra,800010e8 <UART_send>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:249 (discriminator 2)
    for (jj = 0; jj < len; jj++)
80000eb8:	fec42783          	lw	a5,-20(s0)
80000ebc:	00178793          	addi	a5,a5,1
80000ec0:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:249 (discriminator 1)
80000ec4:	fec42703          	lw	a4,-20(s0)
80000ec8:	fd442783          	lw	a5,-44(s0)
80000ecc:	faf762e3          	bltu	a4,a5,80000e70 <_write+0x60>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:257
        }
    }
    return len;
80000ed0:	fd442783          	lw	a5,-44(s0)
80000ed4:	0100006f          	j	80000ee4 <_write+0xd4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:261
  }
#endif

  return stub(EBADF);
80000ed8:	00900513          	li	a0,9
80000edc:	f05ff0ef          	jal	ra,80000de0 <stub>
80000ee0:	00050793          	mv	a5,a0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/syscall.c:262
}
80000ee4:	00078513          	mv	a0,a5
80000ee8:	02c12083          	lw	ra,44(sp)
80000eec:	02812403          	lw	s0,40(sp)
80000ef0:	03010113          	addi	sp,sp,48
80000ef4:	00008067          	ret

80000ef8 <HW_set_32bit_reg>:
HW_set_32bit_reg():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:36
 *
 * a0:   addr_t reg_addr
 * a1:   uint32_t value
 */
HW_set_32bit_reg:
    sw a1, 0(a0)
80000ef8:	00b52023          	sw	a1,0(a0) # 44000000 <RAM_SIZE+0x43f80000>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:37
    ret
80000efc:	00008067          	ret

80000f00 <HW_get_32bit_reg>:
HW_get_32bit_reg():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:47
 *
 * R0:   addr_t reg_addr
 * @return          32 bits value read from the peripheral register.
 */
HW_get_32bit_reg:
    lw a0, 0(a0)
80000f00:	00052503          	lw	a0,0(a0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:48
    ret
80000f04:	00008067          	ret

80000f08 <HW_set_32bit_reg_field>:
HW_set_32bit_reg_field():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:60
 * a1:   int_fast8_t shift
 * a2:   uint32_t mask
 * a3:   uint32_t value
 */
HW_set_32bit_reg_field:
    mv t3, a3
80000f08:	00068e13          	mv	t3,a3
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:61
    sll t3, t3, a1
80000f0c:	00be1e33          	sll	t3,t3,a1
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:62
    and  t3, t3, a2
80000f10:	00ce7e33          	and	t3,t3,a2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:63
    lw t1, 0(a0)
80000f14:	00052303          	lw	t1,0(a0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:64
    mv t2, a2
80000f18:	00060393          	mv	t2,a2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:65
    not t2, t2
80000f1c:	fff3c393          	not	t2,t2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:66
    and t1, t1, t2
80000f20:	00737333          	and	t1,t1,t2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:67
    or t1, t1, t3
80000f24:	01c36333          	or	t1,t1,t3
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:68
    sw t1, 0(a0)
80000f28:	00652023          	sw	t1,0(a0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:69
    ret
80000f2c:	00008067          	ret

80000f30 <HW_get_32bit_reg_field>:
HW_get_32bit_reg_field():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:83
 *
 * @return          32 bits value containing the register field value specified
 *                  as parameter.
 */
HW_get_32bit_reg_field:
    lw a0, 0(a0)
80000f30:	00052503          	lw	a0,0(a0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:84
    and a0, a0, a2
80000f34:	00c57533          	and	a0,a0,a2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:85
    srl a0, a0, a1
80000f38:	00b55533          	srl	a0,a0,a1
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:86
    ret
80000f3c:	00008067          	ret

80000f40 <HW_set_16bit_reg>:
HW_set_16bit_reg():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:96
 *
 * a0:   addr_t reg_addr
 * a1:   uint_fast16_t value
 */
HW_set_16bit_reg:
    sh a1, 0(a0)
80000f40:	00b51023          	sh	a1,0(a0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:97
    ret
80000f44:	00008067          	ret

80000f48 <HW_get_16bit_reg>:
HW_get_16bit_reg():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:107
 *
 * a0:   addr_t reg_addr
 * @return          16 bits value read from the peripheral register.
 */
HW_get_16bit_reg:
    lh a0, (a0)
80000f48:	00051503          	lh	a0,0(a0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:108
    ret
80000f4c:	00008067          	ret

80000f50 <HW_set_16bit_reg_field>:
HW_set_16bit_reg_field():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:121
 * a2:   uint_fast16_t mask
 * a3:   uint_fast16_t value
 * @param value     Value to be written in the specified field.
 */
HW_set_16bit_reg_field:
    mv t3, a3
80000f50:	00068e13          	mv	t3,a3
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:122
    sll t3, t3, a1
80000f54:	00be1e33          	sll	t3,t3,a1
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:123
    and  t3, t3, a2
80000f58:	00ce7e33          	and	t3,t3,a2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:124
    lh t1, 0(a0)
80000f5c:	00051303          	lh	t1,0(a0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:125
    mv t2, a2
80000f60:	00060393          	mv	t2,a2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:126
    not t2, t2
80000f64:	fff3c393          	not	t2,t2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:127
    and t1, t1, t2
80000f68:	00737333          	and	t1,t1,t2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:128
    or t1, t1, t3
80000f6c:	01c36333          	or	t1,t1,t3
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:129
    sh t1, 0(a0)
80000f70:	00651023          	sh	t1,0(a0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:130
    ret
80000f74:	00008067          	ret

80000f78 <HW_get_16bit_reg_field>:
HW_get_16bit_reg_field():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:144
 *
 * @return          16 bits value containing the register field value specified
 *                  as parameter.
 */
HW_get_16bit_reg_field:
    lh a0, 0(a0)
80000f78:	00051503          	lh	a0,0(a0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:145
    and a0, a0, a2
80000f7c:	00c57533          	and	a0,a0,a2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:146
    srl a0, a0, a1
80000f80:	00b55533          	srl	a0,a0,a1
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:147
    ret
80000f84:	00008067          	ret

80000f88 <HW_set_8bit_reg>:
HW_set_8bit_reg():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:157
 *
 * a0:   addr_t reg_addr
 * a1:   uint_fast8_t value
 */
HW_set_8bit_reg:
    sb a1, 0(a0)
80000f88:	00b50023          	sb	a1,0(a0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:158
    ret
80000f8c:	00008067          	ret

80000f90 <HW_get_8bit_reg>:
HW_get_8bit_reg():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:168
 *
 * a0:   addr_t reg_addr
 * @return          8 bits value read from the peripheral register.
 */
HW_get_8bit_reg:
    lb a0, 0(a0)
80000f90:	00050503          	lb	a0,0(a0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:169
    ret
80000f94:	00008067          	ret

80000f98 <HW_set_8bit_reg_field>:
HW_set_8bit_reg_field():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:181
 * a1:   int_fast8_t shift
 * a2:   uint_fast8_t mask
 * a3:   uint_fast8_t value
 */
HW_set_8bit_reg_field:
    mv t3, a3
80000f98:	00068e13          	mv	t3,a3
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:182
    sll t3, t3, a1
80000f9c:	00be1e33          	sll	t3,t3,a1
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:183
    and  t3, t3, a2
80000fa0:	00ce7e33          	and	t3,t3,a2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:184
    lb t1, 0(a0)
80000fa4:	00050303          	lb	t1,0(a0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:185
    mv t2, a2
80000fa8:	00060393          	mv	t2,a2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:186
    not t2, t2
80000fac:	fff3c393          	not	t2,t2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:187
    and t1, t1, t2
80000fb0:	00737333          	and	t1,t1,t2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:188
    or t1, t1, t3
80000fb4:	01c36333          	or	t1,t1,t3
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:189
    sb t1, 0(a0)
80000fb8:	00650023          	sb	t1,0(a0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:190
    ret
80000fbc:	00008067          	ret

80000fc0 <HW_get_8bit_reg_field>:
HW_get_8bit_reg_field():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:204
 *
 * @return          8 bits value containing the register field value specified
 *                  as parameter.
 */
HW_get_8bit_reg_field:
    lb a0, 0(a0)
80000fc0:	00050503          	lb	a0,0(a0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:205
    and a0, a0, a2
80000fc4:	00c57533          	and	a0,a0,a2
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:206
    srl a0, a0, a1
80000fc8:	00b55533          	srl	a0,a0,a1
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../hal/hw_reg_access.S:207
    ret
80000fcc:	00008067          	ret

80000fd0 <UART_init>:
UART_init():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:46
    UART_instance_t * this_uart,
    addr_t base_addr,
    uint16_t baud_value,
    uint8_t line_config
)
{
80000fd0:	fd010113          	addi	sp,sp,-48
80000fd4:	02112623          	sw	ra,44(sp)
80000fd8:	02812423          	sw	s0,40(sp)
80000fdc:	03010413          	addi	s0,sp,48
80000fe0:	fca42e23          	sw	a0,-36(s0)
80000fe4:	fcb42c23          	sw	a1,-40(s0)
80000fe8:	00060793          	mv	a5,a2
80000fec:	00068713          	mv	a4,a3
80000ff0:	fcf41b23          	sh	a5,-42(s0)
80000ff4:	00070793          	mv	a5,a4
80000ff8:	fcf40aa3          	sb	a5,-43(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:53
    
    HAL_ASSERT( this_uart != NULL_INSTANCE )
    HAL_ASSERT( line_config <= MAX_LINE_CONFIG )
    HAL_ASSERT( baud_value <= MAX_BAUD_VALUE )

    if( ( this_uart != NULL_INSTANCE ) &&
80000ffc:	fdc42783          	lw	a5,-36(s0)
80001000:	0c078a63          	beqz	a5,800010d4 <UART_init+0x104>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:53 (discriminator 1)
80001004:	fd544703          	lbu	a4,-43(s0)
80001008:	00700793          	li	a5,7
8000100c:	0ce7e463          	bltu	a5,a4,800010d4 <UART_init+0x104>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:54
        ( line_config <= MAX_LINE_CONFIG ) &&
80001010:	fd645703          	lhu	a4,-42(s0)
80001014:	000027b7          	lui	a5,0x2
80001018:	0af77e63          	bleu	a5,a4,800010d4 <UART_init+0x104>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:60
        ( baud_value <= MAX_BAUD_VALUE ) )
    {
        /*
         * Store lower 8-bits of baud value in CTRL1.
         */
        HAL_set_8bit_reg( base_addr, CTRL1, (uint_fast8_t)(baud_value &
8000101c:	fd842783          	lw	a5,-40(s0)
80001020:	00878713          	addi	a4,a5,8 # 2008 <HEAP_SIZE-0xdff8>
80001024:	fd645783          	lhu	a5,-42(s0)
80001028:	0ff7f793          	andi	a5,a5,255
8000102c:	00078593          	mv	a1,a5
80001030:	00070513          	mv	a0,a4
80001034:	f55ff0ef          	jal	ra,80000f88 <HW_set_8bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:67
    
        /*
         * Extract higher 5-bits of baud value and store in higher 5-bits 
         * of CTRL2, along with line configuration in lower 3 three bits.
         */
        HAL_set_8bit_reg( base_addr, CTRL2, (uint_fast8_t)line_config | 
80001038:	fd842783          	lw	a5,-40(s0)
8000103c:	00c78693          	addi	a3,a5,12
80001040:	fd544703          	lbu	a4,-43(s0)
80001044:	fd645783          	lhu	a5,-42(s0)
80001048:	4057d793          	srai	a5,a5,0x5
8000104c:	7f87f793          	andi	a5,a5,2040
80001050:	00f767b3          	or	a5,a4,a5
80001054:	00078593          	mv	a1,a5
80001058:	00068513          	mv	a0,a3
8000105c:	f2dff0ef          	jal	ra,80000f88 <HW_set_8bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:71
                                           (uint_fast8_t)((baud_value &
                                   BAUDVALUE_MSB) >> BAUDVALUE_SHIFT ) );
    
        this_uart->base_address = base_addr;
80001060:	fdc42783          	lw	a5,-36(s0)
80001064:	fd842703          	lw	a4,-40(s0)
80001068:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:94
        
        /*
         * Flush the receive FIFO of data that may have been received before the
         * driver was initialized.
         */
        rx_full = HAL_get_8bit_reg( this_uart->base_address, STATUS ) &
8000106c:	fdc42783          	lw	a5,-36(s0)
80001070:	0007a783          	lw	a5,0(a5)
80001074:	01078793          	addi	a5,a5,16
80001078:	00078513          	mv	a0,a5
8000107c:	f15ff0ef          	jal	ra,80000f90 <HW_get_8bit_reg>
80001080:	00050793          	mv	a5,a0
80001084:	0027f793          	andi	a5,a5,2
80001088:	fef407a3          	sb	a5,-17(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:96
                                                    STATUS_RXFULL_MASK;
        while ( rx_full )
8000108c:	0380006f          	j	800010c4 <UART_init+0xf4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:98
        {
            HAL_get_8bit_reg( this_uart->base_address, RXDATA );
80001090:	fdc42783          	lw	a5,-36(s0)
80001094:	0007a783          	lw	a5,0(a5)
80001098:	00478793          	addi	a5,a5,4
8000109c:	00078513          	mv	a0,a5
800010a0:	ef1ff0ef          	jal	ra,80000f90 <HW_get_8bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:99
            rx_full = HAL_get_8bit_reg( this_uart->base_address, STATUS ) &
800010a4:	fdc42783          	lw	a5,-36(s0)
800010a8:	0007a783          	lw	a5,0(a5)
800010ac:	01078793          	addi	a5,a5,16
800010b0:	00078513          	mv	a0,a5
800010b4:	eddff0ef          	jal	ra,80000f90 <HW_get_8bit_reg>
800010b8:	00050793          	mv	a5,a0
800010bc:	0027f793          	andi	a5,a5,2
800010c0:	fef407a3          	sb	a5,-17(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:96
        while ( rx_full )
800010c4:	fef44783          	lbu	a5,-17(s0)
800010c8:	fc0794e3          	bnez	a5,80001090 <UART_init+0xc0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:106
        }

        /*
         * Clear status of the UART instance.
         */
        this_uart->status = (uint8_t)0;
800010cc:	fdc42783          	lw	a5,-36(s0)
800010d0:	00078223          	sb	zero,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:108
    }
}
800010d4:	00000013          	nop
800010d8:	02c12083          	lw	ra,44(sp)
800010dc:	02812403          	lw	s0,40(sp)
800010e0:	03010113          	addi	sp,sp,48
800010e4:	00008067          	ret

800010e8 <UART_send>:
UART_send():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:121
(
    UART_instance_t * this_uart,
    const uint8_t * tx_buffer,
    size_t tx_size
)
{
800010e8:	fd010113          	addi	sp,sp,-48
800010ec:	02112623          	sw	ra,44(sp)
800010f0:	02812423          	sw	s0,40(sp)
800010f4:	03010413          	addi	s0,sp,48
800010f8:	fca42e23          	sw	a0,-36(s0)
800010fc:	fcb42c23          	sw	a1,-40(s0)
80001100:	fcc42a23          	sw	a2,-44(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:129

    HAL_ASSERT( this_uart != NULL_INSTANCE )
    HAL_ASSERT( tx_buffer != NULL_BUFFER )
    HAL_ASSERT( tx_size > 0 )
      
    if( (this_uart != NULL_INSTANCE) &&
80001104:	fdc42783          	lw	a5,-36(s0)
80001108:	08078063          	beqz	a5,80001188 <UART_send+0xa0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:129 (discriminator 1)
8000110c:	fd842783          	lw	a5,-40(s0)
80001110:	06078c63          	beqz	a5,80001188 <UART_send+0xa0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:130
        (tx_buffer != NULL_BUFFER)   &&
80001114:	fd442783          	lw	a5,-44(s0)
80001118:	06078863          	beqz	a5,80001188 <UART_send+0xa0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:133
        (tx_size > (size_t)0) )
    {
        for ( char_idx = (size_t)0; char_idx < tx_size; char_idx++ )
8000111c:	fe042623          	sw	zero,-20(s0)
80001120:	05c0006f          	j	8000117c <UART_send+0x94>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:137 (discriminator 1)
        {
            /* Wait for UART to become ready to transmit. */
            do {
                tx_ready = HAL_get_8bit_reg( this_uart->base_address, STATUS ) &
80001124:	fdc42783          	lw	a5,-36(s0)
80001128:	0007a783          	lw	a5,0(a5)
8000112c:	01078793          	addi	a5,a5,16
80001130:	00078513          	mv	a0,a5
80001134:	e5dff0ef          	jal	ra,80000f90 <HW_get_8bit_reg>
80001138:	00050793          	mv	a5,a0
8000113c:	0017f793          	andi	a5,a5,1
80001140:	fef405a3          	sb	a5,-21(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:139 (discriminator 1)
                                                              STATUS_TXRDY_MASK;
            } while ( !tx_ready );
80001144:	feb44783          	lbu	a5,-21(s0)
80001148:	fc078ee3          	beqz	a5,80001124 <UART_send+0x3c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:141 (discriminator 2)
            /* Send next character in the buffer. */
            HAL_set_8bit_reg( this_uart->base_address, TXDATA,
8000114c:	fdc42783          	lw	a5,-36(s0)
80001150:	0007a683          	lw	a3,0(a5)
80001154:	fd842703          	lw	a4,-40(s0)
80001158:	fec42783          	lw	a5,-20(s0)
8000115c:	00f707b3          	add	a5,a4,a5
80001160:	0007c783          	lbu	a5,0(a5)
80001164:	00078593          	mv	a1,a5
80001168:	00068513          	mv	a0,a3
8000116c:	e1dff0ef          	jal	ra,80000f88 <HW_set_8bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:133 (discriminator 2)
        for ( char_idx = (size_t)0; char_idx < tx_size; char_idx++ )
80001170:	fec42783          	lw	a5,-20(s0)
80001174:	00178793          	addi	a5,a5,1
80001178:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:133 (discriminator 1)
8000117c:	fec42703          	lw	a4,-20(s0)
80001180:	fd442783          	lw	a5,-44(s0)
80001184:	faf760e3          	bltu	a4,a5,80001124 <UART_send+0x3c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:145
                              (uint_fast8_t)tx_buffer[char_idx] );
        }
    }
}
80001188:	00000013          	nop
8000118c:	02c12083          	lw	ra,44(sp)
80001190:	02812403          	lw	s0,40(sp)
80001194:	03010113          	addi	sp,sp,48
80001198:	00008067          	ret

8000119c <UART_polled_tx_string>:
UART_polled_tx_string():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:239
UART_polled_tx_string
( 
    UART_instance_t * this_uart, 
    const uint8_t * p_sz_string
)
{
8000119c:	fd010113          	addi	sp,sp,-48
800011a0:	02112623          	sw	ra,44(sp)
800011a4:	02812423          	sw	s0,40(sp)
800011a8:	03010413          	addi	s0,sp,48
800011ac:	fca42e23          	sw	a0,-36(s0)
800011b0:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:246
    uint8_t tx_ready;

    HAL_ASSERT( this_uart != NULL_INSTANCE )
    HAL_ASSERT( p_sz_string != NULL_BUFFER )
    
    if( ( this_uart != NULL_INSTANCE ) && ( p_sz_string != NULL_BUFFER ) )
800011b4:	fdc42783          	lw	a5,-36(s0)
800011b8:	08078063          	beqz	a5,80001238 <UART_polled_tx_string+0x9c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:246 (discriminator 1)
800011bc:	fd842783          	lw	a5,-40(s0)
800011c0:	06078c63          	beqz	a5,80001238 <UART_polled_tx_string+0x9c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:248
    {
        char_idx = 0U;
800011c4:	fe042623          	sw	zero,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:249
        while( 0U != p_sz_string[char_idx] )
800011c8:	05c0006f          	j	80001224 <UART_polled_tx_string+0x88>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:253 (discriminator 1)
        {
            /* Wait for UART to become ready to transmit. */
            do {
                tx_ready = HAL_get_8bit_reg( this_uart->base_address, STATUS ) &
800011cc:	fdc42783          	lw	a5,-36(s0)
800011d0:	0007a783          	lw	a5,0(a5)
800011d4:	01078793          	addi	a5,a5,16
800011d8:	00078513          	mv	a0,a5
800011dc:	db5ff0ef          	jal	ra,80000f90 <HW_get_8bit_reg>
800011e0:	00050793          	mv	a5,a0
800011e4:	0017f793          	andi	a5,a5,1
800011e8:	fef405a3          	sb	a5,-21(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:255 (discriminator 1)
                                                              STATUS_TXRDY_MASK;
            } while ( !tx_ready );
800011ec:	feb44783          	lbu	a5,-21(s0)
800011f0:	fc078ee3          	beqz	a5,800011cc <UART_polled_tx_string+0x30>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:257
            /* Send next character in the buffer. */
            HAL_set_8bit_reg( this_uart->base_address, TXDATA,
800011f4:	fdc42783          	lw	a5,-36(s0)
800011f8:	0007a683          	lw	a3,0(a5)
800011fc:	fd842703          	lw	a4,-40(s0)
80001200:	fec42783          	lw	a5,-20(s0)
80001204:	00f707b3          	add	a5,a4,a5
80001208:	0007c783          	lbu	a5,0(a5)
8000120c:	00078593          	mv	a1,a5
80001210:	00068513          	mv	a0,a3
80001214:	d75ff0ef          	jal	ra,80000f88 <HW_set_8bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:259
                              (uint_fast8_t)p_sz_string[char_idx] );
            char_idx++;
80001218:	fec42783          	lw	a5,-20(s0)
8000121c:	00178793          	addi	a5,a5,1
80001220:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:249
        while( 0U != p_sz_string[char_idx] )
80001224:	fd842703          	lw	a4,-40(s0)
80001228:	fec42783          	lw	a5,-20(s0)
8000122c:	00f707b3          	add	a5,a4,a5
80001230:	0007c783          	lbu	a5,0(a5)
80001234:	f8079ce3          	bnez	a5,800011cc <UART_polled_tx_string+0x30>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../drivers/CoreUARTapb/core_uart_apb.c:262
        }
    }
}
80001238:	00000013          	nop
8000123c:	02c12083          	lw	ra,44(sp)
80001240:	02812403          	lw	s0,40(sp)
80001244:	03010113          	addi	sp,sp,48
80001248:	00008067          	ret

8000124c <pvPortMalloc>:
pvPortMalloc():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:151
}
/*-----------------------------------------------------------*/


void *pvPortMalloc( size_t xWantedSize )
{
8000124c:	fc010113          	addi	sp,sp,-64
80001250:	02112e23          	sw	ra,60(sp)
80001254:	02812c23          	sw	s0,56(sp)
80001258:	04010413          	addi	s0,sp,64
8000125c:	fca42623          	sw	a0,-52(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:154
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
static BaseType_t xHeapHasBeenInitialised = pdFALSE;
void *pvReturn = NULL;
80001260:	fe042223          	sw	zero,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:156

	vTaskSuspendAll();
80001264:	7f5000ef          	jal	ra,80002258 <vTaskSuspendAll>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:160
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( xHeapHasBeenInitialised == pdFALSE )
80001268:	9241a783          	lw	a5,-1756(gp) # 80006fa4 <xHeapHasBeenInitialised.2777>
8000126c:	00079863          	bnez	a5,8000127c <pvPortMalloc+0x30>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:162
		{
			prvHeapInit();
80001270:	284000ef          	jal	ra,800014f4 <prvHeapInit>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:163
			xHeapHasBeenInitialised = pdTRUE;
80001274:	00100713          	li	a4,1
80001278:	92e1a223          	sw	a4,-1756(gp) # 80006fa4 <xHeapHasBeenInitialised.2777>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:168
		}

		/* The wanted size is increased so it can contain a BlockLink_t
		structure in addition to the requested amount of bytes. */
		if( xWantedSize > 0 )
8000127c:	fcc42783          	lw	a5,-52(s0)
80001280:	02078a63          	beqz	a5,800012b4 <pvPortMalloc+0x68>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:170
		{
			xWantedSize += heapSTRUCT_SIZE;
80001284:	00800793          	li	a5,8
80001288:	00078713          	mv	a4,a5
8000128c:	fcc42783          	lw	a5,-52(s0)
80001290:	00e787b3          	add	a5,a5,a4
80001294:	fcf42623          	sw	a5,-52(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:173

			/* Ensure that blocks are always aligned to the required number of bytes. */
			if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0 )
80001298:	fcc42783          	lw	a5,-52(s0)
8000129c:	0037f793          	andi	a5,a5,3
800012a0:	00078a63          	beqz	a5,800012b4 <pvPortMalloc+0x68>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:176
			{
				/* Byte alignment required. */
				xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
800012a4:	fcc42783          	lw	a5,-52(s0)
800012a8:	ffc7f793          	andi	a5,a5,-4
800012ac:	00478793          	addi	a5,a5,4
800012b0:	fcf42623          	sw	a5,-52(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:180
			}
		}

		if( ( xWantedSize > 0 ) && ( xWantedSize < configADJUSTED_HEAP_SIZE ) )
800012b4:	fcc42783          	lw	a5,-52(s0)
800012b8:	14078463          	beqz	a5,80001400 <pvPortMalloc+0x1b4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:180 (discriminator 1)
800012bc:	fcc42703          	lw	a4,-52(s0)
800012c0:	000197b7          	lui	a5,0x19
800012c4:	ffb78793          	addi	a5,a5,-5 # 18ffb <HEAP_SIZE+0x8ffb>
800012c8:	12e7ec63          	bltu	a5,a4,80001400 <pvPortMalloc+0x1b4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:184
		{
			/* Blocks are stored in byte order - traverse the list from the start
			(smallest) block until one of adequate size is found. */
			pxPreviousBlock = &xStart;
800012cc:	91418793          	addi	a5,gp,-1772 # 80006f94 <xStart>
800012d0:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:185
			pxBlock = xStart.pxNextFreeBlock;
800012d4:	9141a783          	lw	a5,-1772(gp) # 80006f94 <xStart>
800012d8:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:186
			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
800012dc:	0180006f          	j	800012f4 <pvPortMalloc+0xa8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:188
			{
				pxPreviousBlock = pxBlock;
800012e0:	fec42783          	lw	a5,-20(s0)
800012e4:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:189
				pxBlock = pxBlock->pxNextFreeBlock;
800012e8:	fec42783          	lw	a5,-20(s0)
800012ec:	0007a783          	lw	a5,0(a5)
800012f0:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:186
			while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
800012f4:	fec42783          	lw	a5,-20(s0)
800012f8:	0047a783          	lw	a5,4(a5)
800012fc:	fcc42703          	lw	a4,-52(s0)
80001300:	00e7f863          	bleu	a4,a5,80001310 <pvPortMalloc+0xc4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:186 (discriminator 1)
80001304:	fec42783          	lw	a5,-20(s0)
80001308:	0007a783          	lw	a5,0(a5)
8000130c:	fc079ae3          	bnez	a5,800012e0 <pvPortMalloc+0x94>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:193
			}

			/* If we found the end marker then a block of adequate size was not found. */
			if( pxBlock != &xEnd )
80001310:	fec42703          	lw	a4,-20(s0)
80001314:	91c18793          	addi	a5,gp,-1764 # 80006f9c <xEnd>
80001318:	0ef70463          	beq	a4,a5,80001400 <pvPortMalloc+0x1b4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:197
			{
				/* Return the memory space - jumping over the BlockLink_t structure
				at its start. */
				pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + heapSTRUCT_SIZE );
8000131c:	fe842783          	lw	a5,-24(s0)
80001320:	0007a783          	lw	a5,0(a5)
80001324:	00800713          	li	a4,8
80001328:	00e787b3          	add	a5,a5,a4
8000132c:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:201

				/* This block is being returned for use so must be taken out of the
				list of free blocks. */
				pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
80001330:	fec42783          	lw	a5,-20(s0)
80001334:	0007a703          	lw	a4,0(a5)
80001338:	fe842783          	lw	a5,-24(s0)
8000133c:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:204

				/* If the block is larger than required it can be split into two. */
				if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
80001340:	fec42783          	lw	a5,-20(s0)
80001344:	0047a703          	lw	a4,4(a5)
80001348:	fcc42783          	lw	a5,-52(s0)
8000134c:	40f707b3          	sub	a5,a4,a5
80001350:	00800713          	li	a4,8
80001354:	00171713          	slli	a4,a4,0x1
80001358:	08f77663          	bleu	a5,a4,800013e4 <pvPortMalloc+0x198>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:209
				{
					/* This block is to be split into two.  Create a new block
					following the number of bytes requested. The void cast is
					used to prevent byte alignment warnings from the compiler. */
					pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
8000135c:	fec42703          	lw	a4,-20(s0)
80001360:	fcc42783          	lw	a5,-52(s0)
80001364:	00f707b3          	add	a5,a4,a5
80001368:	fcf42e23          	sw	a5,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:213

					/* Calculate the sizes of two blocks split from the single
					block. */
					pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
8000136c:	fec42783          	lw	a5,-20(s0)
80001370:	0047a703          	lw	a4,4(a5)
80001374:	fcc42783          	lw	a5,-52(s0)
80001378:	40f70733          	sub	a4,a4,a5
8000137c:	fdc42783          	lw	a5,-36(s0)
80001380:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:214
					pxBlock->xBlockSize = xWantedSize;
80001384:	fec42783          	lw	a5,-20(s0)
80001388:	fcc42703          	lw	a4,-52(s0)
8000138c:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:217

					/* Insert the new block into the list of free blocks. */
					prvInsertBlockIntoFreeList( ( pxNewBlockLink ) );
80001390:	fdc42783          	lw	a5,-36(s0)
80001394:	0047a783          	lw	a5,4(a5)
80001398:	fcf42c23          	sw	a5,-40(s0)
8000139c:	91418793          	addi	a5,gp,-1772 # 80006f94 <xStart>
800013a0:	fef42023          	sw	a5,-32(s0)
800013a4:	0100006f          	j	800013b4 <pvPortMalloc+0x168>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:217 (discriminator 3)
800013a8:	fe042783          	lw	a5,-32(s0)
800013ac:	0007a783          	lw	a5,0(a5)
800013b0:	fef42023          	sw	a5,-32(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:217 (discriminator 1)
800013b4:	fe042783          	lw	a5,-32(s0)
800013b8:	0007a783          	lw	a5,0(a5)
800013bc:	0047a783          	lw	a5,4(a5)
800013c0:	fd842703          	lw	a4,-40(s0)
800013c4:	fee7e2e3          	bltu	a5,a4,800013a8 <pvPortMalloc+0x15c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:217 (discriminator 4)
800013c8:	fe042783          	lw	a5,-32(s0)
800013cc:	0007a703          	lw	a4,0(a5)
800013d0:	fdc42783          	lw	a5,-36(s0)
800013d4:	00e7a023          	sw	a4,0(a5)
800013d8:	fe042783          	lw	a5,-32(s0)
800013dc:	fdc42703          	lw	a4,-36(s0)
800013e0:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:220
				}

				xFreeBytesRemaining -= pxBlock->xBlockSize;
800013e4:	800077b7          	lui	a5,0x80007
800013e8:	e807a703          	lw	a4,-384(a5) # 80006e80 <__stack_top+0xfffc5850>
800013ec:	fec42783          	lw	a5,-20(s0)
800013f0:	0047a783          	lw	a5,4(a5)
800013f4:	40f70733          	sub	a4,a4,a5
800013f8:	800077b7          	lui	a5,0x80007
800013fc:	e8e7a023          	sw	a4,-384(a5) # 80006e80 <__stack_top+0xfffc5850>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:226
			}
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
80001400:	681000ef          	jal	ra,80002280 <xTaskResumeAll>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:230

	#if( configUSE_MALLOC_FAILED_HOOK == 1 )
	{
		if( pvReturn == NULL )
80001404:	fe442783          	lw	a5,-28(s0)
80001408:	00079463          	bnez	a5,80001410 <pvPortMalloc+0x1c4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:233
		{
			extern void vApplicationMallocFailedHook( void );
			vApplicationMallocFailedHook();
8000140c:	21c050ef          	jal	ra,80006628 <vApplicationMallocFailedHook>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:238
		}
	}
	#endif

	return pvReturn;
80001410:	fe442783          	lw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:239
}
80001414:	00078513          	mv	a0,a5
80001418:	03c12083          	lw	ra,60(sp)
8000141c:	03812403          	lw	s0,56(sp)
80001420:	04010113          	addi	sp,sp,64
80001424:	00008067          	ret

80001428 <vPortFree>:
vPortFree():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:243
/*-----------------------------------------------------------*/

void vPortFree( void *pv )
{
80001428:	fd010113          	addi	sp,sp,-48
8000142c:	02112623          	sw	ra,44(sp)
80001430:	02812423          	sw	s0,40(sp)
80001434:	03010413          	addi	s0,sp,48
80001438:	fca42e23          	sw	a0,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:244
uint8_t *puc = ( uint8_t * ) pv;
8000143c:	fdc42783          	lw	a5,-36(s0)
80001440:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:247
BlockLink_t *pxLink;

	if( pv != NULL )
80001444:	fdc42783          	lw	a5,-36(s0)
80001448:	08078c63          	beqz	a5,800014e0 <vPortFree+0xb8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:251
	{
		/* The memory being freed will have an BlockLink_t structure immediately
		before it. */
		puc -= heapSTRUCT_SIZE;
8000144c:	00800793          	li	a5,8
80001450:	40f007b3          	neg	a5,a5
80001454:	fe842703          	lw	a4,-24(s0)
80001458:	00f707b3          	add	a5,a4,a5
8000145c:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:255

		/* This unexpected casting is to keep some compilers from issuing
		byte alignment warnings. */
		pxLink = ( void * ) puc;
80001460:	fe842783          	lw	a5,-24(s0)
80001464:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:257

		vTaskSuspendAll();
80001468:	5f1000ef          	jal	ra,80002258 <vTaskSuspendAll>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:260
		{
			/* Add this block to the list of free blocks. */
			prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
8000146c:	fe442783          	lw	a5,-28(s0)
80001470:	0047a783          	lw	a5,4(a5)
80001474:	fef42023          	sw	a5,-32(s0)
80001478:	91418793          	addi	a5,gp,-1772 # 80006f94 <xStart>
8000147c:	fef42623          	sw	a5,-20(s0)
80001480:	0100006f          	j	80001490 <vPortFree+0x68>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:260 (discriminator 3)
80001484:	fec42783          	lw	a5,-20(s0)
80001488:	0007a783          	lw	a5,0(a5)
8000148c:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:260 (discriminator 1)
80001490:	fec42783          	lw	a5,-20(s0)
80001494:	0007a783          	lw	a5,0(a5)
80001498:	0047a783          	lw	a5,4(a5)
8000149c:	fe042703          	lw	a4,-32(s0)
800014a0:	fee7e2e3          	bltu	a5,a4,80001484 <vPortFree+0x5c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:260 (discriminator 4)
800014a4:	fec42783          	lw	a5,-20(s0)
800014a8:	0007a703          	lw	a4,0(a5)
800014ac:	fe442783          	lw	a5,-28(s0)
800014b0:	00e7a023          	sw	a4,0(a5)
800014b4:	fec42783          	lw	a5,-20(s0)
800014b8:	fe442703          	lw	a4,-28(s0)
800014bc:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:261 (discriminator 4)
			xFreeBytesRemaining += pxLink->xBlockSize;
800014c0:	fe442783          	lw	a5,-28(s0)
800014c4:	0047a703          	lw	a4,4(a5)
800014c8:	800077b7          	lui	a5,0x80007
800014cc:	e807a783          	lw	a5,-384(a5) # 80006e80 <__stack_top+0xfffc5850>
800014d0:	00f70733          	add	a4,a4,a5
800014d4:	800077b7          	lui	a5,0x80007
800014d8:	e8e7a023          	sw	a4,-384(a5) # 80006e80 <__stack_top+0xfffc5850>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:264 (discriminator 4)
			traceFREE( pv, pxLink->xBlockSize );
		}
		( void ) xTaskResumeAll();
800014dc:	5a5000ef          	jal	ra,80002280 <xTaskResumeAll>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:266
	}
}
800014e0:	00000013          	nop
800014e4:	02c12083          	lw	ra,44(sp)
800014e8:	02812403          	lw	s0,40(sp)
800014ec:	03010113          	addi	sp,sp,48
800014f0:	00008067          	ret

800014f4 <prvHeapInit>:
prvHeapInit():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:282
	/* This just exists to keep the linker quiet. */
}
/*-----------------------------------------------------------*/

static void prvHeapInit( void )
{
800014f4:	fe010113          	addi	sp,sp,-32
800014f8:	00812e23          	sw	s0,28(sp)
800014fc:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:287
BlockLink_t *pxFirstFreeBlock;
uint8_t *pucAlignedHeap;

	/* Ensure the heap starts on a correctly aligned boundary. */
	pucAlignedHeap = ( uint8_t * ) ( ( ( portPOINTER_SIZE_TYPE ) &ucHeap[ portBYTE_ALIGNMENT ] ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) );
80001500:	800077b7          	lui	a5,0x80007
80001504:	ff478793          	addi	a5,a5,-12 # 80006ff4 <__stack_top+0xfffc59c4>
80001508:	ffc7f793          	andi	a5,a5,-4
8000150c:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:291

	/* xStart is used to hold a pointer to the first item in the list of free
	blocks.  The void cast is used to prevent compiler warnings. */
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
80001510:	fec42703          	lw	a4,-20(s0)
80001514:	90e1aa23          	sw	a4,-1772(gp) # 80006f94 <xStart>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:292
	xStart.xBlockSize = ( size_t ) 0;
80001518:	91418793          	addi	a5,gp,-1772 # 80006f94 <xStart>
8000151c:	0007a223          	sw	zero,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:295

	/* xEnd is used to mark the end of the list of free blocks. */
	xEnd.xBlockSize = configADJUSTED_HEAP_SIZE;
80001520:	91c18793          	addi	a5,gp,-1764 # 80006f9c <xEnd>
80001524:	00019737          	lui	a4,0x19
80001528:	ffc70713          	addi	a4,a4,-4 # 18ffc <HEAP_SIZE+0x8ffc>
8000152c:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:296
	xEnd.pxNextFreeBlock = NULL;
80001530:	9001ae23          	sw	zero,-1764(gp) # 80006f9c <xEnd>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:300

	/* To start with there is a single free block that is sized to take up the
	entire heap space. */
	pxFirstFreeBlock = ( void * ) pucAlignedHeap;
80001534:	fec42783          	lw	a5,-20(s0)
80001538:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:301
	pxFirstFreeBlock->xBlockSize = configADJUSTED_HEAP_SIZE;
8000153c:	fe842783          	lw	a5,-24(s0)
80001540:	00019737          	lui	a4,0x19
80001544:	ffc70713          	addi	a4,a4,-4 # 18ffc <HEAP_SIZE+0x8ffc>
80001548:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:302
	pxFirstFreeBlock->pxNextFreeBlock = &xEnd;
8000154c:	fe842783          	lw	a5,-24(s0)
80001550:	91c18713          	addi	a4,gp,-1764 # 80006f9c <xEnd>
80001554:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/MemMang/heap_2.c:303
}
80001558:	00000013          	nop
8000155c:	01c12403          	lw	s0,28(sp)
80001560:	02010113          	addi	sp,sp,32
80001564:	00008067          	ret

80001568 <raise_soft_interrupt>:
raise_soft_interrupt():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:227
/*==============================================================================
 * The function raise_soft_interrupt() raises a synchronous software interrupt by
 * writing into the MSIP register.
 */
static inline void raise_soft_interrupt()
{
80001568:	fe010113          	addi	sp,sp,-32
8000156c:	00812e23          	sw	s0,28(sp)
80001570:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:228
    unsigned long hart_id = read_csr(mhartid);
80001574:	f14027f3          	csrr	a5,mhartid
80001578:	fef42623          	sw	a5,-20(s0)
8000157c:	fec42783          	lw	a5,-20(s0)
80001580:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:231

    /*You need to make sure that the global interrupt is enabled*/
    set_csr(mie, MIP_MSIP);       /*Enable software interrupt bit */
80001584:	304467f3          	csrrsi	a5,mie,8
80001588:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:232
    PRCI->MSIP[hart_id] = 0x01;   /*raise soft interrupt for hart0*/
8000158c:	44000737          	lui	a4,0x44000
80001590:	fe842783          	lw	a5,-24(s0)
80001594:	00279793          	slli	a5,a5,0x2
80001598:	00f707b3          	add	a5,a4,a5
8000159c:	00100713          	li	a4,1
800015a0:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:233
}
800015a4:	00000013          	nop
800015a8:	01c12403          	lw	s0,28(sp)
800015ac:	02010113          	addi	sp,sp,32
800015b0:	00008067          	ret

800015b4 <vPortEnterCritical>:
vPortEnterCritical():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:132
 * Used to catch tasks that attempt to return from their implementing function.
 */
static void prvTaskExitError( void );

void vPortEnterCritical( void )
{
800015b4:	ff010113          	addi	sp,sp,-16
800015b8:	00812623          	sw	s0,12(sp)
800015bc:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:133
	portDISABLE_INTERRUPTS();
800015c0:	30047073          	csrci	mstatus,8
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:134
	uxCriticalNesting++;
800015c4:	800077b7          	lui	a5,0x80007
800015c8:	e847a783          	lw	a5,-380(a5) # 80006e84 <__stack_top+0xfffc5854>
800015cc:	00178713          	addi	a4,a5,1
800015d0:	800077b7          	lui	a5,0x80007
800015d4:	e8e7a223          	sw	a4,-380(a5) # 80006e84 <__stack_top+0xfffc5854>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:135
}
800015d8:	00000013          	nop
800015dc:	00c12403          	lw	s0,12(sp)
800015e0:	01010113          	addi	sp,sp,16
800015e4:	00008067          	ret

800015e8 <vPortExitCritical>:
vPortExitCritical():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:139
/*-----------------------------------------------------------*/

void vPortExitCritical( void )
{
800015e8:	ff010113          	addi	sp,sp,-16
800015ec:	00812623          	sw	s0,12(sp)
800015f0:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:140
	uxCriticalNesting--;
800015f4:	800077b7          	lui	a5,0x80007
800015f8:	e847a783          	lw	a5,-380(a5) # 80006e84 <__stack_top+0xfffc5854>
800015fc:	fff78713          	addi	a4,a5,-1
80001600:	800077b7          	lui	a5,0x80007
80001604:	e8e7a223          	sw	a4,-380(a5) # 80006e84 <__stack_top+0xfffc5854>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:141
	if( uxCriticalNesting == 0 )
80001608:	800077b7          	lui	a5,0x80007
8000160c:	e847a783          	lw	a5,-380(a5) # 80006e84 <__stack_top+0xfffc5854>
80001610:	00079463          	bnez	a5,80001618 <vPortExitCritical+0x30>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:143
	{
		portENABLE_INTERRUPTS();
80001614:	30046073          	csrsi	mstatus,8
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:145
	}
}
80001618:	00000013          	nop
8000161c:	00c12403          	lw	s0,12(sp)
80001620:	01010113          	addi	sp,sp,16
80001624:	00008067          	ret

80001628 <prvSetNextTimerInterrupt>:
prvSetNextTimerInterrupt():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:151
/*-----------------------------------------------------------*/

/* Sets the next timer interrupt
 * Reads previous timer compare register, and adds tickrate */
static void prvSetNextTimerInterrupt(void)
{
80001628:	fe010113          	addi	sp,sp,-32
8000162c:	00812e23          	sw	s0,28(sp)
80001630:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:154
	uint64_t time;

	time = mtime->val_low;
80001634:	80007637          	lui	a2,0x80007
80001638:	e8862603          	lw	a2,-376(a2) # 80006e88 <__stack_top+0xfffc5858>
8000163c:	00062603          	lw	a2,0(a2)
80001640:	fec42423          	sw	a2,-24(s0)
80001644:	fe042623          	sw	zero,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:155
	time |= ((uint64_t)mtime->val_high << 32);
80001648:	80007637          	lui	a2,0x80007
8000164c:	e8862603          	lw	a2,-376(a2) # 80006e88 <__stack_top+0xfffc5858>
80001650:	00462603          	lw	a2,4(a2)
80001654:	00060693          	mv	a3,a2
80001658:	00000713          	li	a4,0
8000165c:	00069813          	slli	a6,a3,0x0
80001660:	00000793          	li	a5,0
80001664:	fe842703          	lw	a4,-24(s0)
80001668:	00f76733          	or	a4,a4,a5
8000166c:	fee42423          	sw	a4,-24(s0)
80001670:	fec42703          	lw	a4,-20(s0)
80001674:	010767b3          	or	a5,a4,a6
80001678:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:157

	time += (configCPU_CLOCK_HZ / configTICK_RATE_HZ);
8000167c:	fe842683          	lw	a3,-24(s0)
80001680:	fec42703          	lw	a4,-20(s0)
80001684:	000145b7          	lui	a1,0x14
80001688:	43858593          	addi	a1,a1,1080 # 14438 <HEAP_SIZE+0x4438>
8000168c:	00000613          	li	a2,0
80001690:	00b687b3          	add	a5,a3,a1
80001694:	00078513          	mv	a0,a5
80001698:	00d53533          	sltu	a0,a0,a3
8000169c:	00c70833          	add	a6,a4,a2
800016a0:	01050733          	add	a4,a0,a6
800016a4:	00070813          	mv	a6,a4
800016a8:	fef42423          	sw	a5,-24(s0)
800016ac:	ff042623          	sw	a6,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:159

	mtimecmp->val_low = (uint32_t)(time & 0xFFFFFFFF);
800016b0:	800077b7          	lui	a5,0x80007
800016b4:	e8c7a783          	lw	a5,-372(a5) # 80006e8c <__stack_top+0xfffc585c>
800016b8:	fe842703          	lw	a4,-24(s0)
800016bc:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:160
	mtimecmp->val_high = (uint32_t)((time >> 32) & 0xFFFFFFFF);
800016c0:	fec42783          	lw	a5,-20(s0)
800016c4:	0007d313          	srli	t1,a5,0x0
800016c8:	00000393          	li	t2,0
800016cc:	800077b7          	lui	a5,0x80007
800016d0:	e8c7a783          	lw	a5,-372(a5) # 80006e8c <__stack_top+0xfffc585c>
800016d4:	00030713          	mv	a4,t1
800016d8:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:163

	/* Enable timer interrupt */
	__asm volatile("csrs mie,%0"::"r"(0x80));
800016dc:	08000793          	li	a5,128
800016e0:	3047a073          	csrs	mie,a5
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:164
}
800016e4:	00000013          	nop
800016e8:	01c12403          	lw	s0,28(sp)
800016ec:	02010113          	addi	sp,sp,32
800016f0:	00008067          	ret

800016f4 <vPortSetupTimer>:
vPortSetupTimer():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:169
/*-----------------------------------------------------------*/

/* Sets and enable the timer interrupt */
void vPortSetupTimer(void)
{
800016f4:	fe010113          	addi	sp,sp,-32
800016f8:	00812e23          	sw	s0,28(sp)
800016fc:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:172
	uint64_t time;

	time = mtime->val_low;
80001700:	80007637          	lui	a2,0x80007
80001704:	e8862603          	lw	a2,-376(a2) # 80006e88 <__stack_top+0xfffc5858>
80001708:	00062603          	lw	a2,0(a2)
8000170c:	fec42423          	sw	a2,-24(s0)
80001710:	fe042623          	sw	zero,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:173
	time |= ((uint64_t)mtime->val_high << 32);
80001714:	80007637          	lui	a2,0x80007
80001718:	e8862603          	lw	a2,-376(a2) # 80006e88 <__stack_top+0xfffc5858>
8000171c:	00462603          	lw	a2,4(a2)
80001720:	00060693          	mv	a3,a2
80001724:	00000713          	li	a4,0
80001728:	00069813          	slli	a6,a3,0x0
8000172c:	00000793          	li	a5,0
80001730:	fe842703          	lw	a4,-24(s0)
80001734:	00f76733          	or	a4,a4,a5
80001738:	fee42423          	sw	a4,-24(s0)
8000173c:	fec42703          	lw	a4,-20(s0)
80001740:	010767b3          	or	a5,a4,a6
80001744:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:175

	time += (configCPU_CLOCK_HZ / configTICK_RATE_HZ);
80001748:	fe842683          	lw	a3,-24(s0)
8000174c:	fec42703          	lw	a4,-20(s0)
80001750:	000145b7          	lui	a1,0x14
80001754:	43858593          	addi	a1,a1,1080 # 14438 <HEAP_SIZE+0x4438>
80001758:	00000613          	li	a2,0
8000175c:	00b687b3          	add	a5,a3,a1
80001760:	00078513          	mv	a0,a5
80001764:	00d53533          	sltu	a0,a0,a3
80001768:	00c70833          	add	a6,a4,a2
8000176c:	01050733          	add	a4,a0,a6
80001770:	00070813          	mv	a6,a4
80001774:	fef42423          	sw	a5,-24(s0)
80001778:	ff042623          	sw	a6,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:177

	mtimecmp->val_low = (uint32_t)(time & 0xFFFFFFFF);
8000177c:	800077b7          	lui	a5,0x80007
80001780:	e8c7a783          	lw	a5,-372(a5) # 80006e8c <__stack_top+0xfffc585c>
80001784:	fe842703          	lw	a4,-24(s0)
80001788:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:178
	mtimecmp->val_high = (uint32_t)((time >> 32) & 0xFFFFFFFF);
8000178c:	fec42783          	lw	a5,-20(s0)
80001790:	0007d313          	srli	t1,a5,0x0
80001794:	00000393          	li	t2,0
80001798:	800077b7          	lui	a5,0x80007
8000179c:	e8c7a783          	lw	a5,-372(a5) # 80006e8c <__stack_top+0xfffc585c>
800017a0:	00030713          	mv	a4,t1
800017a4:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:182


	/* Enable timer interrupt */
	__asm volatile("csrs mie,%0"::"r"(0x80));
800017a8:	08000793          	li	a5,128
800017ac:	3047a073          	csrs	mie,a5
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:183
}
800017b0:	00000013          	nop
800017b4:	01c12403          	lw	s0,28(sp)
800017b8:	02010113          	addi	sp,sp,32
800017bc:	00008067          	ret

800017c0 <prvTaskExitError>:
prvTaskExitError():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:187
/*-----------------------------------------------------------*/

void prvTaskExitError( void )
{
800017c0:	ff010113          	addi	sp,sp,-16
800017c4:	00812623          	sw	s0,12(sp)
800017c8:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:194
	its caller as there is nothing to return to.  If a task wants to exit it
	should instead call vTaskDelete( NULL ).

	Artificially force an assert() to be triggered if configASSERT() is
	defined, then stop here so application writers can catch the error. */
	configASSERT( uxCriticalNesting == ~0UL );
800017cc:	800077b7          	lui	a5,0x80007
800017d0:	e847a703          	lw	a4,-380(a5) # 80006e84 <__stack_top+0xfffc5854>
800017d4:	fff00793          	li	a5,-1
800017d8:	00f70663          	beq	a4,a5,800017e4 <prvTaskExitError+0x24>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:194 (discriminator 1)
800017dc:	30047073          	csrci	mstatus,8
800017e0:	0000006f          	j	800017e0 <prvTaskExitError+0x20>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:195
	portDISABLE_INTERRUPTS();
800017e4:	30047073          	csrci	mstatus,8
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:196 (discriminator 2)
	for( ;; );
800017e8:	0000006f          	j	800017e8 <prvTaskExitError+0x28>

800017ec <pxPortInitialiseStack>:
pxPortInitialiseStack():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:220

/*
 * See header file for description.
 */
StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t pxCode, void *pvParameters )
{
800017ec:	fe010113          	addi	sp,sp,-32
800017f0:	00812e23          	sw	s0,28(sp)
800017f4:	02010413          	addi	s0,sp,32
800017f8:	fea42623          	sw	a0,-20(s0)
800017fc:	feb42423          	sw	a1,-24(s0)
80001800:	fec42223          	sw	a2,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:224
	/* Simulate the stack frame as it would be created by a context switch
	interrupt. */
	register int *tp asm("x3");
	pxTopOfStack--;
80001804:	fec42783          	lw	a5,-20(s0)
80001808:	ffc78793          	addi	a5,a5,-4
8000180c:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:225
	*pxTopOfStack = (portSTACK_TYPE)pxCode;			/* Start address */
80001810:	fe842703          	lw	a4,-24(s0)
80001814:	fec42783          	lw	a5,-20(s0)
80001818:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:226
	pxTopOfStack -= 22;
8000181c:	fec42783          	lw	a5,-20(s0)
80001820:	fa878793          	addi	a5,a5,-88
80001824:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:227
	*pxTopOfStack = (portSTACK_TYPE)pvParameters;	/* Register a0 */
80001828:	fe442703          	lw	a4,-28(s0)
8000182c:	fec42783          	lw	a5,-20(s0)
80001830:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:228
	pxTopOfStack -= 6;
80001834:	fec42783          	lw	a5,-20(s0)
80001838:	fe878793          	addi	a5,a5,-24
8000183c:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:229
	*pxTopOfStack = (portSTACK_TYPE)tp; /* Register thread pointer */
80001840:	00018793          	mv	a5,gp
80001844:	00078713          	mv	a4,a5
80001848:	fec42783          	lw	a5,-20(s0)
8000184c:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:230
	pxTopOfStack -= 3;
80001850:	fec42783          	lw	a5,-20(s0)
80001854:	ff478793          	addi	a5,a5,-12
80001858:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:231
	*pxTopOfStack = (portSTACK_TYPE)prvTaskExitError; /* Register ra */
8000185c:	800017b7          	lui	a5,0x80001
80001860:	7c078713          	addi	a4,a5,1984 # 800017c0 <__stack_top+0xfffc0190>
80001864:	fec42783          	lw	a5,-20(s0)
80001868:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:233

	return pxTopOfStack;
8000186c:	fec42783          	lw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:234
}
80001870:	00078513          	mv	a0,a5
80001874:	01c12403          	lw	s0,28(sp)
80001878:	02010113          	addi	sp,sp,32
8000187c:	00008067          	ret

80001880 <SysTick_Handler>:
SysTick_Handler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:238
/*-----------------------------------------------------------*/

void vPortSysTickHandler( void )
{
80001880:	ff010113          	addi	sp,sp,-16
80001884:	00112623          	sw	ra,12(sp)
80001888:	00812423          	sw	s0,8(sp)
8000188c:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:241
	/*Save Context*/
	{
		__asm volatile("lw	t0, pxCurrentTCB");
80001890:	92c1a283          	lw	t0,-1748(gp) # 80006fac <pxCurrentTCB>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:242
		__asm volatile("sw	a2, 0x0(t0)");
80001894:	00c2a023          	sw	a2,0(t0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:246
	}

	/* Increment the RTOS tick. */
	prvSetNextTimerInterrupt();
80001898:	d91ff0ef          	jal	ra,80001628 <prvSetNextTimerInterrupt>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:249

	/*Switch task */
	if( xTaskIncrementTick() != pdFALSE )
8000189c:	37d000ef          	jal	ra,80002418 <xTaskIncrementTick>
800018a0:	00050793          	mv	a5,a0
800018a4:	00078463          	beqz	a5,800018ac <SysTick_Handler+0x2c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:251
	{
		vTaskSwitchContext();
800018a8:	55d000ef          	jal	ra,80002604 <vTaskSwitchContext>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:256
	}

	/*Restore Context*/
	{
		__asm volatile("lw	sp, pxCurrentTCB");
800018ac:	92c1a103          	lw	sp,-1748(gp) # 80006fac <pxCurrentTCB>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:257
		__asm volatile("lw	sp, 0x0(sp)");
800018b0:	00012103          	lw	sp,0(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:259

		__asm volatile("lw	t0, 31 * 4(sp)");
800018b4:	07c12283          	lw	t0,124(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:260
		__asm volatile("csrw	mepc, t0");
800018b8:	34129073          	csrw	mepc,t0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:262

		__asm volatile("lw	x1, 0x0(sp)");
800018bc:	00012083          	lw	ra,0(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:263
		__asm volatile("lw   x4, 3 * 4(sp)");
800018c0:	00c12203          	lw	tp,12(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:264
		__asm volatile("lw   x5, 4 * 4(sp)");
800018c4:	01012283          	lw	t0,16(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:265
		__asm volatile("lw   x6, 5 * 4(sp)");
800018c8:	01412303          	lw	t1,20(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:266
		__asm volatile("lw   x7, 6 * 4(sp)");
800018cc:	01812383          	lw	t2,24(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:267
		__asm volatile("lw   x8, 7 * 4(sp)");
800018d0:	01c12403          	lw	s0,28(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:268
		__asm volatile("lw   x9, 8 * 4(sp)");
800018d4:	02012483          	lw	s1,32(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:269
		__asm volatile("lw   x10, 9 * 4(sp)");
800018d8:	02412503          	lw	a0,36(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:270
		__asm volatile("lw   x11, 10 * 4(sp)");
800018dc:	02812583          	lw	a1,40(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:271
		__asm volatile("lw   x12, 11 * 4(sp)");
800018e0:	02c12603          	lw	a2,44(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:272
		__asm volatile("lw   x13, 12 * 4(sp)");
800018e4:	03012683          	lw	a3,48(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:273
		__asm volatile("lw   x14, 13 * 4(sp)");
800018e8:	03412703          	lw	a4,52(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:274
		__asm volatile("lw   x15, 14 * 4(sp)");
800018ec:	03812783          	lw	a5,56(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:275
		__asm volatile("lw   x16, 15 * 4(sp)");
800018f0:	03c12803          	lw	a6,60(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:276
		__asm volatile("lw   x17, 16 * 4(sp)");
800018f4:	04012883          	lw	a7,64(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:277
		__asm volatile("lw   x18, 17 * 4(sp)");
800018f8:	04412903          	lw	s2,68(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:278
		__asm volatile("lw   x19, 18 * 4(sp)");
800018fc:	04812983          	lw	s3,72(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:279
		__asm volatile("lw   x20, 19 * 4(sp)");
80001900:	04c12a03          	lw	s4,76(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:280
		__asm volatile("lw   x21, 20 * 4(sp)");
80001904:	05012a83          	lw	s5,80(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:281
		__asm volatile("lw   x22, 21 * 4(sp)");
80001908:	05412b03          	lw	s6,84(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:282
		__asm volatile("lw   x23, 22 * 4(sp)");
8000190c:	05812b83          	lw	s7,88(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:283
		__asm volatile("lw   x24, 23 * 4(sp)");
80001910:	05c12c03          	lw	s8,92(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:284
		__asm volatile("lw   x25, 24 * 4(sp)");
80001914:	06012c83          	lw	s9,96(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:285
		__asm volatile("lw   x26, 25 * 4(sp)");
80001918:	06412d03          	lw	s10,100(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:286
		__asm volatile("lw   x27, 26 * 4(sp)");
8000191c:	06812d83          	lw	s11,104(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:287
		__asm volatile("lw   x28, 27 * 4(sp)");
80001920:	06c12e03          	lw	t3,108(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:288
		__asm volatile("lw   x29, 28 * 4(sp)");
80001924:	07012e83          	lw	t4,112(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:289
		__asm volatile("lw   x30, 29 * 4(sp)");
80001928:	07412f03          	lw	t5,116(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:290
		__asm volatile("lw   x31, 30 * 4(sp)");
8000192c:	07812f83          	lw	t6,120(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:292

		__asm volatile("addi	sp, sp, 4 * 32");
80001930:	08010113          	addi	sp,sp,128
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:294

		__asm volatile("mret");
80001934:	30200073          	mret
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:296
	}
}
80001938:	00000013          	nop
8000193c:	00c12083          	lw	ra,12(sp)
80001940:	00812403          	lw	s0,8(sp)
80001944:	01010113          	addi	sp,sp,16
80001948:	00008067          	ret

8000194c <xPortStartScheduler>:
xPortStartScheduler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:299
uint32_t g_startscheduler = 0;
BaseType_t xPortStartScheduler( void )
{
8000194c:	ff010113          	addi	sp,sp,-16
80001950:	00112623          	sw	ra,12(sp)
80001954:	00812423          	sw	s0,8(sp)
80001958:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:300
	vPortSetupTimer();
8000195c:	d99ff0ef          	jal	ra,800016f4 <vPortSetupTimer>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:301
	uxCriticalNesting = 0;
80001960:	800077b7          	lui	a5,0x80007
80001964:	e807a223          	sw	zero,-380(a5) # 80006e84 <__stack_top+0xfffc5854>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:302
	g_startscheduler = 1;
80001968:	00100713          	li	a4,1
8000196c:	92e1a423          	sw	a4,-1752(gp) # 80006fa8 <g_startscheduler>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:303
	__enable_irq();
80001970:	a11fe0ef          	jal	ra,80000380 <__enable_irq>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:305

	raise_soft_interrupt();
80001974:	bf5ff0ef          	jal	ra,80001568 <raise_soft_interrupt>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:308

	/*Should not get here*/
	return pdFALSE;
80001978:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:309
}
8000197c:	00078513          	mv	a0,a5
80001980:	00c12083          	lw	ra,12(sp)
80001984:	00812403          	lw	s0,8(sp)
80001988:	01010113          	addi	sp,sp,16
8000198c:	00008067          	ret

80001990 <Software_IRQHandler>:
Software_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:312

void Software_IRQHandler(void)
{
80001990:	ff010113          	addi	sp,sp,-16
80001994:	00112623          	sw	ra,12(sp)
80001998:	00812423          	sw	s0,8(sp)
8000199c:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:313
	if(1 == g_startscheduler)
800019a0:	9281a703          	lw	a4,-1752(gp) # 80006fa8 <g_startscheduler>
800019a4:	00100793          	li	a5,1
800019a8:	00f71863          	bne	a4,a5,800019b8 <Software_IRQHandler+0x28>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:315
	{
		g_startscheduler = 2; //skip the save n switch context first time when scheduler is starting.
800019ac:	00200713          	li	a4,2
800019b0:	92e1a423          	sw	a4,-1752(gp) # 80006fa8 <g_startscheduler>
800019b4:	0100006f          	j	800019c4 <Software_IRQHandler+0x34>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:321
	}
	else
	{
		/*Save Context*/
		{
			__asm volatile("lw	t0, pxCurrentTCB");
800019b8:	92c1a283          	lw	t0,-1748(gp) # 80006fac <pxCurrentTCB>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:322
			__asm volatile("sw	a2, 0x0(t0)");
800019bc:	00c2a023          	sw	a2,0(t0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:325
		}

		vTaskSwitchContext();
800019c0:	445000ef          	jal	ra,80002604 <vTaskSwitchContext>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:329
	}

	// Moved by Imperas (was previously causing corruption of a5)
	PRCI->MSIP[0] = 0x00;
800019c4:	440007b7          	lui	a5,0x44000
800019c8:	0007a023          	sw	zero,0(a5) # 44000000 <RAM_SIZE+0x43f80000>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:333

	/*Restore Context*/
	{
		__asm volatile("lw	sp, pxCurrentTCB");
800019cc:	92c1a103          	lw	sp,-1748(gp) # 80006fac <pxCurrentTCB>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:334
		__asm volatile("lw	sp, 0x0(sp)");
800019d0:	00012103          	lw	sp,0(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:336

		__asm volatile("lw	t0, 31 * 4(sp)");
800019d4:	07c12283          	lw	t0,124(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:337
		__asm volatile("csrw	mepc, t0");
800019d8:	34129073          	csrw	mepc,t0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:339

		__asm volatile("lw	x1, 0x0(sp)");
800019dc:	00012083          	lw	ra,0(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:340
		__asm volatile("lw   x4, 3 * 4(sp)");
800019e0:	00c12203          	lw	tp,12(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:341
		__asm volatile("lw   x5, 4 * 4(sp)");
800019e4:	01012283          	lw	t0,16(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:342
		__asm volatile("lw   x6, 5 * 4(sp)");
800019e8:	01412303          	lw	t1,20(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:343
		__asm volatile("lw   x7, 6 * 4(sp)");
800019ec:	01812383          	lw	t2,24(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:344
		__asm volatile("lw   x8, 7 * 4(sp)");
800019f0:	01c12403          	lw	s0,28(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:345
		__asm volatile("lw   x9, 8 * 4(sp)");
800019f4:	02012483          	lw	s1,32(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:346
		__asm volatile("lw   x10, 9 * 4(sp)");
800019f8:	02412503          	lw	a0,36(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:347
		__asm volatile("lw   x11, 10 * 4(sp)");
800019fc:	02812583          	lw	a1,40(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:348
		__asm volatile("lw   x12, 11 * 4(sp)");
80001a00:	02c12603          	lw	a2,44(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:349
		__asm volatile("lw   x13, 12 * 4(sp)");
80001a04:	03012683          	lw	a3,48(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:350
		__asm volatile("lw   x14, 13 * 4(sp)");
80001a08:	03412703          	lw	a4,52(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:351
		__asm volatile("lw   x15, 14 * 4(sp)");
80001a0c:	03812783          	lw	a5,56(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:352
		__asm volatile("lw   x16, 15 * 4(sp)");
80001a10:	03c12803          	lw	a6,60(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:353
		__asm volatile("lw   x17, 16 * 4(sp)");
80001a14:	04012883          	lw	a7,64(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:354
		__asm volatile("lw   x18, 17 * 4(sp)");
80001a18:	04412903          	lw	s2,68(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:355
		__asm volatile("lw   x19, 18 * 4(sp)");
80001a1c:	04812983          	lw	s3,72(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:356
		__asm volatile("lw   x20, 19 * 4(sp)");
80001a20:	04c12a03          	lw	s4,76(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:357
		__asm volatile("lw   x21, 20 * 4(sp)");
80001a24:	05012a83          	lw	s5,80(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:358
		__asm volatile("lw   x22, 21 * 4(sp)");
80001a28:	05412b03          	lw	s6,84(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:359
		__asm volatile("lw   x23, 22 * 4(sp)");
80001a2c:	05812b83          	lw	s7,88(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:360
		__asm volatile("lw   x24, 23 * 4(sp)");
80001a30:	05c12c03          	lw	s8,92(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:361
		__asm volatile("lw   x25, 24 * 4(sp)");
80001a34:	06012c83          	lw	s9,96(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:362
		__asm volatile("lw   x26, 25 * 4(sp)");
80001a38:	06412d03          	lw	s10,100(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:363
		__asm volatile("lw   x27, 26 * 4(sp)");
80001a3c:	06812d83          	lw	s11,104(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:364
		__asm volatile("lw   x28, 27 * 4(sp)");
80001a40:	06c12e03          	lw	t3,108(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:365
		__asm volatile("lw   x29, 28 * 4(sp)");
80001a44:	07012e83          	lw	t4,112(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:366
		__asm volatile("lw   x30, 29 * 4(sp)");
80001a48:	07412f03          	lw	t5,116(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:367
		__asm volatile("lw   x31, 30 * 4(sp)");
80001a4c:	07812f83          	lw	t6,120(sp)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:369

		__asm volatile("addi	sp, sp, 4 * 32");
80001a50:	08010113          	addi	sp,sp,128
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:374

	    // Moved by Imperas (causing corruption of a5 at this position)
		//PRCI->MSIP[0] = 0x00;

		__asm volatile("mret");
80001a54:	30200073          	mret
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:376
	}
}
80001a58:	00000013          	nop
80001a5c:	00c12083          	lw	ra,12(sp)
80001a60:	00812403          	lw	s0,8(sp)
80001a64:	01010113          	addi	sp,sp,16
80001a68:	00008067          	ret

80001a6c <vPortYield>:
vPortYield():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:379

void vPortYield( void )
{
80001a6c:	ff010113          	addi	sp,sp,-16
80001a70:	00112623          	sw	ra,12(sp)
80001a74:	00812423          	sw	s0,8(sp)
80001a78:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:380
	raise_soft_interrupt();
80001a7c:	aedff0ef          	jal	ra,80001568 <raise_soft_interrupt>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/portable/GCC/RISCV/port.c:381
}
80001a80:	00000013          	nop
80001a84:	00c12083          	lw	ra,12(sp)
80001a88:	00812403          	lw	s0,8(sp)
80001a8c:	01010113          	addi	sp,sp,16
80001a90:	00008067          	ret

80001a94 <vListInitialise>:
vListInitialise():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:80
/*-----------------------------------------------------------
 * PUBLIC LIST API documented in list.h
 *----------------------------------------------------------*/

void vListInitialise( List_t * const pxList )
{
80001a94:	fe010113          	addi	sp,sp,-32
80001a98:	00812e23          	sw	s0,28(sp)
80001a9c:	02010413          	addi	s0,sp,32
80001aa0:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:84
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
80001aa4:	fec42783          	lw	a5,-20(s0)
80001aa8:	00878713          	addi	a4,a5,8
80001aac:	fec42783          	lw	a5,-20(s0)
80001ab0:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:88

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
80001ab4:	fec42783          	lw	a5,-20(s0)
80001ab8:	fff00713          	li	a4,-1
80001abc:	00e7a423          	sw	a4,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:92

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
80001ac0:	fec42783          	lw	a5,-20(s0)
80001ac4:	00878713          	addi	a4,a5,8
80001ac8:	fec42783          	lw	a5,-20(s0)
80001acc:	00e7a623          	sw	a4,12(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:93
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
80001ad0:	fec42783          	lw	a5,-20(s0)
80001ad4:	00878713          	addi	a4,a5,8
80001ad8:	fec42783          	lw	a5,-20(s0)
80001adc:	00e7a823          	sw	a4,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:95

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
80001ae0:	fec42783          	lw	a5,-20(s0)
80001ae4:	0007a023          	sw	zero,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:101

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
80001ae8:	00000013          	nop
80001aec:	01c12403          	lw	s0,28(sp)
80001af0:	02010113          	addi	sp,sp,32
80001af4:	00008067          	ret

80001af8 <vListInitialiseItem>:
vListInitialiseItem():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:105
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
80001af8:	fe010113          	addi	sp,sp,-32
80001afc:	00812e23          	sw	s0,28(sp)
80001b00:	02010413          	addi	s0,sp,32
80001b04:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:107
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pvContainer = NULL;
80001b08:	fec42783          	lw	a5,-20(s0)
80001b0c:	0007a823          	sw	zero,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:113

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
80001b10:	00000013          	nop
80001b14:	01c12403          	lw	s0,28(sp)
80001b18:	02010113          	addi	sp,sp,32
80001b1c:	00008067          	ret

80001b20 <vListInsertEnd>:
vListInsertEnd():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:117
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
80001b20:	fd010113          	addi	sp,sp,-48
80001b24:	02812623          	sw	s0,44(sp)
80001b28:	03010413          	addi	s0,sp,48
80001b2c:	fca42e23          	sw	a0,-36(s0)
80001b30:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:118
ListItem_t * const pxIndex = pxList->pxIndex;
80001b34:	fdc42783          	lw	a5,-36(s0)
80001b38:	0047a783          	lw	a5,4(a5)
80001b3c:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:129
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
80001b40:	fd842783          	lw	a5,-40(s0)
80001b44:	fec42703          	lw	a4,-20(s0)
80001b48:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:130
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
80001b4c:	fec42783          	lw	a5,-20(s0)
80001b50:	0087a703          	lw	a4,8(a5)
80001b54:	fd842783          	lw	a5,-40(s0)
80001b58:	00e7a423          	sw	a4,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:135

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
80001b5c:	fec42783          	lw	a5,-20(s0)
80001b60:	0087a783          	lw	a5,8(a5)
80001b64:	fd842703          	lw	a4,-40(s0)
80001b68:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:136
	pxIndex->pxPrevious = pxNewListItem;
80001b6c:	fec42783          	lw	a5,-20(s0)
80001b70:	fd842703          	lw	a4,-40(s0)
80001b74:	00e7a423          	sw	a4,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:139

	/* Remember which list the item is in. */
	pxNewListItem->pvContainer = ( void * ) pxList;
80001b78:	fd842783          	lw	a5,-40(s0)
80001b7c:	fdc42703          	lw	a4,-36(s0)
80001b80:	00e7a823          	sw	a4,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:141

	( pxList->uxNumberOfItems )++;
80001b84:	fdc42783          	lw	a5,-36(s0)
80001b88:	0007a783          	lw	a5,0(a5)
80001b8c:	00178713          	addi	a4,a5,1
80001b90:	fdc42783          	lw	a5,-36(s0)
80001b94:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:142
}
80001b98:	00000013          	nop
80001b9c:	02c12403          	lw	s0,44(sp)
80001ba0:	03010113          	addi	sp,sp,48
80001ba4:	00008067          	ret

80001ba8 <vListInsert>:
vListInsert():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:146
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
80001ba8:	fd010113          	addi	sp,sp,-48
80001bac:	02812623          	sw	s0,44(sp)
80001bb0:	03010413          	addi	s0,sp,48
80001bb4:	fca42e23          	sw	a0,-36(s0)
80001bb8:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:148
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
80001bbc:	fd842783          	lw	a5,-40(s0)
80001bc0:	0007a783          	lw	a5,0(a5)
80001bc4:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:164
	new list item should be placed after it.  This ensures that TCB's which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
80001bc8:	fe842703          	lw	a4,-24(s0)
80001bcc:	fff00793          	li	a5,-1
80001bd0:	00f71a63          	bne	a4,a5,80001be4 <vListInsert+0x3c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:166
	{
		pxIterator = pxList->xListEnd.pxPrevious;
80001bd4:	fdc42783          	lw	a5,-36(s0)
80001bd8:	0107a783          	lw	a5,16(a5)
80001bdc:	fef42623          	sw	a5,-20(s0)
80001be0:	0340006f          	j	80001c14 <vListInsert+0x6c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:192
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
80001be4:	fdc42783          	lw	a5,-36(s0)
80001be8:	00878793          	addi	a5,a5,8
80001bec:	fef42623          	sw	a5,-20(s0)
80001bf0:	0100006f          	j	80001c00 <vListInsert+0x58>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:192 (discriminator 3)
80001bf4:	fec42783          	lw	a5,-20(s0)
80001bf8:	0047a783          	lw	a5,4(a5)
80001bfc:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:192 (discriminator 1)
80001c00:	fec42783          	lw	a5,-20(s0)
80001c04:	0047a783          	lw	a5,4(a5)
80001c08:	0007a783          	lw	a5,0(a5)
80001c0c:	fe842703          	lw	a4,-24(s0)
80001c10:	fef772e3          	bleu	a5,a4,80001bf4 <vListInsert+0x4c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:199
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
80001c14:	fec42783          	lw	a5,-20(s0)
80001c18:	0047a703          	lw	a4,4(a5)
80001c1c:	fd842783          	lw	a5,-40(s0)
80001c20:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:200
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
80001c24:	fd842783          	lw	a5,-40(s0)
80001c28:	0047a783          	lw	a5,4(a5)
80001c2c:	fd842703          	lw	a4,-40(s0)
80001c30:	00e7a423          	sw	a4,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:201
	pxNewListItem->pxPrevious = pxIterator;
80001c34:	fd842783          	lw	a5,-40(s0)
80001c38:	fec42703          	lw	a4,-20(s0)
80001c3c:	00e7a423          	sw	a4,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:202
	pxIterator->pxNext = pxNewListItem;
80001c40:	fec42783          	lw	a5,-20(s0)
80001c44:	fd842703          	lw	a4,-40(s0)
80001c48:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:206

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pvContainer = ( void * ) pxList;
80001c4c:	fd842783          	lw	a5,-40(s0)
80001c50:	fdc42703          	lw	a4,-36(s0)
80001c54:	00e7a823          	sw	a4,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:208

	( pxList->uxNumberOfItems )++;
80001c58:	fdc42783          	lw	a5,-36(s0)
80001c5c:	0007a783          	lw	a5,0(a5)
80001c60:	00178713          	addi	a4,a5,1
80001c64:	fdc42783          	lw	a5,-36(s0)
80001c68:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:209
}
80001c6c:	00000013          	nop
80001c70:	02c12403          	lw	s0,44(sp)
80001c74:	03010113          	addi	sp,sp,48
80001c78:	00008067          	ret

80001c7c <uxListRemove>:
uxListRemove():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:213
/*-----------------------------------------------------------*/

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
80001c7c:	fd010113          	addi	sp,sp,-48
80001c80:	02812623          	sw	s0,44(sp)
80001c84:	03010413          	addi	s0,sp,48
80001c88:	fca42e23          	sw	a0,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:216
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = ( List_t * ) pxItemToRemove->pvContainer;
80001c8c:	fdc42783          	lw	a5,-36(s0)
80001c90:	0107a783          	lw	a5,16(a5)
80001c94:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:218

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
80001c98:	fdc42783          	lw	a5,-36(s0)
80001c9c:	0047a783          	lw	a5,4(a5)
80001ca0:	fdc42703          	lw	a4,-36(s0)
80001ca4:	00872703          	lw	a4,8(a4) # 44000008 <RAM_SIZE+0x43f80008>
80001ca8:	00e7a423          	sw	a4,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:219
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
80001cac:	fdc42783          	lw	a5,-36(s0)
80001cb0:	0087a783          	lw	a5,8(a5)
80001cb4:	fdc42703          	lw	a4,-36(s0)
80001cb8:	00472703          	lw	a4,4(a4)
80001cbc:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:225

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
80001cc0:	fec42783          	lw	a5,-20(s0)
80001cc4:	0047a783          	lw	a5,4(a5)
80001cc8:	fdc42703          	lw	a4,-36(s0)
80001ccc:	00f71a63          	bne	a4,a5,80001ce0 <uxListRemove+0x64>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:227
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
80001cd0:	fdc42783          	lw	a5,-36(s0)
80001cd4:	0087a703          	lw	a4,8(a5)
80001cd8:	fec42783          	lw	a5,-20(s0)
80001cdc:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:234
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pvContainer = NULL;
80001ce0:	fdc42783          	lw	a5,-36(s0)
80001ce4:	0007a823          	sw	zero,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:235
	( pxList->uxNumberOfItems )--;
80001ce8:	fec42783          	lw	a5,-20(s0)
80001cec:	0007a783          	lw	a5,0(a5)
80001cf0:	fff78713          	addi	a4,a5,-1
80001cf4:	fec42783          	lw	a5,-20(s0)
80001cf8:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:237

	return pxList->uxNumberOfItems;
80001cfc:	fec42783          	lw	a5,-20(s0)
80001d00:	0007a783          	lw	a5,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/list.c:238
}
80001d04:	00078513          	mv	a0,a5
80001d08:	02c12403          	lw	s0,44(sp)
80001d0c:	03010113          	addi	sp,sp,48
80001d10:	00008067          	ret

80001d14 <memset>:
memset():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:25

  return dest;
}

void* memset(void* dest, int byte, size_t len)
{
80001d14:	fd010113          	addi	sp,sp,-48
80001d18:	02812623          	sw	s0,44(sp)
80001d1c:	03010413          	addi	s0,sp,48
80001d20:	fca42e23          	sw	a0,-36(s0)
80001d24:	fcb42c23          	sw	a1,-40(s0)
80001d28:	fcc42a23          	sw	a2,-44(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:26
  if ((((uintptr_t)dest | len) & (sizeof(uintptr_t)-1)) == 0) {
80001d2c:	fdc42703          	lw	a4,-36(s0)
80001d30:	fd442783          	lw	a5,-44(s0)
80001d34:	00f767b3          	or	a5,a4,a5
80001d38:	0037f793          	andi	a5,a5,3
80001d3c:	06079863          	bnez	a5,80001dac <memset+0x98>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:27
    uintptr_t word = byte & 0xFF;
80001d40:	fd842783          	lw	a5,-40(s0)
80001d44:	0ff7f793          	andi	a5,a5,255
80001d48:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:28
    word |= word << 8;
80001d4c:	fe442783          	lw	a5,-28(s0)
80001d50:	00879793          	slli	a5,a5,0x8
80001d54:	fe442703          	lw	a4,-28(s0)
80001d58:	00f767b3          	or	a5,a4,a5
80001d5c:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:29
    word |= word << 16;
80001d60:	fe442783          	lw	a5,-28(s0)
80001d64:	01079793          	slli	a5,a5,0x10
80001d68:	fe442703          	lw	a4,-28(s0)
80001d6c:	00f767b3          	or	a5,a4,a5
80001d70:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:32
    word |= word << 16 << 16;

    uintptr_t *d = dest;
80001d74:	fdc42783          	lw	a5,-36(s0)
80001d78:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:33
    while (d < (uintptr_t*)(dest + len))
80001d7c:	0180006f          	j	80001d94 <memset+0x80>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:34
      *d++ = word;
80001d80:	fec42783          	lw	a5,-20(s0)
80001d84:	00478713          	addi	a4,a5,4
80001d88:	fee42623          	sw	a4,-20(s0)
80001d8c:	fe442703          	lw	a4,-28(s0)
80001d90:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:33
    while (d < (uintptr_t*)(dest + len))
80001d94:	fdc42703          	lw	a4,-36(s0)
80001d98:	fd442783          	lw	a5,-44(s0)
80001d9c:	00f707b3          	add	a5,a4,a5
80001da0:	fec42703          	lw	a4,-20(s0)
80001da4:	fcf76ee3          	bltu	a4,a5,80001d80 <memset+0x6c>
80001da8:	0400006f          	j	80001de8 <memset+0xd4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:36
  } else {
    char *d = dest;
80001dac:	fdc42783          	lw	a5,-36(s0)
80001db0:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:37
    while (d < (char*)(dest + len))
80001db4:	0200006f          	j	80001dd4 <memset+0xc0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:38
      *d++ = byte;
80001db8:	fe842783          	lw	a5,-24(s0)
80001dbc:	00178713          	addi	a4,a5,1
80001dc0:	fee42423          	sw	a4,-24(s0)
80001dc4:	fd842703          	lw	a4,-40(s0)
80001dc8:	01871713          	slli	a4,a4,0x18
80001dcc:	41875713          	srai	a4,a4,0x18
80001dd0:	00e78023          	sb	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:37
    while (d < (char*)(dest + len))
80001dd4:	fdc42703          	lw	a4,-36(s0)
80001dd8:	fd442783          	lw	a5,-44(s0)
80001ddc:	00f707b3          	add	a5,a4,a5
80001de0:	fe842703          	lw	a4,-24(s0)
80001de4:	fcf76ae3          	bltu	a4,a5,80001db8 <memset+0xa4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:40
  }
  return dest;
80001de8:	fdc42783          	lw	a5,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:41
}
80001dec:	00078513          	mv	a0,a5
80001df0:	02c12403          	lw	s0,44(sp)
80001df4:	03010113          	addi	sp,sp,48
80001df8:	00008067          	ret

80001dfc <strlen>:
strlen():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:44

size_t strlen(const char *s)
{
80001dfc:	fd010113          	addi	sp,sp,-48
80001e00:	02812623          	sw	s0,44(sp)
80001e04:	03010413          	addi	s0,sp,48
80001e08:	fca42e23          	sw	a0,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:45
  const char *p = s;
80001e0c:	fdc42783          	lw	a5,-36(s0)
80001e10:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:46
  while (*p)
80001e14:	0100006f          	j	80001e24 <strlen+0x28>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:47
    p++;
80001e18:	fec42783          	lw	a5,-20(s0)
80001e1c:	00178793          	addi	a5,a5,1
80001e20:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:46
  while (*p)
80001e24:	fec42783          	lw	a5,-20(s0)
80001e28:	00078783          	lb	a5,0(a5)
80001e2c:	fe0796e3          	bnez	a5,80001e18 <strlen+0x1c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:48
  return p - s;
80001e30:	fec42703          	lw	a4,-20(s0)
80001e34:	fdc42783          	lw	a5,-36(s0)
80001e38:	40f707b3          	sub	a5,a4,a5
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/string.c:49
}
80001e3c:	00078513          	mv	a0,a5
80001e40:	02c12403          	lw	s0,44(sp)
80001e44:	03010113          	addi	sp,sp,48
80001e48:	00008067          	ret

80001e4c <xTaskGenericCreate>:
xTaskGenericCreate():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:551

#endif
/*-----------------------------------------------------------*/

BaseType_t xTaskGenericCreate( TaskFunction_t pxTaskCode, const char * const pcName, const uint16_t usStackDepth, void * const pvParameters, UBaseType_t uxPriority, TaskHandle_t * const pxCreatedTask, StackType_t * const puxStackBuffer, const MemoryRegion_t * const xRegions ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
{
80001e4c:	fc010113          	addi	sp,sp,-64
80001e50:	02112e23          	sw	ra,60(sp)
80001e54:	02812c23          	sw	s0,56(sp)
80001e58:	04010413          	addi	s0,sp,64
80001e5c:	fca42e23          	sw	a0,-36(s0)
80001e60:	fcb42c23          	sw	a1,-40(s0)
80001e64:	fcd42823          	sw	a3,-48(s0)
80001e68:	fce42623          	sw	a4,-52(s0)
80001e6c:	fcf42423          	sw	a5,-56(s0)
80001e70:	fd042223          	sw	a6,-60(s0)
80001e74:	fd142023          	sw	a7,-64(s0)
80001e78:	00060793          	mv	a5,a2
80001e7c:	fcf41b23          	sh	a5,-42(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:556
BaseType_t xReturn;
TCB_t * pxNewTCB;
StackType_t *pxTopOfStack;

	configASSERT( pxTaskCode );
80001e80:	fdc42783          	lw	a5,-36(s0)
80001e84:	00079663          	bnez	a5,80001e90 <xTaskGenericCreate+0x44>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:556 (discriminator 1)
80001e88:	30047073          	csrci	mstatus,8
80001e8c:	0000006f          	j	80001e8c <xTaskGenericCreate+0x40>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:557
	configASSERT( ( ( uxPriority & ( UBaseType_t ) ( ~portPRIVILEGE_BIT ) ) < ( UBaseType_t ) configMAX_PRIORITIES ) );
80001e90:	fcc42703          	lw	a4,-52(s0)
80001e94:	00400793          	li	a5,4
80001e98:	00e7f663          	bleu	a4,a5,80001ea4 <xTaskGenericCreate+0x58>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:557 (discriminator 1)
80001e9c:	30047073          	csrci	mstatus,8
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:557 (discriminator 2)
80001ea0:	0000006f          	j	80001ea0 <xTaskGenericCreate+0x54>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:561

	/* Allocate the memory required by the TCB and stack for the new task,
	checking that the allocation was successful. */
	pxNewTCB = prvAllocateTCBAndStack( usStackDepth, puxStackBuffer );
80001ea4:	fd645783          	lhu	a5,-42(s0)
80001ea8:	fc442583          	lw	a1,-60(s0)
80001eac:	00078513          	mv	a0,a5
80001eb0:	395000ef          	jal	ra,80002a44 <prvAllocateTCBAndStack>
80001eb4:	fea42423          	sw	a0,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:562
	if( pxNewTCB != NULL )
80001eb8:	fe842783          	lw	a5,-24(s0)
80001ebc:	16078263          	beqz	a5,80002020 <xTaskGenericCreate+0x1d4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:598
		stack grows from high memory to low (as per the 80x86) or vice versa.
		portSTACK_GROWTH is used to make the result positive or negative as
		required by the port. */
		#if( portSTACK_GROWTH < 0 )
		{
			pxTopOfStack = pxNewTCB->pxStack + ( usStackDepth - ( uint16_t ) 1 );
80001ec0:	fe842783          	lw	a5,-24(s0)
80001ec4:	0307a703          	lw	a4,48(a5)
80001ec8:	fd645683          	lhu	a3,-42(s0)
80001ecc:	400007b7          	lui	a5,0x40000
80001ed0:	fff78793          	addi	a5,a5,-1 # 3fffffff <RAM_SIZE+0x3ff7ffff>
80001ed4:	00f687b3          	add	a5,a3,a5
80001ed8:	00279793          	slli	a5,a5,0x2
80001edc:	00f707b3          	add	a5,a4,a5
80001ee0:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:599
			pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type. */
80001ee4:	fe442783          	lw	a5,-28(s0)
80001ee8:	ffc7f793          	andi	a5,a5,-4
80001eec:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:602

			/* Check the alignment of the calculated top of stack is correct. */
			configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) == 0UL ) );
80001ef0:	fe442783          	lw	a5,-28(s0)
80001ef4:	0037f793          	andi	a5,a5,3
80001ef8:	00078663          	beqz	a5,80001f04 <xTaskGenericCreate+0xb8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:602 (discriminator 1)
80001efc:	30047073          	csrci	mstatus,8
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:602 (discriminator 3)
80001f00:	0000006f          	j	80001f00 <xTaskGenericCreate+0xb4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:619
			pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( usStackDepth - 1 );
		}
		#endif /* portSTACK_GROWTH */

		/* Setup the newly allocated TCB with the initial state of the task. */
		prvInitialiseTCBVariables( pxNewTCB, pcName, uxPriority, xRegions, usStackDepth );
80001f04:	fd645783          	lhu	a5,-42(s0)
80001f08:	00078713          	mv	a4,a5
80001f0c:	fc042683          	lw	a3,-64(s0)
80001f10:	fcc42603          	lw	a2,-52(s0)
80001f14:	fd842583          	lw	a1,-40(s0)
80001f18:	fe842503          	lw	a0,-24(s0)
80001f1c:	009000ef          	jal	ra,80002724 <prvInitialiseTCBVariables>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:631
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivileged );
		}
		#else /* portUSING_MPU_WRAPPERS */
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
80001f20:	fd042603          	lw	a2,-48(s0)
80001f24:	fdc42583          	lw	a1,-36(s0)
80001f28:	fe442503          	lw	a0,-28(s0)
80001f2c:	8c1ff0ef          	jal	ra,800017ec <pxPortInitialiseStack>
80001f30:	00050713          	mv	a4,a0
80001f34:	fe842783          	lw	a5,-24(s0)
80001f38:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:635
		}
		#endif /* portUSING_MPU_WRAPPERS */

		if( ( void * ) pxCreatedTask != NULL )
80001f3c:	fc842783          	lw	a5,-56(s0)
80001f40:	00078863          	beqz	a5,80001f50 <xTaskGenericCreate+0x104>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:640
		{
			/* Pass the TCB out - in an anonymous way.  The calling function/
			task can use this as a handle to delete the task later if
			required.*/
			*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
80001f44:	fc842783          	lw	a5,-56(s0)
80001f48:	fe842703          	lw	a4,-24(s0)
80001f4c:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:649
			mtCOVERAGE_TEST_MARKER();
		}

		/* Ensure interrupts don't access the task lists while they are being
		updated. */
		taskENTER_CRITICAL();
80001f50:	e64ff0ef          	jal	ra,800015b4 <vPortEnterCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:651
		{
			uxCurrentNumberOfTasks++;
80001f54:	93c1a783          	lw	a5,-1732(gp) # 80006fbc <uxCurrentNumberOfTasks>
80001f58:	00178713          	addi	a4,a5,1
80001f5c:	92e1ae23          	sw	a4,-1732(gp) # 80006fbc <uxCurrentNumberOfTasks>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:652
			if( pxCurrentTCB == NULL )
80001f60:	92c1a783          	lw	a5,-1748(gp) # 80006fac <pxCurrentTCB>
80001f64:	02079063          	bnez	a5,80001f84 <xTaskGenericCreate+0x138>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:656
			{
				/* There are no other tasks, or all the other tasks are in
				the suspended state - make this the current task. */
				pxCurrentTCB =  pxNewTCB;
80001f68:	fe842703          	lw	a4,-24(s0)
80001f6c:	92e1a623          	sw	a4,-1748(gp) # 80006fac <pxCurrentTCB>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:658

				if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
80001f70:	93c1a703          	lw	a4,-1732(gp) # 80006fbc <uxCurrentNumberOfTasks>
80001f74:	00100793          	li	a5,1
80001f78:	02f71663          	bne	a4,a5,80001fa4 <xTaskGenericCreate+0x158>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:663
				{
					/* This is the first task to be created so do the preliminary
					initialisation required.  We will not recover if this call
					fails, but we will report the failure. */
					prvInitialiseTaskLists();
80001f7c:	0e1000ef          	jal	ra,8000285c <prvInitialiseTaskLists>
80001f80:	0240006f          	j	80001fa4 <xTaskGenericCreate+0x158>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:675
			else
			{
				/* If the scheduler is not already running, make this task the
				current task if it is the highest priority task to be created
				so far. */
				if( xSchedulerRunning == pdFALSE )
80001f84:	9481a783          	lw	a5,-1720(gp) # 80006fc8 <xSchedulerRunning>
80001f88:	00079e63          	bnez	a5,80001fa4 <xTaskGenericCreate+0x158>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:677
				{
					if( pxCurrentTCB->uxPriority <= uxPriority )
80001f8c:	92c1a783          	lw	a5,-1748(gp) # 80006fac <pxCurrentTCB>
80001f90:	02c7a783          	lw	a5,44(a5)
80001f94:	fcc42703          	lw	a4,-52(s0)
80001f98:	00f76663          	bltu	a4,a5,80001fa4 <xTaskGenericCreate+0x158>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:679
					{
						pxCurrentTCB = pxNewTCB;
80001f9c:	fe842703          	lw	a4,-24(s0)
80001fa0:	92e1a623          	sw	a4,-1748(gp) # 80006fac <pxCurrentTCB>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:692
				{
					mtCOVERAGE_TEST_MARKER();
				}
			}

			uxTaskNumber++;
80001fa4:	9581a783          	lw	a5,-1704(gp) # 80006fd8 <uxTaskNumber>
80001fa8:	00178713          	addi	a4,a5,1
80001fac:	94e1ac23          	sw	a4,-1704(gp) # 80006fd8 <uxTaskNumber>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:697

			#if ( configUSE_TRACE_FACILITY == 1 )
			{
				/* Add a counter into the TCB for tracing only. */
				pxNewTCB->uxTCBNumber = uxTaskNumber;
80001fb0:	9581a703          	lw	a4,-1704(gp) # 80006fd8 <uxTaskNumber>
80001fb4:	fe842783          	lw	a5,-24(s0)
80001fb8:	04e7a423          	sw	a4,72(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:702
			}
			#endif /* configUSE_TRACE_FACILITY */
			traceTASK_CREATE( pxNewTCB );

			prvAddTaskToReadyList( pxNewTCB );
80001fbc:	fe842783          	lw	a5,-24(s0)
80001fc0:	02c7a703          	lw	a4,44(a5)
80001fc4:	9441a783          	lw	a5,-1724(gp) # 80006fc4 <uxTopReadyPriority>
80001fc8:	00e7f863          	bleu	a4,a5,80001fd8 <xTaskGenericCreate+0x18c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:702 (discriminator 1)
80001fcc:	fe842783          	lw	a5,-24(s0)
80001fd0:	02c7a703          	lw	a4,44(a5)
80001fd4:	94e1a223          	sw	a4,-1724(gp) # 80006fc4 <uxTopReadyPriority>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:702 (discriminator 3)
80001fd8:	fe842783          	lw	a5,-24(s0)
80001fdc:	02c7a703          	lw	a4,44(a5)
80001fe0:	00070793          	mv	a5,a4
80001fe4:	00279793          	slli	a5,a5,0x2
80001fe8:	00e787b3          	add	a5,a5,a4
80001fec:	00279793          	slli	a5,a5,0x2
80001ff0:	80020737          	lui	a4,0x80020
80001ff4:	ff070713          	addi	a4,a4,-16 # 8001fff0 <__stack_top+0xfffde9c0>
80001ff8:	00e78733          	add	a4,a5,a4
80001ffc:	fe842783          	lw	a5,-24(s0)
80002000:	00478793          	addi	a5,a5,4
80002004:	00078593          	mv	a1,a5
80002008:	00070513          	mv	a0,a4
8000200c:	b15ff0ef          	jal	ra,80001b20 <vListInsertEnd>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:704 (discriminator 3)

			xReturn = pdPASS;
80002010:	00100793          	li	a5,1
80002014:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:707 (discriminator 3)
			portSETUP_TCB( pxNewTCB );
		}
		taskEXIT_CRITICAL();
80002018:	dd0ff0ef          	jal	ra,800015e8 <vPortExitCritical>
8000201c:	00c0006f          	j	80002028 <xTaskGenericCreate+0x1dc>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:711
	}
	else
	{
		xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
80002020:	fff00793          	li	a5,-1
80002024:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:715
		traceTASK_CREATE_FAILED();
	}

	if( xReturn == pdPASS )
80002028:	fec42703          	lw	a4,-20(s0)
8000202c:	00100793          	li	a5,1
80002030:	02f71063          	bne	a4,a5,80002050 <xTaskGenericCreate+0x204>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:717
	{
		if( xSchedulerRunning != pdFALSE )
80002034:	9481a783          	lw	a5,-1720(gp) # 80006fc8 <xSchedulerRunning>
80002038:	00078c63          	beqz	a5,80002050 <xTaskGenericCreate+0x204>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:721
		{
			/* If the created task is of a higher priority than the current task
			then it should run now. */
			if( pxCurrentTCB->uxPriority < uxPriority )
8000203c:	92c1a783          	lw	a5,-1748(gp) # 80006fac <pxCurrentTCB>
80002040:	02c7a783          	lw	a5,44(a5)
80002044:	fcc42703          	lw	a4,-52(s0)
80002048:	00e7f463          	bleu	a4,a5,80002050 <xTaskGenericCreate+0x204>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:723
			{
				taskYIELD_IF_USING_PREEMPTION();
8000204c:	a21ff0ef          	jal	ra,80001a6c <vPortYield>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:736
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	return xReturn;
80002050:	fec42783          	lw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:737
}
80002054:	00078513          	mv	a0,a5
80002058:	03c12083          	lw	ra,60(sp)
8000205c:	03812403          	lw	s0,56(sp)
80002060:	04010113          	addi	sp,sp,64
80002064:	00008067          	ret

80002068 <vTaskDelete>:
vTaskDelete():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:743
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	void vTaskDelete( TaskHandle_t xTaskToDelete )
	{
80002068:	fd010113          	addi	sp,sp,-48
8000206c:	02112623          	sw	ra,44(sp)
80002070:	02812423          	sw	s0,40(sp)
80002074:	03010413          	addi	s0,sp,48
80002078:	fca42e23          	sw	a0,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:746
	TCB_t *pxTCB;

		taskENTER_CRITICAL();
8000207c:	d38ff0ef          	jal	ra,800015b4 <vPortEnterCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:750
		{
			/* If null is passed in here then it is the calling task that is
			being deleted. */
			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
80002080:	fdc42783          	lw	a5,-36(s0)
80002084:	00079663          	bnez	a5,80002090 <vTaskDelete+0x28>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:750 (discriminator 1)
80002088:	92c1a783          	lw	a5,-1748(gp) # 80006fac <pxCurrentTCB>
8000208c:	0080006f          	j	80002094 <vTaskDelete+0x2c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:750 (discriminator 2)
80002090:	fdc42783          	lw	a5,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:750 (discriminator 4)
80002094:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:756 (discriminator 4)

			/* Remove task from the ready list and place in the	termination list.
			This will stop the task from be scheduled.  The idle task will check
			the termination list and free up any memory allocated by the
			scheduler for the TCB and stack. */
			if( uxListRemove( &( pxTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
80002098:	fec42783          	lw	a5,-20(s0)
8000209c:	00478793          	addi	a5,a5,4
800020a0:	00078513          	mv	a0,a5
800020a4:	bd9ff0ef          	jal	ra,80001c7c <uxListRemove>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:766 (discriminator 4)
			{
				mtCOVERAGE_TEST_MARKER();
			}

			/* Is the task waiting on an event also? */
			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
800020a8:	fec42783          	lw	a5,-20(s0)
800020ac:	0287a783          	lw	a5,40(a5)
800020b0:	00078a63          	beqz	a5,800020c4 <vTaskDelete+0x5c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:768
			{
				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
800020b4:	fec42783          	lw	a5,-20(s0)
800020b8:	01878793          	addi	a5,a5,24
800020bc:	00078513          	mv	a0,a5
800020c0:	bbdff0ef          	jal	ra,80001c7c <uxListRemove>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:775
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xGenericListItem ) );
800020c4:	fec42783          	lw	a5,-20(s0)
800020c8:	00478793          	addi	a5,a5,4
800020cc:	00078593          	mv	a1,a5
800020d0:	800207b7          	lui	a5,0x80020
800020d4:	09078513          	addi	a0,a5,144 # 80020090 <__stack_top+0xfffdea60>
800020d8:	a49ff0ef          	jal	ra,80001b20 <vListInsertEnd>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:780

			/* Increment the ucTasksDeleted variable so the idle task knows
			there is a task that has been deleted and that it should therefore
			check the xTasksWaitingTermination list. */
			++uxTasksDeleted;
800020dc:	9381a783          	lw	a5,-1736(gp) # 80006fb8 <uxTasksDeleted>
800020e0:	00178713          	addi	a4,a5,1
800020e4:	92e1ac23          	sw	a4,-1736(gp) # 80006fb8 <uxTasksDeleted>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:784

			/* Increment the uxTaskNumberVariable also so kernel aware debuggers
			can detect that the task lists need re-generating. */
			uxTaskNumber++;
800020e8:	9581a783          	lw	a5,-1704(gp) # 80006fd8 <uxTaskNumber>
800020ec:	00178713          	addi	a4,a5,1
800020f0:	94e1ac23          	sw	a4,-1704(gp) # 80006fd8 <uxTaskNumber>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:788

			traceTASK_DELETE( pxTCB );
		}
		taskEXIT_CRITICAL();
800020f4:	cf4ff0ef          	jal	ra,800015e8 <vPortExitCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:792

		/* Force a reschedule if it is the currently running task that has just
		been deleted. */
		if( xSchedulerRunning != pdFALSE )
800020f8:	9481a783          	lw	a5,-1720(gp) # 80006fc8 <xSchedulerRunning>
800020fc:	02078a63          	beqz	a5,80002130 <vTaskDelete+0xc8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:794
		{
			if( pxTCB == pxCurrentTCB )
80002100:	92c1a783          	lw	a5,-1748(gp) # 80006fac <pxCurrentTCB>
80002104:	fec42703          	lw	a4,-20(s0)
80002108:	00f71e63          	bne	a4,a5,80002124 <vTaskDelete+0xbc>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:796
			{
				configASSERT( uxSchedulerSuspended == 0 );
8000210c:	9601a783          	lw	a5,-1696(gp) # 80006fe0 <uxSchedulerSuspended>
80002110:	00078663          	beqz	a5,8000211c <vTaskDelete+0xb4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:796 (discriminator 1)
80002114:	30047073          	csrci	mstatus,8
80002118:	0000006f          	j	80002118 <vTaskDelete+0xb0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:804
				in which Windows specific clean up operations are performed,
				after which it is not possible to yield away from this task -
				hence xYieldPending is used to latch that a context switch is
				required. */
				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
				portYIELD_WITHIN_API();
8000211c:	951ff0ef          	jal	ra,80001a6c <vPortYield>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:817
					prvResetNextTaskUnblockTime();
				}
				taskEXIT_CRITICAL();
			}
		}
	}
80002120:	0100006f          	j	80002130 <vTaskDelete+0xc8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:810
				taskENTER_CRITICAL();
80002124:	c90ff0ef          	jal	ra,800015b4 <vPortEnterCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:812
					prvResetNextTaskUnblockTime();
80002128:	21d000ef          	jal	ra,80002b44 <prvResetNextTaskUnblockTime>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:814
				taskEXIT_CRITICAL();
8000212c:	cbcff0ef          	jal	ra,800015e8 <vPortExitCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:817
	}
80002130:	00000013          	nop
80002134:	02c12083          	lw	ra,44(sp)
80002138:	02812403          	lw	s0,40(sp)
8000213c:	03010113          	addi	sp,sp,48
80002140:	00008067          	ret

80002144 <vTaskDelay>:
vTaskDelay():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:921
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelay == 1 )

	void vTaskDelay( const TickType_t xTicksToDelay )
	{
80002144:	fd010113          	addi	sp,sp,-48
80002148:	02112623          	sw	ra,44(sp)
8000214c:	02812423          	sw	s0,40(sp)
80002150:	03010413          	addi	s0,sp,48
80002154:	fca42e23          	sw	a0,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:923
	TickType_t xTimeToWake;
	BaseType_t xAlreadyYielded = pdFALSE;
80002158:	fe042623          	sw	zero,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:927


		/* A delay time of zero just forces a reschedule. */
		if( xTicksToDelay > ( TickType_t ) 0U )
8000215c:	fdc42783          	lw	a5,-36(s0)
80002160:	04078463          	beqz	a5,800021a8 <vTaskDelay+0x64>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:929
		{
			configASSERT( uxSchedulerSuspended == 0 );
80002164:	9601a783          	lw	a5,-1696(gp) # 80006fe0 <uxSchedulerSuspended>
80002168:	00078663          	beqz	a5,80002174 <vTaskDelay+0x30>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:929 (discriminator 1)
8000216c:	30047073          	csrci	mstatus,8
80002170:	0000006f          	j	80002170 <vTaskDelay+0x2c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:930
			vTaskSuspendAll();
80002174:	0e4000ef          	jal	ra,80002258 <vTaskSuspendAll>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:944
				This task cannot be in an event list as it is the currently
				executing task. */

				/* Calculate the time to wake - this may overflow but this is
				not a problem. */
				xTimeToWake = xTickCount + xTicksToDelay;
80002178:	9401a783          	lw	a5,-1728(gp) # 80006fc0 <xTickCount>
8000217c:	fdc42703          	lw	a4,-36(s0)
80002180:	00f707b3          	add	a5,a4,a5
80002184:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:949

				/* We must remove ourselves from the ready list before adding
				ourselves to the blocked list as the same list item is used for
				both lists. */
				if( uxListRemove( &( pxCurrentTCB->xGenericListItem ) ) == ( UBaseType_t ) 0 )
80002188:	92c1a783          	lw	a5,-1748(gp) # 80006fac <pxCurrentTCB>
8000218c:	00478793          	addi	a5,a5,4
80002190:	00078513          	mv	a0,a5
80002194:	ae9ff0ef          	jal	ra,80001c7c <uxListRemove>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:960
				}
				else
				{
					mtCOVERAGE_TEST_MARKER();
				}
				prvAddCurrentTaskToDelayedList( xTimeToWake );
80002198:	fe842503          	lw	a0,-24(s0)
8000219c:	021000ef          	jal	ra,800029bc <prvAddCurrentTaskToDelayedList>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:962
			}
			xAlreadyYielded = xTaskResumeAll();
800021a0:	0e0000ef          	jal	ra,80002280 <xTaskResumeAll>
800021a4:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:971
			mtCOVERAGE_TEST_MARKER();
		}

		/* Force a reschedule if xTaskResumeAll has not already done so, we may
		have put ourselves to sleep. */
		if( xAlreadyYielded == pdFALSE )
800021a8:	fec42783          	lw	a5,-20(s0)
800021ac:	00079463          	bnez	a5,800021b4 <vTaskDelay+0x70>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:973
		{
			portYIELD_WITHIN_API();
800021b0:	8bdff0ef          	jal	ra,80001a6c <vPortYield>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:979
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
800021b4:	00000013          	nop
800021b8:	02c12083          	lw	ra,44(sp)
800021bc:	02812403          	lw	s0,40(sp)
800021c0:	03010113          	addi	sp,sp,48
800021c4:	00008067          	ret

800021c8 <vTaskStartScheduler>:
vTaskStartScheduler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1542

#endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
/*-----------------------------------------------------------*/

void vTaskStartScheduler( void )
{
800021c8:	fe010113          	addi	sp,sp,-32
800021cc:	00112e23          	sw	ra,28(sp)
800021d0:	00812c23          	sw	s0,24(sp)
800021d4:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1555
		xReturn = xTaskCreate( prvIdleTask, "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), &xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explicit cast to all supported compilers. */
	}
	#else
	{
		/* Create the idle task without storing its handle. */
		xReturn = xTaskCreate( prvIdleTask, "IDLE", tskIDLE_STACK_SIZE, ( void * ) NULL, ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), NULL );  /*lint !e961 MISRA exception, justified as it is not a redundant explicit cast to all supported compilers. */
800021d8:	00000893          	li	a7,0
800021dc:	00000813          	li	a6,0
800021e0:	00000793          	li	a5,0
800021e4:	00000713          	li	a4,0
800021e8:	00000693          	li	a3,0
800021ec:	40000613          	li	a2,1024
800021f0:	800075b7          	lui	a1,0x80007
800021f4:	9b458593          	addi	a1,a1,-1612 # 800069b4 <__stack_top+0xfffc5384>
800021f8:	80002537          	lui	a0,0x80002
800021fc:	6f050513          	addi	a0,a0,1776 # 800026f0 <__stack_top+0xfffc10c0>
80002200:	c4dff0ef          	jal	ra,80001e4c <xTaskGenericCreate>
80002204:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1572
			mtCOVERAGE_TEST_MARKER();
		}
	}
	#endif /* configUSE_TIMERS */

	if( xReturn == pdPASS )
80002208:	fec42703          	lw	a4,-20(s0)
8000220c:	00100793          	li	a5,1
80002210:	02f71263          	bne	a4,a5,80002234 <vTaskStartScheduler+0x6c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1579
		/* Interrupts are turned off here, to ensure a tick does not occur
		before or during the call to xPortStartScheduler().  The stacks of
		the created tasks contain a status word with interrupts switched on
		so interrupts will automatically get re-enabled when the first task
		starts to run. */
		portDISABLE_INTERRUPTS();
80002214:	30047073          	csrci	mstatus,8
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1589
			structure specific to the task that will run first. */
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
		}
		#endif /* configUSE_NEWLIB_REENTRANT */

		xNextTaskUnblockTime = portMAX_DELAY;
80002218:	fff00713          	li	a4,-1
8000221c:	94e1ae23          	sw	a4,-1700(gp) # 80006fdc <xNextTaskUnblockTime>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1590
		xSchedulerRunning = pdTRUE;
80002220:	00100713          	li	a4,1
80002224:	94e1a423          	sw	a4,-1720(gp) # 80006fc8 <xSchedulerRunning>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1591
		xTickCount = ( TickType_t ) 0U;
80002228:	9401a023          	sw	zero,-1728(gp) # 80006fc0 <xTickCount>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1600
		the run time counter time base. */
		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();

		/* Setting up the timer tick is hardware specific and thus in the
		portable interface. */
		if( xPortStartScheduler() != pdFALSE )
8000222c:	f20ff0ef          	jal	ra,8000194c <xPortStartScheduler>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1617
		/* This line will only be reached if the kernel could not be started,
		because there was not enough FreeRTOS heap to create the idle task
		or the timer task. */
		configASSERT( xReturn );
	}
}
80002230:	0140006f          	j	80002244 <vTaskStartScheduler+0x7c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1615
		configASSERT( xReturn );
80002234:	fec42783          	lw	a5,-20(s0)
80002238:	00079663          	bnez	a5,80002244 <vTaskStartScheduler+0x7c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1615 (discriminator 1)
8000223c:	30047073          	csrci	mstatus,8
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1615 (discriminator 2)
80002240:	0000006f          	j	80002240 <vTaskStartScheduler+0x78>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1617
}
80002244:	00000013          	nop
80002248:	01c12083          	lw	ra,28(sp)
8000224c:	01812403          	lw	s0,24(sp)
80002250:	02010113          	addi	sp,sp,32
80002254:	00008067          	ret

80002258 <vTaskSuspendAll>:
vTaskSuspendAll():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1632
	vPortEndScheduler();
}
/*----------------------------------------------------------*/

void vTaskSuspendAll( void )
{
80002258:	ff010113          	addi	sp,sp,-16
8000225c:	00812623          	sw	s0,12(sp)
80002260:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1637
	/* A critical section is not required as the variable is of type
	BaseType_t.  Please read Richard Barry's reply in the following link to a
	post in the FreeRTOS support forum before reporting this as a bug! -
	http://goo.gl/wu4acr */
	++uxSchedulerSuspended;
80002264:	9601a783          	lw	a5,-1696(gp) # 80006fe0 <uxSchedulerSuspended>
80002268:	00178713          	addi	a4,a5,1
8000226c:	96e1a023          	sw	a4,-1696(gp) # 80006fe0 <uxSchedulerSuspended>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1638
}
80002270:	00000013          	nop
80002274:	00c12403          	lw	s0,12(sp)
80002278:	01010113          	addi	sp,sp,16
8000227c:	00008067          	ret

80002280 <xTaskResumeAll>:
xTaskResumeAll():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1670

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

BaseType_t xTaskResumeAll( void )
{
80002280:	fe010113          	addi	sp,sp,-32
80002284:	00112e23          	sw	ra,28(sp)
80002288:	00812c23          	sw	s0,24(sp)
8000228c:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1672
TCB_t *pxTCB;
BaseType_t xAlreadyYielded = pdFALSE;
80002290:	fe042623          	sw	zero,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1676

	/* If uxSchedulerSuspended is zero then this function does not match a
	previous call to vTaskSuspendAll(). */
	configASSERT( uxSchedulerSuspended );
80002294:	9601a783          	lw	a5,-1696(gp) # 80006fe0 <uxSchedulerSuspended>
80002298:	00079663          	bnez	a5,800022a4 <xTaskResumeAll+0x24>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1676 (discriminator 1)
8000229c:	30047073          	csrci	mstatus,8
800022a0:	0000006f          	j	800022a0 <xTaskResumeAll+0x20>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1683
	/* It is possible that an ISR caused a task to be removed from an event
	list while the scheduler was suspended.  If this was the case then the
	removed task will have been added to the xPendingReadyList.  Once the
	scheduler has been resumed it is safe to move all the pending ready
	tasks from this list into their appropriate ready list. */
	taskENTER_CRITICAL();
800022a4:	b10ff0ef          	jal	ra,800015b4 <vPortEnterCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1685
	{
		--uxSchedulerSuspended;
800022a8:	9601a783          	lw	a5,-1696(gp) # 80006fe0 <uxSchedulerSuspended>
800022ac:	fff78713          	addi	a4,a5,-1
800022b0:	96e1a023          	sw	a4,-1696(gp) # 80006fe0 <uxSchedulerSuspended>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1687

		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
800022b4:	9601a783          	lw	a5,-1696(gp) # 80006fe0 <uxSchedulerSuspended>
800022b8:	10079663          	bnez	a5,800023c4 <xTaskResumeAll+0x144>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1689
		{
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
800022bc:	93c1a783          	lw	a5,-1732(gp) # 80006fbc <uxCurrentNumberOfTasks>
800022c0:	10078263          	beqz	a5,800023c4 <xTaskResumeAll+0x144>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1693
			{
				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
800022c4:	0a80006f          	j	8000236c <xTaskResumeAll+0xec>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1695
				{
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
800022c8:	800207b7          	lui	a5,0x80020
800022cc:	07c78793          	addi	a5,a5,124 # 8002007c <__stack_top+0xfffdea4c>
800022d0:	00c7a783          	lw	a5,12(a5)
800022d4:	00c7a783          	lw	a5,12(a5)
800022d8:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1696
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
800022dc:	fe842783          	lw	a5,-24(s0)
800022e0:	01878793          	addi	a5,a5,24
800022e4:	00078513          	mv	a0,a5
800022e8:	995ff0ef          	jal	ra,80001c7c <uxListRemove>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1697
					( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
800022ec:	fe842783          	lw	a5,-24(s0)
800022f0:	00478793          	addi	a5,a5,4
800022f4:	00078513          	mv	a0,a5
800022f8:	985ff0ef          	jal	ra,80001c7c <uxListRemove>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1698
					prvAddTaskToReadyList( pxTCB );
800022fc:	fe842783          	lw	a5,-24(s0)
80002300:	02c7a703          	lw	a4,44(a5)
80002304:	9441a783          	lw	a5,-1724(gp) # 80006fc4 <uxTopReadyPriority>
80002308:	00e7f863          	bleu	a4,a5,80002318 <xTaskResumeAll+0x98>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1698 (discriminator 1)
8000230c:	fe842783          	lw	a5,-24(s0)
80002310:	02c7a703          	lw	a4,44(a5)
80002314:	94e1a223          	sw	a4,-1724(gp) # 80006fc4 <uxTopReadyPriority>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1698 (discriminator 3)
80002318:	fe842783          	lw	a5,-24(s0)
8000231c:	02c7a703          	lw	a4,44(a5)
80002320:	00070793          	mv	a5,a4
80002324:	00279793          	slli	a5,a5,0x2
80002328:	00e787b3          	add	a5,a5,a4
8000232c:	00279793          	slli	a5,a5,0x2
80002330:	80020737          	lui	a4,0x80020
80002334:	ff070713          	addi	a4,a4,-16 # 8001fff0 <__stack_top+0xfffde9c0>
80002338:	00e78733          	add	a4,a5,a4
8000233c:	fe842783          	lw	a5,-24(s0)
80002340:	00478793          	addi	a5,a5,4
80002344:	00078593          	mv	a1,a5
80002348:	00070513          	mv	a0,a4
8000234c:	fd4ff0ef          	jal	ra,80001b20 <vListInsertEnd>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1702 (discriminator 3)

					/* If the moved task has a priority higher than the current
					task then a yield must be performed. */
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
80002350:	fe842783          	lw	a5,-24(s0)
80002354:	02c7a703          	lw	a4,44(a5)
80002358:	92c1a783          	lw	a5,-1748(gp) # 80006fac <pxCurrentTCB>
8000235c:	02c7a783          	lw	a5,44(a5)
80002360:	00f76663          	bltu	a4,a5,8000236c <xTaskResumeAll+0xec>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1704
					{
						xYieldPending = pdTRUE;
80002364:	00100713          	li	a4,1
80002368:	94e1a823          	sw	a4,-1712(gp) # 80006fd0 <xYieldPending>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1693
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
8000236c:	800207b7          	lui	a5,0x80020
80002370:	07c7a783          	lw	a5,124(a5) # 8002007c <__stack_top+0xfffdea4c>
80002374:	f4079ae3          	bnez	a5,800022c8 <xTaskResumeAll+0x48>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1716

				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does
				not	slip, and that any delayed tasks are resumed at the correct
				time. */
				if( uxPendedTicks > ( UBaseType_t ) 0U )
80002378:	94c1a783          	lw	a5,-1716(gp) # 80006fcc <uxPendedTicks>
8000237c:	02078863          	beqz	a5,800023ac <xTaskResumeAll+0x12c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1718
				{
					while( uxPendedTicks > ( UBaseType_t ) 0U )
80002380:	0240006f          	j	800023a4 <xTaskResumeAll+0x124>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1720
					{
						if( xTaskIncrementTick() != pdFALSE )
80002384:	094000ef          	jal	ra,80002418 <xTaskIncrementTick>
80002388:	00050793          	mv	a5,a0
8000238c:	00078663          	beqz	a5,80002398 <xTaskResumeAll+0x118>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1722
						{
							xYieldPending = pdTRUE;
80002390:	00100713          	li	a4,1
80002394:	94e1a823          	sw	a4,-1712(gp) # 80006fd0 <xYieldPending>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1728
						}
						else
						{
							mtCOVERAGE_TEST_MARKER();
						}
						--uxPendedTicks;
80002398:	94c1a783          	lw	a5,-1716(gp) # 80006fcc <uxPendedTicks>
8000239c:	fff78713          	addi	a4,a5,-1
800023a0:	94e1a623          	sw	a4,-1716(gp) # 80006fcc <uxPendedTicks>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1718
					while( uxPendedTicks > ( UBaseType_t ) 0U )
800023a4:	94c1a783          	lw	a5,-1716(gp) # 80006fcc <uxPendedTicks>
800023a8:	fc079ee3          	bnez	a5,80002384 <xTaskResumeAll+0x104>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1736
				else
				{
					mtCOVERAGE_TEST_MARKER();
				}

				if( xYieldPending == pdTRUE )
800023ac:	9501a703          	lw	a4,-1712(gp) # 80006fd0 <xYieldPending>
800023b0:	00100793          	li	a5,1
800023b4:	00f71863          	bne	a4,a5,800023c4 <xTaskResumeAll+0x144>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1740
				{
					#if( configUSE_PREEMPTION != 0 )
					{
						xAlreadyYielded = pdTRUE;
800023b8:	00100793          	li	a5,1
800023bc:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1743
					}
					#endif
					taskYIELD_IF_USING_PREEMPTION();
800023c0:	eacff0ef          	jal	ra,80001a6c <vPortYield>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1756
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
800023c4:	a24ff0ef          	jal	ra,800015e8 <vPortExitCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1758

	return xAlreadyYielded;
800023c8:	fec42783          	lw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1759
}
800023cc:	00078513          	mv	a0,a5
800023d0:	01c12083          	lw	ra,28(sp)
800023d4:	01812403          	lw	s0,24(sp)
800023d8:	02010113          	addi	sp,sp,32
800023dc:	00008067          	ret

800023e0 <xTaskGetTickCount>:
xTaskGetTickCount():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1763
/*-----------------------------------------------------------*/

TickType_t xTaskGetTickCount( void )
{
800023e0:	fe010113          	addi	sp,sp,-32
800023e4:	00112e23          	sw	ra,28(sp)
800023e8:	00812c23          	sw	s0,24(sp)
800023ec:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1767
TickType_t xTicks;

	/* Critical section required if running on a 16 bit processor. */
	portTICK_TYPE_ENTER_CRITICAL();
800023f0:	9c4ff0ef          	jal	ra,800015b4 <vPortEnterCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1769
	{
		xTicks = xTickCount;
800023f4:	9401a783          	lw	a5,-1728(gp) # 80006fc0 <xTickCount>
800023f8:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1771
	}
	portTICK_TYPE_EXIT_CRITICAL();
800023fc:	9ecff0ef          	jal	ra,800015e8 <vPortExitCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1773

	return xTicks;
80002400:	fec42783          	lw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1774
}
80002404:	00078513          	mv	a0,a5
80002408:	01c12083          	lw	ra,28(sp)
8000240c:	01812403          	lw	s0,24(sp)
80002410:	02010113          	addi	sp,sp,32
80002414:	00008067          	ret

80002418 <xTaskIncrementTick>:
xTaskIncrementTick():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1938

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

BaseType_t xTaskIncrementTick( void )
{
80002418:	fd010113          	addi	sp,sp,-48
8000241c:	02112623          	sw	ra,44(sp)
80002420:	02812423          	sw	s0,40(sp)
80002424:	03010413          	addi	s0,sp,48
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1941
TCB_t * pxTCB;
TickType_t xItemValue;
BaseType_t xSwitchRequired = pdFALSE;
80002428:	fe042623          	sw	zero,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1947

	/* Called by the portable layer each time a tick interrupt occurs.
	Increments the tick then checks to see if the new tick value will cause any
	tasks to be unblocked. */
	traceTASK_INCREMENT_TICK( xTickCount );
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
8000242c:	9601a783          	lw	a5,-1696(gp) # 80006fe0 <uxSchedulerSuspended>
80002430:	1a079063          	bnez	a5,800025d0 <xTaskIncrementTick+0x1b8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1951
	{
		/* Increment the RTOS tick, switching the delayed and overflowed
		delayed lists if it wraps to 0. */
		++xTickCount;
80002434:	9401a783          	lw	a5,-1728(gp) # 80006fc0 <xTickCount>
80002438:	00178713          	addi	a4,a5,1
8000243c:	94e1a023          	sw	a4,-1728(gp) # 80006fc0 <xTickCount>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1956

		{
			/* Minor optimisation.  The tick count cannot change in this
			block. */
			const TickType_t xConstTickCount = xTickCount;
80002440:	9401a783          	lw	a5,-1728(gp) # 80006fc0 <xTickCount>
80002444:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1958

			if( xConstTickCount == ( TickType_t ) 0U )
80002448:	fe842783          	lw	a5,-24(s0)
8000244c:	04079063          	bnez	a5,8000248c <xTaskIncrementTick+0x74>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1960
			{
				taskSWITCH_DELAYED_LISTS();
80002450:	9301a783          	lw	a5,-1744(gp) # 80006fb0 <pxDelayedTaskList>
80002454:	0007a783          	lw	a5,0(a5)
80002458:	00078663          	beqz	a5,80002464 <xTaskIncrementTick+0x4c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1960 (discriminator 1)
8000245c:	30047073          	csrci	mstatus,8
80002460:	0000006f          	j	80002460 <xTaskIncrementTick+0x48>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1960 (discriminator 2)
80002464:	9301a783          	lw	a5,-1744(gp) # 80006fb0 <pxDelayedTaskList>
80002468:	fef42223          	sw	a5,-28(s0)
8000246c:	9341a703          	lw	a4,-1740(gp) # 80006fb4 <pxOverflowDelayedTaskList>
80002470:	92e1a823          	sw	a4,-1744(gp) # 80006fb0 <pxDelayedTaskList>
80002474:	fe442703          	lw	a4,-28(s0)
80002478:	92e1aa23          	sw	a4,-1740(gp) # 80006fb4 <pxOverflowDelayedTaskList>
8000247c:	9541a783          	lw	a5,-1708(gp) # 80006fd4 <xNumOfOverflows>
80002480:	00178713          	addi	a4,a5,1
80002484:	94e1aa23          	sw	a4,-1708(gp) # 80006fd4 <xNumOfOverflows>
80002488:	6bc000ef          	jal	ra,80002b44 <prvResetNextTaskUnblockTime>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1971

			/* See if this tick has made a timeout expire.  Tasks are stored in
			the	queue in the order of their wake time - meaning once one task
			has been found whose block time has not expired there is no need to
			look any further down the list. */
			if( xConstTickCount >= xNextTaskUnblockTime )
8000248c:	95c1a783          	lw	a5,-1700(gp) # 80006fdc <xNextTaskUnblockTime>
80002490:	fe842703          	lw	a4,-24(s0)
80002494:	10f76063          	bltu	a4,a5,80002594 <xTaskIncrementTick+0x17c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1975
			{
				for( ;; )
				{
					if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
80002498:	9301a783          	lw	a5,-1744(gp) # 80006fb0 <pxDelayedTaskList>
8000249c:	0007a783          	lw	a5,0(a5)
800024a0:	00079663          	bnez	a5,800024ac <xTaskIncrementTick+0x94>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1975 (discriminator 1)
800024a4:	00100793          	li	a5,1
800024a8:	0080006f          	j	800024b0 <xTaskIncrementTick+0x98>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1975 (discriminator 2)
800024ac:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1975 (discriminator 4)
800024b0:	00078863          	beqz	a5,800024c0 <xTaskIncrementTick+0xa8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1982
						/* The delayed list is empty.  Set xNextTaskUnblockTime
						to the maximum possible value so it is extremely
						unlikely that the
						if( xTickCount >= xNextTaskUnblockTime ) test will pass
						next time through. */
						xNextTaskUnblockTime = portMAX_DELAY;
800024b4:	fff00713          	li	a4,-1
800024b8:	94e1ae23          	sw	a4,-1700(gp) # 80006fdc <xNextTaskUnblockTime>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1983
						break;
800024bc:	0d80006f          	j	80002594 <xTaskIncrementTick+0x17c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1991
					{
						/* The delayed list is not empty, get the value of the
						item at the head of the delayed list.  This is the time
						at which the task at the head of the delayed list must
						be removed from the Blocked state. */
						pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
800024c0:	9301a783          	lw	a5,-1744(gp) # 80006fb0 <pxDelayedTaskList>
800024c4:	00c7a783          	lw	a5,12(a5)
800024c8:	00c7a783          	lw	a5,12(a5)
800024cc:	fef42023          	sw	a5,-32(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1992
						xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xGenericListItem ) );
800024d0:	fe042783          	lw	a5,-32(s0)
800024d4:	0047a783          	lw	a5,4(a5)
800024d8:	fcf42e23          	sw	a5,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1994

						if( xConstTickCount < xItemValue )
800024dc:	fe842703          	lw	a4,-24(s0)
800024e0:	fdc42783          	lw	a5,-36(s0)
800024e4:	00f77863          	bleu	a5,a4,800024f4 <xTaskIncrementTick+0xdc>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2001
							/* It is not time to unblock this item yet, but the
							item value is the time at which the task at the head
							of the blocked list must be removed from the Blocked
							state -	so record the item value in
							xNextTaskUnblockTime. */
							xNextTaskUnblockTime = xItemValue;
800024e8:	fdc42703          	lw	a4,-36(s0)
800024ec:	94e1ae23          	sw	a4,-1700(gp) # 80006fdc <xNextTaskUnblockTime>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2002
							break;
800024f0:	0a40006f          	j	80002594 <xTaskIncrementTick+0x17c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2010
						{
							mtCOVERAGE_TEST_MARKER();
						}

						/* It is time to remove the item from the Blocked state. */
						( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
800024f4:	fe042783          	lw	a5,-32(s0)
800024f8:	00478793          	addi	a5,a5,4
800024fc:	00078513          	mv	a0,a5
80002500:	f7cff0ef          	jal	ra,80001c7c <uxListRemove>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2014

						/* Is the task waiting on an event also?  If so remove
						it from the event list. */
						if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
80002504:	fe042783          	lw	a5,-32(s0)
80002508:	0287a783          	lw	a5,40(a5)
8000250c:	00078a63          	beqz	a5,80002520 <xTaskIncrementTick+0x108>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2016
						{
							( void ) uxListRemove( &( pxTCB->xEventListItem ) );
80002510:	fe042783          	lw	a5,-32(s0)
80002514:	01878793          	addi	a5,a5,24
80002518:	00078513          	mv	a0,a5
8000251c:	f60ff0ef          	jal	ra,80001c7c <uxListRemove>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2025
							mtCOVERAGE_TEST_MARKER();
						}

						/* Place the unblocked task into the appropriate ready
						list. */
						prvAddTaskToReadyList( pxTCB );
80002520:	fe042783          	lw	a5,-32(s0)
80002524:	02c7a703          	lw	a4,44(a5)
80002528:	9441a783          	lw	a5,-1724(gp) # 80006fc4 <uxTopReadyPriority>
8000252c:	00e7f863          	bleu	a4,a5,8000253c <xTaskIncrementTick+0x124>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2025 (discriminator 1)
80002530:	fe042783          	lw	a5,-32(s0)
80002534:	02c7a703          	lw	a4,44(a5)
80002538:	94e1a223          	sw	a4,-1724(gp) # 80006fc4 <uxTopReadyPriority>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2025 (discriminator 3)
8000253c:	fe042783          	lw	a5,-32(s0)
80002540:	02c7a703          	lw	a4,44(a5)
80002544:	00070793          	mv	a5,a4
80002548:	00279793          	slli	a5,a5,0x2
8000254c:	00e787b3          	add	a5,a5,a4
80002550:	00279793          	slli	a5,a5,0x2
80002554:	80020737          	lui	a4,0x80020
80002558:	ff070713          	addi	a4,a4,-16 # 8001fff0 <__stack_top+0xfffde9c0>
8000255c:	00e78733          	add	a4,a5,a4
80002560:	fe042783          	lw	a5,-32(s0)
80002564:	00478793          	addi	a5,a5,4
80002568:	00078593          	mv	a1,a5
8000256c:	00070513          	mv	a0,a4
80002570:	db0ff0ef          	jal	ra,80001b20 <vListInsertEnd>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2035 (discriminator 3)
						{
							/* Preemption is on, but a context switch should
							only be performed if the unblocked task has a
							priority that is equal to or higher than the
							currently executing task. */
							if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
80002574:	fe042783          	lw	a5,-32(s0)
80002578:	02c7a703          	lw	a4,44(a5)
8000257c:	92c1a783          	lw	a5,-1748(gp) # 80006fac <pxCurrentTCB>
80002580:	02c7a783          	lw	a5,44(a5)
80002584:	f0f76ae3          	bltu	a4,a5,80002498 <xTaskIncrementTick+0x80>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2037
							{
								xSwitchRequired = pdTRUE;
80002588:	00100793          	li	a5,1
8000258c:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:1975
					if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
80002590:	f09ff06f          	j	80002498 <xTaskIncrementTick+0x80>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2055
		/* Tasks of equal priority to the currently running task will share
		processing time (time slice) if preemption is on, and the application
		writer has not explicitly turned time slicing off. */
		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
		{
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
80002594:	92c1a783          	lw	a5,-1748(gp) # 80006fac <pxCurrentTCB>
80002598:	02c7a703          	lw	a4,44(a5)
8000259c:	800206b7          	lui	a3,0x80020
800025a0:	00070793          	mv	a5,a4
800025a4:	00279793          	slli	a5,a5,0x2
800025a8:	00e787b3          	add	a5,a5,a4
800025ac:	00279793          	slli	a5,a5,0x2
800025b0:	ff068713          	addi	a4,a3,-16 # 8001fff0 <__stack_top+0xfffde9c0>
800025b4:	00e787b3          	add	a5,a5,a4
800025b8:	0007a703          	lw	a4,0(a5)
800025bc:	00100793          	li	a5,1
800025c0:	00e7fe63          	bleu	a4,a5,800025dc <xTaskIncrementTick+0x1c4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2057
			{
				xSwitchRequired = pdTRUE;
800025c4:	00100793          	li	a5,1
800025c8:	fef42623          	sw	a5,-20(s0)
800025cc:	0100006f          	j	800025dc <xTaskIncrementTick+0x1c4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2083
		}
		#endif /* configUSE_TICK_HOOK */
	}
	else
	{
		++uxPendedTicks;
800025d0:	94c1a783          	lw	a5,-1716(gp) # 80006fcc <uxPendedTicks>
800025d4:	00178713          	addi	a4,a5,1
800025d8:	94e1a623          	sw	a4,-1716(gp) # 80006fcc <uxPendedTicks>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2096
		#endif
	}

	#if ( configUSE_PREEMPTION == 1 )
	{
		if( xYieldPending != pdFALSE )
800025dc:	9501a783          	lw	a5,-1712(gp) # 80006fd0 <xYieldPending>
800025e0:	00078663          	beqz	a5,800025ec <xTaskIncrementTick+0x1d4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2098
		{
			xSwitchRequired = pdTRUE;
800025e4:	00100793          	li	a5,1
800025e8:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2107
			mtCOVERAGE_TEST_MARKER();
		}
	}
	#endif /* configUSE_PREEMPTION */

	return xSwitchRequired;
800025ec:	fec42783          	lw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2108
}
800025f0:	00078513          	mv	a0,a5
800025f4:	02c12083          	lw	ra,44(sp)
800025f8:	02812403          	lw	s0,40(sp)
800025fc:	03010113          	addi	sp,sp,48
80002600:	00008067          	ret

80002604 <vTaskSwitchContext>:
vTaskSwitchContext():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2202

#endif /* configUSE_APPLICATION_TASK_TAG */
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
80002604:	fe010113          	addi	sp,sp,-32
80002608:	00812e23          	sw	s0,28(sp)
8000260c:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2203
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
80002610:	9601a783          	lw	a5,-1696(gp) # 80006fe0 <uxSchedulerSuspended>
80002614:	00078863          	beqz	a5,80002624 <vTaskSwitchContext+0x20>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2207
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xYieldPending = pdTRUE;
80002618:	00100713          	li	a4,1
8000261c:	94e1a823          	sw	a4,-1712(gp) # 80006fd0 <xYieldPending>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2257
			structure specific to this task. */
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
		}
		#endif /* configUSE_NEWLIB_REENTRANT */
	}
}
80002620:	0c00006f          	j	800026e0 <vTaskSwitchContext+0xdc>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2211
		xYieldPending = pdFALSE;
80002624:	9401a823          	sw	zero,-1712(gp) # 80006fd0 <xYieldPending>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2246
		taskSELECT_HIGHEST_PRIORITY_TASK();
80002628:	0200006f          	j	80002648 <vTaskSwitchContext+0x44>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2246 (discriminator 4)
8000262c:	9441a783          	lw	a5,-1724(gp) # 80006fc4 <uxTopReadyPriority>
80002630:	00079663          	bnez	a5,8000263c <vTaskSwitchContext+0x38>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2246 (discriminator 1)
80002634:	30047073          	csrci	mstatus,8
80002638:	0000006f          	j	80002638 <vTaskSwitchContext+0x34>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2246 (discriminator 2)
8000263c:	9441a783          	lw	a5,-1724(gp) # 80006fc4 <uxTopReadyPriority>
80002640:	fff78713          	addi	a4,a5,-1
80002644:	94e1a223          	sw	a4,-1724(gp) # 80006fc4 <uxTopReadyPriority>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2246 (discriminator 3)
80002648:	9441a703          	lw	a4,-1724(gp) # 80006fc4 <uxTopReadyPriority>
8000264c:	800206b7          	lui	a3,0x80020
80002650:	00070793          	mv	a5,a4
80002654:	00279793          	slli	a5,a5,0x2
80002658:	00e787b3          	add	a5,a5,a4
8000265c:	00279793          	slli	a5,a5,0x2
80002660:	ff068713          	addi	a4,a3,-16 # 8001fff0 <__stack_top+0xfffde9c0>
80002664:	00e787b3          	add	a5,a5,a4
80002668:	0007a783          	lw	a5,0(a5)
8000266c:	fc0780e3          	beqz	a5,8000262c <vTaskSwitchContext+0x28>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2246 (discriminator 5)
80002670:	9441a703          	lw	a4,-1724(gp) # 80006fc4 <uxTopReadyPriority>
80002674:	00070793          	mv	a5,a4
80002678:	00279793          	slli	a5,a5,0x2
8000267c:	00e787b3          	add	a5,a5,a4
80002680:	00279793          	slli	a5,a5,0x2
80002684:	80020737          	lui	a4,0x80020
80002688:	ff070713          	addi	a4,a4,-16 # 8001fff0 <__stack_top+0xfffde9c0>
8000268c:	00e787b3          	add	a5,a5,a4
80002690:	fef42623          	sw	a5,-20(s0)
80002694:	fec42783          	lw	a5,-20(s0)
80002698:	0047a783          	lw	a5,4(a5)
8000269c:	0047a703          	lw	a4,4(a5)
800026a0:	fec42783          	lw	a5,-20(s0)
800026a4:	00e7a223          	sw	a4,4(a5)
800026a8:	fec42783          	lw	a5,-20(s0)
800026ac:	0047a703          	lw	a4,4(a5)
800026b0:	fec42783          	lw	a5,-20(s0)
800026b4:	00878793          	addi	a5,a5,8
800026b8:	00f71c63          	bne	a4,a5,800026d0 <vTaskSwitchContext+0xcc>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2246 (discriminator 6)
800026bc:	fec42783          	lw	a5,-20(s0)
800026c0:	0047a783          	lw	a5,4(a5)
800026c4:	0047a703          	lw	a4,4(a5)
800026c8:	fec42783          	lw	a5,-20(s0)
800026cc:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2246 (discriminator 8)
800026d0:	fec42783          	lw	a5,-20(s0)
800026d4:	0047a783          	lw	a5,4(a5)
800026d8:	00c7a703          	lw	a4,12(a5)
800026dc:	92e1a623          	sw	a4,-1748(gp) # 80006fac <pxCurrentTCB>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2257
}
800026e0:	00000013          	nop
800026e4:	01c12403          	lw	s0,28(sp)
800026e8:	02010113          	addi	sp,sp,32
800026ec:	00008067          	ret

800026f0 <prvIdleTask>:
prvIdleTask():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2689
 *
 * void prvIdleTask( void *pvParameters );
 *
 */
static portTASK_FUNCTION( prvIdleTask, pvParameters )
{
800026f0:	fe010113          	addi	sp,sp,-32
800026f4:	00112e23          	sw	ra,28(sp)
800026f8:	00812c23          	sw	s0,24(sp)
800026fc:	02010413          	addi	s0,sp,32
80002700:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2696
	( void ) pvParameters;

	for( ;; )
	{
		/* See if any tasks have been deleted. */
		prvCheckTasksWaitingTermination();
80002704:	218000ef          	jal	ra,8000291c <prvCheckTasksWaitingTermination>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2719

			A critical region is not required here as we are just reading from
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
80002708:	800207b7          	lui	a5,0x80020
8000270c:	ff07a703          	lw	a4,-16(a5) # 8001fff0 <__stack_top+0xfffde9c0>
80002710:	00100793          	li	a5,1
80002714:	00e7f463          	bleu	a4,a5,8000271c <prvIdleTask+0x2c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2721
			{
				taskYIELD();
80002718:	b54ff0ef          	jal	ra,80001a6c <vPortYield>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2739
			/* Call the user defined function from within the idle task.  This
			allows the application designer to add background functionality
			without the overhead of a separate task.
			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
			CALL A FUNCTION THAT MIGHT BLOCK. */
			vApplicationIdleHook();
8000271c:	721030ef          	jal	ra,8000663c <vApplicationIdleHook>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2696
		prvCheckTasksWaitingTermination();
80002720:	fe5ff06f          	j	80002704 <prvIdleTask+0x14>

80002724 <prvInitialiseTCBVariables>:
prvInitialiseTCBVariables():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2832

#endif /* configUSE_TICKLESS_IDLE */
/*-----------------------------------------------------------*/

static void prvInitialiseTCBVariables( TCB_t * const pxTCB, const char * const pcName, UBaseType_t uxPriority, const MemoryRegion_t * const xRegions, const uint16_t usStackDepth ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
{
80002724:	fc010113          	addi	sp,sp,-64
80002728:	02112e23          	sw	ra,60(sp)
8000272c:	02812c23          	sw	s0,56(sp)
80002730:	04010413          	addi	s0,sp,64
80002734:	fca42e23          	sw	a0,-36(s0)
80002738:	fcb42c23          	sw	a1,-40(s0)
8000273c:	fcc42a23          	sw	a2,-44(s0)
80002740:	fcd42823          	sw	a3,-48(s0)
80002744:	00070793          	mv	a5,a4
80002748:	fcf41723          	sh	a5,-50(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2836
UBaseType_t x;

	/* Store the task name in the TCB. */
	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
8000274c:	fe042623          	sw	zero,-20(s0)
80002750:	0440006f          	j	80002794 <prvInitialiseTCBVariables+0x70>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2838
	{
		pxTCB->pcTaskName[ x ] = pcName[ x ];
80002754:	fd842703          	lw	a4,-40(s0)
80002758:	fec42783          	lw	a5,-20(s0)
8000275c:	00f707b3          	add	a5,a4,a5
80002760:	00078703          	lb	a4,0(a5)
80002764:	fdc42683          	lw	a3,-36(s0)
80002768:	fec42783          	lw	a5,-20(s0)
8000276c:	00f687b3          	add	a5,a3,a5
80002770:	02e78a23          	sb	a4,52(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2843

		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
		configMAX_TASK_NAME_LEN characters just in case the memory after the
		string is not accessible (extremely unlikely). */
		if( pcName[ x ] == 0x00 )
80002774:	fd842703          	lw	a4,-40(s0)
80002778:	fec42783          	lw	a5,-20(s0)
8000277c:	00f707b3          	add	a5,a4,a5
80002780:	00078783          	lb	a5,0(a5)
80002784:	02078063          	beqz	a5,800027a4 <prvInitialiseTCBVariables+0x80>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2836 (discriminator 2)
	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
80002788:	fec42783          	lw	a5,-20(s0)
8000278c:	00178793          	addi	a5,a5,1
80002790:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2836 (discriminator 1)
80002794:	fec42703          	lw	a4,-20(s0)
80002798:	00f00793          	li	a5,15
8000279c:	fae7fce3          	bleu	a4,a5,80002754 <prvInitialiseTCBVariables+0x30>
800027a0:	0080006f          	j	800027a8 <prvInitialiseTCBVariables+0x84>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2845
		{
			break;
800027a4:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2855
		}
	}

	/* Ensure the name string is terminated in the case that the string length
	was greater or equal to configMAX_TASK_NAME_LEN. */
	pxTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
800027a8:	fdc42783          	lw	a5,-36(s0)
800027ac:	040781a3          	sb	zero,67(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2859

	/* This is used as an array index so must ensure it's not too large.  First
	remove the privilege bit if one is present. */
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
800027b0:	fd442703          	lw	a4,-44(s0)
800027b4:	00400793          	li	a5,4
800027b8:	00e7f663          	bleu	a4,a5,800027c4 <prvInitialiseTCBVariables+0xa0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2861
	{
		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
800027bc:	00400793          	li	a5,4
800027c0:	fcf42a23          	sw	a5,-44(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2868
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxTCB->uxPriority = uxPriority;
800027c4:	fdc42783          	lw	a5,-36(s0)
800027c8:	fd442703          	lw	a4,-44(s0)
800027cc:	02e7a623          	sw	a4,44(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2871
	#if ( configUSE_MUTEXES == 1 )
	{
		pxTCB->uxBasePriority = uxPriority;
800027d0:	fdc42783          	lw	a5,-36(s0)
800027d4:	fd442703          	lw	a4,-44(s0)
800027d8:	04e7a823          	sw	a4,80(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2872
		pxTCB->uxMutexesHeld = 0;
800027dc:	fdc42783          	lw	a5,-36(s0)
800027e0:	0407aa23          	sw	zero,84(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2876
	}
	#endif /* configUSE_MUTEXES */

	vListInitialiseItem( &( pxTCB->xGenericListItem ) );
800027e4:	fdc42783          	lw	a5,-36(s0)
800027e8:	00478793          	addi	a5,a5,4
800027ec:	00078513          	mv	a0,a5
800027f0:	b08ff0ef          	jal	ra,80001af8 <vListInitialiseItem>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2877
	vListInitialiseItem( &( pxTCB->xEventListItem ) );
800027f4:	fdc42783          	lw	a5,-36(s0)
800027f8:	01878793          	addi	a5,a5,24
800027fc:	00078513          	mv	a0,a5
80002800:	af8ff0ef          	jal	ra,80001af8 <vListInitialiseItem>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2881

	/* Set the pxTCB as a link back from the ListItem_t.  This is so we can get
	back to	the containing TCB from a generic item in a list. */
	listSET_LIST_ITEM_OWNER( &( pxTCB->xGenericListItem ), pxTCB );
80002804:	fdc42783          	lw	a5,-36(s0)
80002808:	fdc42703          	lw	a4,-36(s0)
8000280c:	00e7a823          	sw	a4,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2884

	/* Event lists are always in priority order. */
	listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
80002810:	00500713          	li	a4,5
80002814:	fd442783          	lw	a5,-44(s0)
80002818:	40f70733          	sub	a4,a4,a5
8000281c:	fdc42783          	lw	a5,-36(s0)
80002820:	00e7ac23          	sw	a4,24(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2885
	listSET_LIST_ITEM_OWNER( &( pxTCB->xEventListItem ), pxTCB );
80002824:	fdc42783          	lw	a5,-36(s0)
80002828:	fdc42703          	lw	a4,-36(s0)
8000282c:	02e7a223          	sw	a4,36(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2889

	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
	{
		pxTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
80002830:	fdc42783          	lw	a5,-36(s0)
80002834:	0407a223          	sw	zero,68(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2927
	}
	#endif

	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
	{
		pxTCB->ulNotifiedValue = 0;
80002838:	fdc42783          	lw	a5,-36(s0)
8000283c:	0407ac23          	sw	zero,88(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2928
		pxTCB->eNotifyState = eNotWaitingNotification;
80002840:	fdc42783          	lw	a5,-36(s0)
80002844:	0407ae23          	sw	zero,92(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2938
	{
		/* Initialise this task's Newlib reent structure. */
		_REENT_INIT_PTR( ( &( pxTCB->xNewLib_reent ) ) );
	}
	#endif /* configUSE_NEWLIB_REENTRANT */
}
80002848:	00000013          	nop
8000284c:	03c12083          	lw	ra,60(sp)
80002850:	03812403          	lw	s0,56(sp)
80002854:	04010113          	addi	sp,sp,64
80002858:	00008067          	ret

8000285c <prvInitialiseTaskLists>:
prvInitialiseTaskLists():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:2997

#endif /* portUSING_MPU_WRAPPERS */
/*-----------------------------------------------------------*/

static void prvInitialiseTaskLists( void )
{
8000285c:	fe010113          	addi	sp,sp,-32
80002860:	00112e23          	sw	ra,28(sp)
80002864:	00812c23          	sw	s0,24(sp)
80002868:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3000
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
8000286c:	fe042623          	sw	zero,-20(s0)
80002870:	0380006f          	j	800028a8 <prvInitialiseTaskLists+0x4c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3002 (discriminator 3)
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
80002874:	fec42703          	lw	a4,-20(s0)
80002878:	00070793          	mv	a5,a4
8000287c:	00279793          	slli	a5,a5,0x2
80002880:	00e787b3          	add	a5,a5,a4
80002884:	00279793          	slli	a5,a5,0x2
80002888:	80020737          	lui	a4,0x80020
8000288c:	ff070713          	addi	a4,a4,-16 # 8001fff0 <__stack_top+0xfffde9c0>
80002890:	00e787b3          	add	a5,a5,a4
80002894:	00078513          	mv	a0,a5
80002898:	9fcff0ef          	jal	ra,80001a94 <vListInitialise>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3000 (discriminator 3)
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
8000289c:	fec42783          	lw	a5,-20(s0)
800028a0:	00178793          	addi	a5,a5,1
800028a4:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3000 (discriminator 1)
800028a8:	fec42703          	lw	a4,-20(s0)
800028ac:	00400793          	li	a5,4
800028b0:	fce7f2e3          	bleu	a4,a5,80002874 <prvInitialiseTaskLists+0x18>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3005
	}

	vListInitialise( &xDelayedTaskList1 );
800028b4:	800207b7          	lui	a5,0x80020
800028b8:	05478513          	addi	a0,a5,84 # 80020054 <__stack_top+0xfffdea24>
800028bc:	9d8ff0ef          	jal	ra,80001a94 <vListInitialise>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3006
	vListInitialise( &xDelayedTaskList2 );
800028c0:	800207b7          	lui	a5,0x80020
800028c4:	06878513          	addi	a0,a5,104 # 80020068 <__stack_top+0xfffdea38>
800028c8:	9ccff0ef          	jal	ra,80001a94 <vListInitialise>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3007
	vListInitialise( &xPendingReadyList );
800028cc:	800207b7          	lui	a5,0x80020
800028d0:	07c78513          	addi	a0,a5,124 # 8002007c <__stack_top+0xfffdea4c>
800028d4:	9c0ff0ef          	jal	ra,80001a94 <vListInitialise>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3011

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
800028d8:	800207b7          	lui	a5,0x80020
800028dc:	09078513          	addi	a0,a5,144 # 80020090 <__stack_top+0xfffdea60>
800028e0:	9b4ff0ef          	jal	ra,80001a94 <vListInitialise>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3017
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
800028e4:	800207b7          	lui	a5,0x80020
800028e8:	0a478513          	addi	a0,a5,164 # 800200a4 <__stack_top+0xfffdea74>
800028ec:	9a8ff0ef          	jal	ra,80001a94 <vListInitialise>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3023
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
800028f0:	80020737          	lui	a4,0x80020
800028f4:	05470713          	addi	a4,a4,84 # 80020054 <__stack_top+0xfffdea24>
800028f8:	92e1a823          	sw	a4,-1744(gp) # 80006fb0 <pxDelayedTaskList>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3024
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
800028fc:	80020737          	lui	a4,0x80020
80002900:	06870713          	addi	a4,a4,104 # 80020068 <__stack_top+0xfffdea38>
80002904:	92e1aa23          	sw	a4,-1740(gp) # 80006fb4 <pxOverflowDelayedTaskList>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3025
}
80002908:	00000013          	nop
8000290c:	01c12083          	lw	ra,28(sp)
80002910:	01812403          	lw	s0,24(sp)
80002914:	02010113          	addi	sp,sp,32
80002918:	00008067          	ret

8000291c <prvCheckTasksWaitingTermination>:
prvCheckTasksWaitingTermination():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3029
/*-----------------------------------------------------------*/

static void prvCheckTasksWaitingTermination( void )
{
8000291c:	fe010113          	addi	sp,sp,-32
80002920:	00112e23          	sw	ra,28(sp)
80002924:	00812c23          	sw	s0,24(sp)
80002928:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3036
	{
		BaseType_t xListIsEmpty;

		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
		too often in the idle task. */
		while( uxTasksDeleted > ( UBaseType_t ) 0U )
8000292c:	0740006f          	j	800029a0 <prvCheckTasksWaitingTermination+0x84>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3038
		{
			vTaskSuspendAll();
80002930:	929ff0ef          	jal	ra,80002258 <vTaskSuspendAll>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3040
			{
				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
80002934:	800207b7          	lui	a5,0x80020
80002938:	0907a783          	lw	a5,144(a5) # 80020090 <__stack_top+0xfffdea60>
8000293c:	0017b793          	seqz	a5,a5
80002940:	0ff7f793          	andi	a5,a5,255
80002944:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3042
			}
			( void ) xTaskResumeAll();
80002948:	939ff0ef          	jal	ra,80002280 <xTaskResumeAll>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3044

			if( xListIsEmpty == pdFALSE )
8000294c:	fec42783          	lw	a5,-20(s0)
80002950:	04079863          	bnez	a5,800029a0 <prvCheckTasksWaitingTermination+0x84>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3048
			{
				TCB_t *pxTCB;

				taskENTER_CRITICAL();
80002954:	c61fe0ef          	jal	ra,800015b4 <vPortEnterCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3050
				{
					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
80002958:	800207b7          	lui	a5,0x80020
8000295c:	09078793          	addi	a5,a5,144 # 80020090 <__stack_top+0xfffdea60>
80002960:	00c7a783          	lw	a5,12(a5)
80002964:	00c7a783          	lw	a5,12(a5)
80002968:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3051
					( void ) uxListRemove( &( pxTCB->xGenericListItem ) );
8000296c:	fe842783          	lw	a5,-24(s0)
80002970:	00478793          	addi	a5,a5,4
80002974:	00078513          	mv	a0,a5
80002978:	b04ff0ef          	jal	ra,80001c7c <uxListRemove>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3052
					--uxCurrentNumberOfTasks;
8000297c:	93c1a783          	lw	a5,-1732(gp) # 80006fbc <uxCurrentNumberOfTasks>
80002980:	fff78713          	addi	a4,a5,-1
80002984:	92e1ae23          	sw	a4,-1732(gp) # 80006fbc <uxCurrentNumberOfTasks>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3053
					--uxTasksDeleted;
80002988:	9381a783          	lw	a5,-1736(gp) # 80006fb8 <uxTasksDeleted>
8000298c:	fff78713          	addi	a4,a5,-1
80002990:	92e1ac23          	sw	a4,-1736(gp) # 80006fb8 <uxTasksDeleted>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3055
				}
				taskEXIT_CRITICAL();
80002994:	c55fe0ef          	jal	ra,800015e8 <vPortExitCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3057

				prvDeleteTCB( pxTCB );
80002998:	fe842503          	lw	a0,-24(s0)
8000299c:	168000ef          	jal	ra,80002b04 <prvDeleteTCB>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3036
		while( uxTasksDeleted > ( UBaseType_t ) 0U )
800029a0:	9381a783          	lw	a5,-1736(gp) # 80006fb8 <uxTasksDeleted>
800029a4:	f80796e3          	bnez	a5,80002930 <prvCheckTasksWaitingTermination+0x14>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3066
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
	#endif /* vTaskDelete */
}
800029a8:	00000013          	nop
800029ac:	01c12083          	lw	ra,28(sp)
800029b0:	01812403          	lw	s0,24(sp)
800029b4:	02010113          	addi	sp,sp,32
800029b8:	00008067          	ret

800029bc <prvAddCurrentTaskToDelayedList>:
prvAddCurrentTaskToDelayedList():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3070
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( const TickType_t xTimeToWake )
{
800029bc:	fe010113          	addi	sp,sp,-32
800029c0:	00112e23          	sw	ra,28(sp)
800029c4:	00812c23          	sw	s0,24(sp)
800029c8:	02010413          	addi	s0,sp,32
800029cc:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3072
	/* The list item will be inserted in wake time order. */
	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xGenericListItem ), xTimeToWake );
800029d0:	92c1a783          	lw	a5,-1748(gp) # 80006fac <pxCurrentTCB>
800029d4:	fec42703          	lw	a4,-20(s0)
800029d8:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3074

	if( xTimeToWake < xTickCount )
800029dc:	9401a783          	lw	a5,-1728(gp) # 80006fc0 <xTickCount>
800029e0:	fec42703          	lw	a4,-20(s0)
800029e4:	02f77063          	bleu	a5,a4,80002a04 <prvAddCurrentTaskToDelayedList+0x48>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3077
	{
		/* Wake time has overflowed.  Place this item in the overflow list. */
		vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xGenericListItem ) );
800029e8:	9341a703          	lw	a4,-1740(gp) # 80006fb4 <pxOverflowDelayedTaskList>
800029ec:	92c1a783          	lw	a5,-1748(gp) # 80006fac <pxCurrentTCB>
800029f0:	00478793          	addi	a5,a5,4
800029f4:	00078593          	mv	a1,a5
800029f8:	00070513          	mv	a0,a4
800029fc:	9acff0ef          	jal	ra,80001ba8 <vListInsert>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3096
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
}
80002a00:	0300006f          	j	80002a30 <prvAddCurrentTaskToDelayedList+0x74>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3082
		vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xGenericListItem ) );
80002a04:	9301a703          	lw	a4,-1744(gp) # 80006fb0 <pxDelayedTaskList>
80002a08:	92c1a783          	lw	a5,-1748(gp) # 80006fac <pxCurrentTCB>
80002a0c:	00478793          	addi	a5,a5,4
80002a10:	00078593          	mv	a1,a5
80002a14:	00070513          	mv	a0,a4
80002a18:	990ff0ef          	jal	ra,80001ba8 <vListInsert>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3087
		if( xTimeToWake < xNextTaskUnblockTime )
80002a1c:	95c1a783          	lw	a5,-1700(gp) # 80006fdc <xNextTaskUnblockTime>
80002a20:	fec42703          	lw	a4,-20(s0)
80002a24:	00f77663          	bleu	a5,a4,80002a30 <prvAddCurrentTaskToDelayedList+0x74>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3089
			xNextTaskUnblockTime = xTimeToWake;
80002a28:	fec42703          	lw	a4,-20(s0)
80002a2c:	94e1ae23          	sw	a4,-1700(gp) # 80006fdc <xNextTaskUnblockTime>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3096
}
80002a30:	00000013          	nop
80002a34:	01c12083          	lw	ra,28(sp)
80002a38:	01812403          	lw	s0,24(sp)
80002a3c:	02010113          	addi	sp,sp,32
80002a40:	00008067          	ret

80002a44 <prvAllocateTCBAndStack>:
prvAllocateTCBAndStack():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3100
/*-----------------------------------------------------------*/

static TCB_t *prvAllocateTCBAndStack( const uint16_t usStackDepth, StackType_t * const puxStackBuffer )
{
80002a44:	fd010113          	addi	sp,sp,-48
80002a48:	02112623          	sw	ra,44(sp)
80002a4c:	02812423          	sw	s0,40(sp)
80002a50:	03010413          	addi	s0,sp,48
80002a54:	00050793          	mv	a5,a0
80002a58:	fcb42c23          	sw	a1,-40(s0)
80002a5c:	fcf41f23          	sh	a5,-34(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3132
	#else /* portSTACK_GROWTH */
	{
	StackType_t *pxStack;

		/* Allocate space for the stack used by the task being created. */
		pxStack = ( StackType_t * ) pvPortMallocAligned( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ), puxStackBuffer ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
80002a60:	fd842783          	lw	a5,-40(s0)
80002a64:	00079e63          	bnez	a5,80002a80 <prvAllocateTCBAndStack+0x3c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3132 (discriminator 1)
80002a68:	fde45783          	lhu	a5,-34(s0)
80002a6c:	00279793          	slli	a5,a5,0x2
80002a70:	00078513          	mv	a0,a5
80002a74:	fd8fe0ef          	jal	ra,8000124c <pvPortMalloc>
80002a78:	00050793          	mv	a5,a0
80002a7c:	0080006f          	j	80002a84 <prvAllocateTCBAndStack+0x40>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3132 (discriminator 2)
80002a80:	fd842783          	lw	a5,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3132 (discriminator 4)
80002a84:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3134 (discriminator 4)

		if( pxStack != NULL )
80002a88:	fe842783          	lw	a5,-24(s0)
80002a8c:	02078a63          	beqz	a5,80002ac0 <prvAllocateTCBAndStack+0x7c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3138
		{
			/* Allocate space for the TCB.  Where the memory comes from depends
			on the implementation of the port malloc function. */
			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
80002a90:	06000513          	li	a0,96
80002a94:	fb8fe0ef          	jal	ra,8000124c <pvPortMalloc>
80002a98:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3140

			if( pxNewTCB != NULL )
80002a9c:	fec42783          	lw	a5,-20(s0)
80002aa0:	00078a63          	beqz	a5,80002ab4 <prvAllocateTCBAndStack+0x70>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3143
			{
				/* Store the stack location in the TCB. */
				pxNewTCB->pxStack = pxStack;
80002aa4:	fec42783          	lw	a5,-20(s0)
80002aa8:	fe842703          	lw	a4,-24(s0)
80002aac:	02e7a823          	sw	a4,48(a5)
80002ab0:	0140006f          	j	80002ac4 <prvAllocateTCBAndStack+0x80>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3149
			}
			else
			{
				/* The stack cannot be used as the TCB was not created.  Free it
				again. */
				vPortFree( pxStack );
80002ab4:	fe842503          	lw	a0,-24(s0)
80002ab8:	971fe0ef          	jal	ra,80001428 <vPortFree>
80002abc:	0080006f          	j	80002ac4 <prvAllocateTCBAndStack+0x80>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3154
			}
		}
		else
		{
			pxNewTCB = NULL;
80002ac0:	fe042623          	sw	zero,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3159
		}
	}
	#endif /* portSTACK_GROWTH */

	if( pxNewTCB != NULL )
80002ac4:	fec42783          	lw	a5,-20(s0)
80002ac8:	02078263          	beqz	a5,80002aec <prvAllocateTCBAndStack+0xa8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3165
	{
		/* Avoid dependency on memset() if it is not required. */
		#if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
		{
			/* Just to help debugging. */
			( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) usStackDepth * sizeof( StackType_t ) );
80002acc:	fec42783          	lw	a5,-20(s0)
80002ad0:	0307a703          	lw	a4,48(a5)
80002ad4:	fde45783          	lhu	a5,-34(s0)
80002ad8:	00279793          	slli	a5,a5,0x2
80002adc:	00078613          	mv	a2,a5
80002ae0:	0a500593          	li	a1,165
80002ae4:	00070513          	mv	a0,a4
80002ae8:	a2cff0ef          	jal	ra,80001d14 <memset>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3170
		}
		#endif /* ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) ) */
	}

	return pxNewTCB;
80002aec:	fec42783          	lw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3171
}
80002af0:	00078513          	mv	a0,a5
80002af4:	02c12083          	lw	ra,44(sp)
80002af8:	02812403          	lw	s0,40(sp)
80002afc:	03010113          	addi	sp,sp,48
80002b00:	00008067          	ret

80002b04 <prvDeleteTCB>:
prvDeleteTCB():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3310
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	static void prvDeleteTCB( TCB_t *pxTCB )
	{
80002b04:	fe010113          	addi	sp,sp,-32
80002b08:	00112e23          	sw	ra,28(sp)
80002b0c:	00812c23          	sw	s0,24(sp)
80002b10:	02010413          	addi	s0,sp,32
80002b14:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3335
				vPortFreeAligned( pxTCB->pxStack );
			}
		}
		#else
		{
			vPortFreeAligned( pxTCB->pxStack );
80002b18:	fec42783          	lw	a5,-20(s0)
80002b1c:	0307a783          	lw	a5,48(a5)
80002b20:	00078513          	mv	a0,a5
80002b24:	905fe0ef          	jal	ra,80001428 <vPortFree>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3339
		}
		#endif

		vPortFree( pxTCB );
80002b28:	fec42503          	lw	a0,-20(s0)
80002b2c:	8fdfe0ef          	jal	ra,80001428 <vPortFree>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3340
	}
80002b30:	00000013          	nop
80002b34:	01c12083          	lw	ra,28(sp)
80002b38:	01812403          	lw	s0,24(sp)
80002b3c:	02010113          	addi	sp,sp,32
80002b40:	00008067          	ret

80002b44 <prvResetNextTaskUnblockTime>:
prvResetNextTaskUnblockTime():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3346

#endif /* INCLUDE_vTaskDelete */
/*-----------------------------------------------------------*/

static void prvResetNextTaskUnblockTime( void )
{
80002b44:	fe010113          	addi	sp,sp,-32
80002b48:	00812e23          	sw	s0,28(sp)
80002b4c:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3349
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
80002b50:	9301a783          	lw	a5,-1744(gp) # 80006fb0 <pxDelayedTaskList>
80002b54:	0007a783          	lw	a5,0(a5)
80002b58:	00079663          	bnez	a5,80002b64 <prvResetNextTaskUnblockTime+0x20>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3349 (discriminator 1)
80002b5c:	00100793          	li	a5,1
80002b60:	0080006f          	j	80002b68 <prvResetNextTaskUnblockTime+0x24>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3349 (discriminator 2)
80002b64:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3349 (discriminator 4)
80002b68:	00078863          	beqz	a5,80002b78 <prvResetNextTaskUnblockTime+0x34>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3355
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
80002b6c:	fff00713          	li	a4,-1
80002b70:	94e1ae23          	sw	a4,-1700(gp) # 80006fdc <xNextTaskUnblockTime>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3366
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xGenericListItem ) );
	}
}
80002b74:	0200006f          	j	80002b94 <prvResetNextTaskUnblockTime+0x50>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3363
		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
80002b78:	9301a783          	lw	a5,-1744(gp) # 80006fb0 <pxDelayedTaskList>
80002b7c:	00c7a783          	lw	a5,12(a5)
80002b80:	00c7a783          	lw	a5,12(a5)
80002b84:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3364
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xGenericListItem ) );
80002b88:	fec42783          	lw	a5,-20(s0)
80002b8c:	0047a703          	lw	a4,4(a5)
80002b90:	94e1ae23          	sw	a4,-1700(gp) # 80006fdc <xNextTaskUnblockTime>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3366
}
80002b94:	00000013          	nop
80002b98:	01c12403          	lw	s0,28(sp)
80002b9c:	02010113          	addi	sp,sp,32
80002ba0:	00008067          	ret

80002ba4 <xTaskGetCurrentTaskHandle>:
xTaskGetCurrentTaskHandle():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3372
/*-----------------------------------------------------------*/

#if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )

	TaskHandle_t xTaskGetCurrentTaskHandle( void )
	{
80002ba4:	fe010113          	addi	sp,sp,-32
80002ba8:	00812e23          	sw	s0,28(sp)
80002bac:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3378
	TaskHandle_t xReturn;

		/* A critical section is not required as this is not called from
		an interrupt and the current TCB will always be the same for any
		individual execution thread. */
		xReturn = pxCurrentTCB;
80002bb0:	92c1a783          	lw	a5,-1748(gp) # 80006fac <pxCurrentTCB>
80002bb4:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3380

		return xReturn;
80002bb8:	fec42783          	lw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/tasks.c:3381
	}
80002bbc:	00078513          	mv	a0,a5
80002bc0:	01c12403          	lw	s0,28(sp)
80002bc4:	02010113          	addi	sp,sp,32
80002bc8:	00008067          	ret

80002bcc <PLIC_EnableIRQ>:
PLIC_EnableIRQ():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:154
{
80002bcc:	fd010113          	addi	sp,sp,-48
80002bd0:	02812623          	sw	s0,44(sp)
80002bd4:	03010413          	addi	s0,sp,48
80002bd8:	fca42e23          	sw	a0,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:155
    unsigned long hart_id = read_csr(mhartid);
80002bdc:	f14027f3          	csrr	a5,mhartid
80002be0:	fef42623          	sw	a5,-20(s0)
80002be4:	fec42783          	lw	a5,-20(s0)
80002be8:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:156
    uint32_t current = PLIC->TARGET_ENABLES[hart_id].ENABLES[IRQn / 32];
80002bec:	40000737          	lui	a4,0x40000
80002bf0:	fdc42783          	lw	a5,-36(s0)
80002bf4:	0057d793          	srli	a5,a5,0x5
80002bf8:	fe842683          	lw	a3,-24(s0)
80002bfc:	00569693          	slli	a3,a3,0x5
80002c00:	00f686b3          	add	a3,a3,a5
80002c04:	000017b7          	lui	a5,0x1
80002c08:	80078793          	addi	a5,a5,-2048 # 800 <HEAP_SIZE-0xf800>
80002c0c:	00f687b3          	add	a5,a3,a5
80002c10:	00279793          	slli	a5,a5,0x2
80002c14:	00f707b3          	add	a5,a4,a5
80002c18:	0007a783          	lw	a5,0(a5)
80002c1c:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:157
    current |= (uint32_t)1 << (IRQn % 32);
80002c20:	fdc42783          	lw	a5,-36(s0)
80002c24:	01f7f793          	andi	a5,a5,31
80002c28:	00100713          	li	a4,1
80002c2c:	00f717b3          	sll	a5,a4,a5
80002c30:	fe442703          	lw	a4,-28(s0)
80002c34:	00f767b3          	or	a5,a4,a5
80002c38:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:158
    PLIC->TARGET_ENABLES[hart_id].ENABLES[IRQn / 32] = current;
80002c3c:	40000737          	lui	a4,0x40000
80002c40:	fdc42783          	lw	a5,-36(s0)
80002c44:	0057d793          	srli	a5,a5,0x5
80002c48:	fe842683          	lw	a3,-24(s0)
80002c4c:	00569693          	slli	a3,a3,0x5
80002c50:	00f686b3          	add	a3,a3,a5
80002c54:	000017b7          	lui	a5,0x1
80002c58:	80078793          	addi	a5,a5,-2048 # 800 <HEAP_SIZE-0xf800>
80002c5c:	00f687b3          	add	a5,a3,a5
80002c60:	00279793          	slli	a5,a5,0x2
80002c64:	00f707b3          	add	a5,a4,a5
80002c68:	fe442703          	lw	a4,-28(s0)
80002c6c:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:159
}
80002c70:	00000013          	nop
80002c74:	02c12403          	lw	s0,44(sp)
80002c78:	03010113          	addi	sp,sp,48
80002c7c:	00008067          	ret

80002c80 <PLIC_SetPriority>:
PLIC_SetPriority():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:188
{
80002c80:	fe010113          	addi	sp,sp,-32
80002c84:	00812e23          	sw	s0,28(sp)
80002c88:	02010413          	addi	s0,sp,32
80002c8c:	fea42623          	sw	a0,-20(s0)
80002c90:	feb42423          	sw	a1,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:189
    PLIC->SOURCE_PRIORITY[IRQn] = priority;
80002c94:	40000737          	lui	a4,0x40000
80002c98:	fec42783          	lw	a5,-20(s0)
80002c9c:	00279793          	slli	a5,a5,0x2
80002ca0:	00f707b3          	add	a5,a4,a5
80002ca4:	fe842703          	lw	a4,-24(s0)
80002ca8:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:190
}
80002cac:	00000013          	nop
80002cb0:	01c12403          	lw	s0,28(sp)
80002cb4:	02010113          	addi	sp,sp,32
80002cb8:	00008067          	ret

80002cbc <Chronos_init>:
Chronos_init():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:27
extern volatile unsigned int SendingQueue_front;
extern volatile unsigned int SendingQueue_tail;

////////////////////////////////////////////////////////////
// Initialize Chronos stuff
void Chronos_init(){
80002cbc:	ff010113          	addi	sp,sp,-16
80002cc0:	00112623          	sw	ra,12(sp)
80002cc4:	00812423          	sw	s0,8(sp)
80002cc8:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:29
    //Informs the Router this tile ID, that is provided by Harness
    HW_set_32bit_reg(ROUTER_BASE, HW_get_32bit_reg(MY_ID)); 
80002ccc:	900007b7          	lui	a5,0x90000
80002cd0:	ffc78513          	addi	a0,a5,-4 # 8ffffffc <__stack_top+0xffbe9cc>
80002cd4:	a2cfe0ef          	jal	ra,80000f00 <HW_get_32bit_reg>
80002cd8:	00050793          	mv	a5,a0
80002cdc:	00078593          	mv	a1,a5
80002ce0:	50000537          	lui	a0,0x50000
80002ce4:	a14fe0ef          	jal	ra,80000ef8 <HW_set_32bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:32
    
    // Reads this processor address, calculated by the router
    ProcessorAddr = HW_get_32bit_reg(ROUTER_BASE);
80002ce8:	50000537          	lui	a0,0x50000
80002cec:	a14fe0ef          	jal	ra,80000f00 <HW_get_32bit_reg>
80002cf0:	00050713          	mv	a4,a0
80002cf4:	800217b7          	lui	a5,0x80021
80002cf8:	62e7a023          	sw	a4,1568(a5) # 80021620 <__stack_top+0xfffdfff0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:35

    // Informs the PRINTER this tile address
    HW_set_32bit_reg(PRINTER_CHAR, getXpos(ProcessorAddr));
80002cfc:	800217b7          	lui	a5,0x80021
80002d00:	6207a783          	lw	a5,1568(a5) # 80021620 <__stack_top+0xfffdfff0>
80002d04:	00078513          	mv	a0,a5
80002d08:	1e0000ef          	jal	ra,80002ee8 <getXpos>
80002d0c:	00050793          	mv	a5,a0
80002d10:	00078593          	mv	a1,a5
80002d14:	500007b7          	lui	a5,0x50000
80002d18:	02078513          	addi	a0,a5,32 # 50000020 <RAM_SIZE+0x4ff80020>
80002d1c:	9dcfe0ef          	jal	ra,80000ef8 <HW_set_32bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:36
    HW_set_32bit_reg(PRINTER_CHAR, getYpos(ProcessorAddr));
80002d20:	800217b7          	lui	a5,0x80021
80002d24:	6207a783          	lw	a5,1568(a5) # 80021620 <__stack_top+0xfffdfff0>
80002d28:	00078513          	mv	a0,a5
80002d2c:	1e8000ef          	jal	ra,80002f14 <getYpos>
80002d30:	00050793          	mv	a5,a0
80002d34:	00078593          	mv	a1,a5
80002d38:	500007b7          	lui	a5,0x50000
80002d3c:	02078513          	addi	a0,a5,32 # 50000020 <RAM_SIZE+0x4ff80020>
80002d40:	9b8fe0ef          	jal	ra,80000ef8 <HW_set_32bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:39

    // Enables interruption from NI
    NI_enable_irq(TX_RX);
80002d44:	000077b7          	lui	a5,0x7
80002d48:	77778513          	addi	a0,a5,1911 # 7777 <HEAP_SIZE-0x8889>
80002d4c:	23c000ef          	jal	ra,80002f88 <NI_enable_irq>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:42

    // Informs the NI the address to store incoming packets
    HW_set_32bit_reg(NI_ADDR, (unsigned int)&incommingPacket.header);
80002d50:	800207b7          	lui	a5,0x80020
80002d54:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80002d58:	00078593          	mv	a1,a5
80002d5c:	500007b7          	lui	a5,0x50000
80002d60:	00478513          	addi	a0,a5,4 # 50000004 <RAM_SIZE+0x4ff80004>
80002d64:	994fe0ef          	jal	ra,80000ef8 <HW_set_32bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:45
    
    // Initialize the TaskList
    API_TaskListInit();
80002d68:	469020ef          	jal	ra,800059d0 <API_TaskListInit>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:48

    // Initialize the Message & Service PIPE
    API_PipeInitialization();
80002d6c:	2dc030ef          	jal	ra,80006048 <API_PipeInitialization>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:49
    SendingQueue_front = 0;
80002d70:	800207b7          	lui	a5,0x80020
80002d74:	2007ae23          	sw	zero,540(a5) # 8002021c <__stack_top+0xfffdebec>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:50
    SendingQueue_tail = 0;
80002d78:	800207b7          	lui	a5,0x80020
80002d7c:	2007a223          	sw	zero,516(a5) # 80020204 <__stack_top+0xfffdebd4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:52

    return;
80002d80:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:53
}
80002d84:	00c12083          	lw	ra,12(sp)
80002d88:	00812403          	lw	s0,8(sp)
80002d8c:	01010113          	addi	sp,sp,16
80002d90:	00008067          	ret

80002d94 <prints>:
prints():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:57

////////////////////////////////////////////////////////////
// Prints a string
void prints(char *text) {
80002d94:	fd010113          	addi	sp,sp,-48
80002d98:	02112623          	sw	ra,44(sp)
80002d9c:	02812423          	sw	s0,40(sp)
80002da0:	03010413          	addi	s0,sp,48
80002da4:	fca42e23          	sw	a0,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:58
    int i = 0;
80002da8:	fe042623          	sw	zero,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:60 (discriminator 1)
    do {
        HW_set_32bit_reg(PRINTER_CHAR, text[i]);
80002dac:	fec42783          	lw	a5,-20(s0)
80002db0:	fdc42703          	lw	a4,-36(s0)
80002db4:	00f707b3          	add	a5,a4,a5
80002db8:	00078783          	lb	a5,0(a5)
80002dbc:	00078593          	mv	a1,a5
80002dc0:	500007b7          	lui	a5,0x50000
80002dc4:	02078513          	addi	a0,a5,32 # 50000020 <RAM_SIZE+0x4ff80020>
80002dc8:	930fe0ef          	jal	ra,80000ef8 <HW_set_32bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:61 (discriminator 1)
        i++;
80002dcc:	fec42783          	lw	a5,-20(s0)
80002dd0:	00178793          	addi	a5,a5,1
80002dd4:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:62 (discriminator 1)
    } while (text[i - 1] != '\0');
80002dd8:	fec42783          	lw	a5,-20(s0)
80002ddc:	fff78793          	addi	a5,a5,-1
80002de0:	fdc42703          	lw	a4,-36(s0)
80002de4:	00f707b3          	add	a5,a4,a5
80002de8:	00078783          	lb	a5,0(a5)
80002dec:	fc0790e3          	bnez	a5,80002dac <prints+0x18>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:63
    return;
80002df0:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:64
}
80002df4:	02c12083          	lw	ra,44(sp)
80002df8:	02812403          	lw	s0,40(sp)
80002dfc:	03010113          	addi	sp,sp,48
80002e00:	00008067          	ret

80002e04 <printi>:
printi():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:68

////////////////////////////////////////////////////////////
// Prints an integer
void printi(int value) {
80002e04:	fe010113          	addi	sp,sp,-32
80002e08:	00112e23          	sw	ra,28(sp)
80002e0c:	00812c23          	sw	s0,24(sp)
80002e10:	02010413          	addi	s0,sp,32
80002e14:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:69
    HW_set_32bit_reg(PRINTER_INT, value);
80002e18:	fec42783          	lw	a5,-20(s0)
80002e1c:	00078593          	mv	a1,a5
80002e20:	500007b7          	lui	a5,0x50000
80002e24:	02478513          	addi	a0,a5,36 # 50000024 <RAM_SIZE+0x4ff80024>
80002e28:	8d0fe0ef          	jal	ra,80000ef8 <HW_set_32bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:70
    return;
80002e2c:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:71
}
80002e30:	01c12083          	lw	ra,28(sp)
80002e34:	01812403          	lw	s0,24(sp)
80002e38:	02010113          	addi	sp,sp,32
80002e3c:	00008067          	ret

80002e40 <printsv>:
printsv():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:75

////////////////////////////////////////////////////////////
// Prints a string followed by a integer
void printsv(char *text1, int value1) {
80002e40:	fe010113          	addi	sp,sp,-32
80002e44:	00112e23          	sw	ra,28(sp)
80002e48:	00812c23          	sw	s0,24(sp)
80002e4c:	02010413          	addi	s0,sp,32
80002e50:	fea42623          	sw	a0,-20(s0)
80002e54:	feb42423          	sw	a1,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:76
    prints(text1);
80002e58:	fec42503          	lw	a0,-20(s0)
80002e5c:	f39ff0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:77
    printi(value1);
80002e60:	fe842503          	lw	a0,-24(s0)
80002e64:	fa1ff0ef          	jal	ra,80002e04 <printi>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:78
    prints("\n");
80002e68:	800077b7          	lui	a5,0x80007
80002e6c:	9bc78513          	addi	a0,a5,-1604 # 800069bc <__stack_top+0xfffc538c>
80002e70:	f25ff0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:79
    return;
80002e74:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:80
}
80002e78:	01c12083          	lw	ra,28(sp)
80002e7c:	01812403          	lw	s0,24(sp)
80002e80:	02010113          	addi	sp,sp,32
80002e84:	00008067          	ret

80002e88 <printsvsv>:
printsvsv():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:84

////////////////////////////////////////////////////////////
// Prints two strings and two integers interspersed
void printsvsv(char *text1, int value1, char *text2, int value2) {
80002e88:	fe010113          	addi	sp,sp,-32
80002e8c:	00112e23          	sw	ra,28(sp)
80002e90:	00812c23          	sw	s0,24(sp)
80002e94:	02010413          	addi	s0,sp,32
80002e98:	fea42623          	sw	a0,-20(s0)
80002e9c:	feb42423          	sw	a1,-24(s0)
80002ea0:	fec42223          	sw	a2,-28(s0)
80002ea4:	fed42023          	sw	a3,-32(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:85
    prints(text1);
80002ea8:	fec42503          	lw	a0,-20(s0)
80002eac:	ee9ff0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:86
    printi(value1);
80002eb0:	fe842503          	lw	a0,-24(s0)
80002eb4:	f51ff0ef          	jal	ra,80002e04 <printi>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:87
    prints(text2);
80002eb8:	fe442503          	lw	a0,-28(s0)
80002ebc:	ed9ff0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:88
    printi(value2);
80002ec0:	fe042503          	lw	a0,-32(s0)
80002ec4:	f41ff0ef          	jal	ra,80002e04 <printi>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:89
    prints("\n");
80002ec8:	800077b7          	lui	a5,0x80007
80002ecc:	9bc78513          	addi	a0,a5,-1604 # 800069bc <__stack_top+0xfffc538c>
80002ed0:	ec5ff0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:90
    return;
80002ed4:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:91
}
80002ed8:	01c12083          	lw	ra,28(sp)
80002edc:	01812403          	lw	s0,24(sp)
80002ee0:	02010113          	addi	sp,sp,32
80002ee4:	00008067          	ret

80002ee8 <getXpos>:
getXpos():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:95

////////////////////////////////////////////////////////////
// Gets the X coordinate from the address
unsigned int getXpos(unsigned int addr) { return ((addr & 0x0000FF00) >> 8); }
80002ee8:	fe010113          	addi	sp,sp,-32
80002eec:	00812e23          	sw	s0,28(sp)
80002ef0:	02010413          	addi	s0,sp,32
80002ef4:	fea42623          	sw	a0,-20(s0)
80002ef8:	fec42783          	lw	a5,-20(s0)
80002efc:	0087d793          	srli	a5,a5,0x8
80002f00:	0ff7f793          	andi	a5,a5,255
80002f04:	00078513          	mv	a0,a5
80002f08:	01c12403          	lw	s0,28(sp)
80002f0c:	02010113          	addi	sp,sp,32
80002f10:	00008067          	ret

80002f14 <getYpos>:
getYpos():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:99

////////////////////////////////////////////////////////////
// Gets the Y coordinate from the address
unsigned int getYpos(unsigned int addr) { return (addr & 0x000000FF); }
80002f14:	fe010113          	addi	sp,sp,-32
80002f18:	00812e23          	sw	s0,28(sp)
80002f1c:	02010413          	addi	s0,sp,32
80002f20:	fea42623          	sw	a0,-20(s0)
80002f24:	fec42783          	lw	a5,-20(s0)
80002f28:	0ff7f793          	andi	a5,a5,255
80002f2c:	00078513          	mv	a0,a5
80002f30:	01c12403          	lw	s0,28(sp)
80002f34:	02010113          	addi	sp,sp,32
80002f38:	00008067          	ret

80002f3c <SendRaw>:
SendRaw():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:103

///////////////////////////////////////////////////////////////////
// Configure the NI to transmitt a given packet
void SendRaw(unsigned int addr) {
80002f3c:	fe010113          	addi	sp,sp,-32
80002f40:	00112e23          	sw	ra,28(sp)
80002f44:	00812c23          	sw	s0,24(sp)
80002f48:	02010413          	addi	s0,sp,32
80002f4c:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:104
    HW_set_32bit_reg(NI_ADDR, addr);
80002f50:	fec42583          	lw	a1,-20(s0)
80002f54:	500007b7          	lui	a5,0x50000
80002f58:	00478513          	addi	a0,a5,4 # 50000004 <RAM_SIZE+0x4ff80004>
80002f5c:	f9dfd0ef          	jal	ra,80000ef8 <HW_set_32bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:105
    HW_set_32bit_reg(NI_TX, TX);
80002f60:	000027b7          	lui	a5,0x2
80002f64:	22278593          	addi	a1,a5,546 # 2222 <HEAP_SIZE-0xddde>
80002f68:	500007b7          	lui	a5,0x50000
80002f6c:	00878513          	addi	a0,a5,8 # 50000008 <RAM_SIZE+0x4ff80008>
80002f70:	f89fd0ef          	jal	ra,80000ef8 <HW_set_32bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:106
    return;
80002f74:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:107
}
80002f78:	01c12083          	lw	ra,28(sp)
80002f7c:	01812403          	lw	s0,24(sp)
80002f80:	02010113          	addi	sp,sp,32
80002f84:	00008067          	ret

80002f88 <NI_enable_irq>:
NI_enable_irq():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:111

////////////////////////////////////////////////////////////
// Enables interruptions incomming from NI
void NI_enable_irq(int which){
80002f88:	fe010113          	addi	sp,sp,-32
80002f8c:	00112e23          	sw	ra,28(sp)
80002f90:	00812c23          	sw	s0,24(sp)
80002f94:	02010413          	addi	s0,sp,32
80002f98:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:112
	if (which == TX || which == TX_RX){
80002f9c:	fec42703          	lw	a4,-20(s0)
80002fa0:	000027b7          	lui	a5,0x2
80002fa4:	22278793          	addi	a5,a5,546 # 2222 <HEAP_SIZE-0xddde>
80002fa8:	00f70a63          	beq	a4,a5,80002fbc <NI_enable_irq+0x34>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:112 (discriminator 1)
80002fac:	fec42703          	lw	a4,-20(s0)
80002fb0:	000077b7          	lui	a5,0x7
80002fb4:	77778793          	addi	a5,a5,1911 # 7777 <HEAP_SIZE-0x8889>
80002fb8:	00f71c63          	bne	a4,a5,80002fd0 <NI_enable_irq+0x48>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:113
        PLIC_EnableIRQ(NI_TX_IRQn);
80002fbc:	00100513          	li	a0,1
80002fc0:	c0dff0ef          	jal	ra,80002bcc <PLIC_EnableIRQ>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:114
        PLIC_SetPriority(NI_TX_IRQn, 1);
80002fc4:	00100593          	li	a1,1
80002fc8:	00100513          	li	a0,1
80002fcc:	cb5ff0ef          	jal	ra,80002c80 <PLIC_SetPriority>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:116
    }
    if (which == RX || which == TX_RX){
80002fd0:	fec42703          	lw	a4,-20(s0)
80002fd4:	000037b7          	lui	a5,0x3
80002fd8:	33378793          	addi	a5,a5,819 # 3333 <HEAP_SIZE-0xcccd>
80002fdc:	00f70a63          	beq	a4,a5,80002ff0 <NI_enable_irq+0x68>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:116 (discriminator 1)
80002fe0:	fec42703          	lw	a4,-20(s0)
80002fe4:	000077b7          	lui	a5,0x7
80002fe8:	77778793          	addi	a5,a5,1911 # 7777 <HEAP_SIZE-0x8889>
80002fec:	00f71e63          	bne	a4,a5,80003008 <NI_enable_irq+0x80>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:117
        PLIC_EnableIRQ(NI_RX_IRQn);
80002ff0:	00200513          	li	a0,2
80002ff4:	bd9ff0ef          	jal	ra,80002bcc <PLIC_EnableIRQ>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:118
        PLIC_SetPriority(NI_RX_IRQn, 1);
80002ff8:	00100593          	li	a1,1
80002ffc:	00200513          	li	a0,2
80003000:	c81ff0ef          	jal	ra,80002c80 <PLIC_SetPriority>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:120
    }
    return;
80003004:	00000013          	nop
80003008:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:121
}
8000300c:	01c12083          	lw	ra,28(sp)
80003010:	01812403          	lw	s0,24(sp)
80003014:	02010113          	addi	sp,sp,32
80003018:	00008067          	ret

8000301c <External_1_IRQHandler>:
External_1_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:133
    return;
}

////////////////////////////////////////////////////////////
// Interruptions handler for TX
uint8_t External_1_IRQHandler(void){ 
8000301c:	ff010113          	addi	sp,sp,-16
80003020:	00112623          	sw	ra,12(sp)
80003024:	00812423          	sw	s0,8(sp)
80003028:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:135
    //prints("INTERRUPTION TX\n");
    API_ClearPipeSlot(SendingSlot);
8000302c:	800207b7          	lui	a5,0x80020
80003030:	0b87a783          	lw	a5,184(a5) # 800200b8 <__stack_top+0xfffdea88>
80003034:	00078513          	mv	a0,a5
80003038:	2a4030ef          	jal	ra,800062dc <API_ClearPipeSlot>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:136
    HW_set_32bit_reg(NI_TX, DONE);
8000303c:	000057b7          	lui	a5,0x5
80003040:	55578593          	addi	a1,a5,1365 # 5555 <HEAP_SIZE-0xaaab>
80003044:	500007b7          	lui	a5,0x50000
80003048:	00878513          	addi	a0,a5,8 # 50000008 <RAM_SIZE+0x4ff80008>
8000304c:	eadfd0ef          	jal	ra,80000ef8 <HW_set_32bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:137
    API_Try2Send();
80003050:	165000ef          	jal	ra,800039b4 <API_Try2Send>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:138
    return 0;
80003054:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:139
}
80003058:	00078513          	mv	a0,a5
8000305c:	00c12083          	lw	ra,12(sp)
80003060:	00812403          	lw	s0,8(sp)
80003064:	01010113          	addi	sp,sp,16
80003068:	00008067          	ret

8000306c <External_2_IRQHandler>:
External_2_IRQHandler():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:143

////////////////////////////////////////////////////////////
// Interruptions handler for RX
uint8_t External_2_IRQHandler(void){
8000306c:	fe010113          	addi	sp,sp,-32
80003070:	00112e23          	sw	ra,28(sp)
80003074:	00812c23          	sw	s0,24(sp)
80003078:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:161
    // printsv("Flit 10: ", incommingPacket.flit10);
    // printsv("Flit 11: ", incommingPacket.flit11);
    // printsv("Flit 12: ", incommingPacket.flit12);


    switch (incommingPacket.service){
8000307c:	800207b7          	lui	a5,0x80020
80003080:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003084:	0087a783          	lw	a5,8(a5)
80003088:	03300713          	li	a4,51
8000308c:	1ce78c63          	beq	a5,a4,80003264 <External_2_IRQHandler+0x1f8>
80003090:	03300713          	li	a4,51
80003094:	02f76a63          	bltu	a4,a5,800030c8 <External_2_IRQHandler+0x5c>
80003098:	02000713          	li	a4,32
8000309c:	3ee78463          	beq	a5,a4,80003484 <External_2_IRQHandler+0x418>
800030a0:	02000713          	li	a4,32
800030a4:	00f76863          	bltu	a4,a5,800030b4 <External_2_IRQHandler+0x48>
800030a8:	01000713          	li	a4,16
800030ac:	30e78663          	beq	a5,a4,800033b8 <External_2_IRQHandler+0x34c>
800030b0:	4e00006f          	j	80003590 <External_2_IRQHandler+0x524>
800030b4:	02100713          	li	a4,33
800030b8:	48e78463          	beq	a5,a4,80003540 <External_2_IRQHandler+0x4d4>
800030bc:	03000713          	li	a4,48
800030c0:	08e78063          	beq	a5,a4,80003140 <External_2_IRQHandler+0xd4>
800030c4:	4cc0006f          	j	80003590 <External_2_IRQHandler+0x524>
800030c8:	40000713          	li	a4,1024
800030cc:	1ee78a63          	beq	a5,a4,800032c0 <External_2_IRQHandler+0x254>
800030d0:	40000713          	li	a4,1024
800030d4:	00f76c63          	bltu	a4,a5,800030ec <External_2_IRQHandler+0x80>
800030d8:	03500713          	li	a4,53
800030dc:	1ae78863          	beq	a5,a4,8000328c <External_2_IRQHandler+0x220>
800030e0:	20000713          	li	a4,512
800030e4:	00e78e63          	beq	a5,a4,80003100 <External_2_IRQHandler+0x94>
800030e8:	4a80006f          	j	80003590 <External_2_IRQHandler+0x524>
800030ec:	40100713          	li	a4,1025
800030f0:	24e78863          	beq	a5,a4,80003340 <External_2_IRQHandler+0x2d4>
800030f4:	50000713          	li	a4,1280
800030f8:	0ce78c63          	beq	a5,a4,800031d0 <External_2_IRQHandler+0x164>
800030fc:	4940006f          	j	80003590 <External_2_IRQHandler+0x524>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:166
        unsigned int aux;

        case REPOSITORY_APP_INFO: // When the repository informs the GM that exist a new Application available:
            //prints("REPOSITORY_APP_INFO\n");
            API_AddApplication(incommingPacket.application_id,
80003100:	800207b7          	lui	a5,0x80020
80003104:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003108:	00c7a703          	lw	a4,12(a5)
8000310c:	800207b7          	lui	a5,0x80020
80003110:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003114:	0107a583          	lw	a1,16(a5)
80003118:	800207b7          	lui	a5,0x80020
8000311c:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003120:	0147a603          	lw	a2,20(a5)
80003124:	800207b7          	lui	a5,0x80020
80003128:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
8000312c:	0187a783          	lw	a5,24(a5)
80003130:	00078693          	mv	a3,a5
80003134:	00070513          	mv	a0,a4
80003138:	504010ef          	jal	ra,8000463c <API_AddApplication>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:170
                               incommingPacket.aplication_period, 
                               incommingPacket.application_executions, 
                               incommingPacket.application_n_tasks);
            break;
8000313c:	4740006f          	j	800035b0 <External_2_IRQHandler+0x544>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:175
        
        case TASK_ALLOCATION_SEND: // When the GM asks one Slave to allocate one task
            // aux will receive the taskslot 
            //prints("TASK_ALLOCATION_SEND\n");
            aux = API_TaskAllocation(incommingPacket.task_id,
80003140:	800207b7          	lui	a5,0x80020
80003144:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003148:	00c7a503          	lw	a0,12(a5)
8000314c:	800207b7          	lui	a5,0x80020
80003150:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003154:	0107a583          	lw	a1,16(a5)
80003158:	800207b7          	lui	a5,0x80020
8000315c:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003160:	0147a603          	lw	a2,20(a5)
80003164:	800207b7          	lui	a5,0x80020
80003168:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
8000316c:	0187a683          	lw	a3,24(a5)
80003170:	800207b7          	lui	a5,0x80020
80003174:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003178:	01c7a783          	lw	a5,28(a5)
8000317c:	00078713          	mv	a4,a5
80003180:	1fd020ef          	jal	ra,80005b7c <API_TaskAllocation>
80003184:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:182
                                     incommingPacket.task_bss_size,
                                     incommingPacket.task_start_point,
                                     incommingPacket.task_app_id);

            // Informs the NI were to write the application
            HW_set_32bit_reg(NI_ADDR, TaskList[aux].taskAddr);
80003188:	800217b7          	lui	a5,0x80021
8000318c:	fec42703          	lw	a4,-20(s0)
80003190:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80003194:	00070793          	mv	a5,a4
80003198:	00479793          	slli	a5,a5,0x4
8000319c:	40e787b3          	sub	a5,a5,a4
800031a0:	00379793          	slli	a5,a5,0x3
800031a4:	00f687b3          	add	a5,a3,a5
800031a8:	01c7a783          	lw	a5,28(a5)
800031ac:	00078593          	mv	a1,a5
800031b0:	500007b7          	lui	a5,0x50000
800031b4:	00478513          	addi	a0,a5,4 # 50000004 <RAM_SIZE+0x4ff80004>
800031b8:	d41fd0ef          	jal	ra,80000ef8 <HW_set_32bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:183
            incommingPacket.service = TASK_ALLOCATION_FINISHED;
800031bc:	800207b7          	lui	a5,0x80020
800031c0:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
800031c4:	03300713          	li	a4,51
800031c8:	00e7a423          	sw	a4,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:184
            break;
800031cc:	3e40006f          	j	800035b0 <External_2_IRQHandler+0x544>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:187
        
        case TASK_FINISH:
            printsvsv("FINISHED: Task ", incommingPacket.task_id, "from application ", incommingPacket.task_app_id);
800031d0:	800207b7          	lui	a5,0x80020
800031d4:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
800031d8:	00c7a783          	lw	a5,12(a5)
800031dc:	00078713          	mv	a4,a5
800031e0:	800207b7          	lui	a5,0x80020
800031e4:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
800031e8:	01c7a783          	lw	a5,28(a5)
800031ec:	00078693          	mv	a3,a5
800031f0:	800077b7          	lui	a5,0x80007
800031f4:	9c078613          	addi	a2,a5,-1600 # 800069c0 <__stack_top+0xfffc5390>
800031f8:	00070593          	mv	a1,a4
800031fc:	800077b7          	lui	a5,0x80007
80003200:	9d478513          	addi	a0,a5,-1580 # 800069d4 <__stack_top+0xfffc53a4>
80003204:	c85ff0ef          	jal	ra,80002e88 <printsvsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:188
            API_ClearTaskSlotFromTile(incommingPacket.task_dest_addr, incommingPacket.task_app_id, incommingPacket.task_id);
80003208:	800207b7          	lui	a5,0x80020
8000320c:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003210:	0307a703          	lw	a4,48(a5)
80003214:	800207b7          	lui	a5,0x80020
80003218:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
8000321c:	01c7a683          	lw	a3,28(a5)
80003220:	800207b7          	lui	a5,0x80020
80003224:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003228:	00c7a783          	lw	a5,12(a5)
8000322c:	00078613          	mv	a2,a5
80003230:	00068593          	mv	a1,a3
80003234:	00070513          	mv	a0,a4
80003238:	7d5010ef          	jal	ra,8000520c <API_ClearTaskSlotFromTile>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:189
            API_DealocateTask(incommingPacket.task_id, incommingPacket.task_app_id);
8000323c:	800207b7          	lui	a5,0x80020
80003240:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003244:	00c7a703          	lw	a4,12(a5)
80003248:	800207b7          	lui	a5,0x80020
8000324c:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003250:	01c7a783          	lw	a5,28(a5)
80003254:	00078593          	mv	a1,a5
80003258:	00070513          	mv	a0,a4
8000325c:	33d010ef          	jal	ra,80004d98 <API_DealocateTask>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:190
            break;
80003260:	3500006f          	j	800035b0 <External_2_IRQHandler+0x544>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:194

        case TASK_ALLOCATION_FINISHED:
            //prints("TASK_ALLOCATION_FINISHED\n");
            API_AckTaskAllocation(incommingPacket.task_id, incommingPacket.task_app_id);
80003264:	800207b7          	lui	a5,0x80020
80003268:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
8000326c:	00c7a703          	lw	a4,12(a5)
80003270:	800207b7          	lui	a5,0x80020
80003274:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003278:	01c7a783          	lw	a5,28(a5)
8000327c:	00078593          	mv	a1,a5
80003280:	00070513          	mv	a0,a4
80003284:	029000ef          	jal	ra,80003aac <API_AckTaskAllocation>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:195
            break;
80003288:	3280006f          	j	800035b0 <External_2_IRQHandler+0x544>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:198

        case TASK_ALLOCATION_SUCCESS:
            prints("TASK_ALLOCATION_SUCCESS\n");
8000328c:	800077b7          	lui	a5,0x80007
80003290:	9e478513          	addi	a0,a5,-1564 # 800069e4 <__stack_top+0xfffc53b4>
80003294:	b01ff0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:199
            API_TaskAllocated(incommingPacket.task_id, incommingPacket.task_app_id);
80003298:	800207b7          	lui	a5,0x80020
8000329c:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
800032a0:	00c7a703          	lw	a4,12(a5)
800032a4:	800207b7          	lui	a5,0x80020
800032a8:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
800032ac:	01c7a783          	lw	a5,28(a5)
800032b0:	00078593          	mv	a1,a5
800032b4:	00070513          	mv	a0,a4
800032b8:	324020ef          	jal	ra,800055dc <API_TaskAllocated>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:200
            break;
800032bc:	2f40006f          	j	800035b0 <External_2_IRQHandler+0x544>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:203

        case TASK_START:
            prints("Chegou um TASK_START!\n");
800032c0:	800077b7          	lui	a5,0x80007
800032c4:	a0078513          	addi	a0,a5,-1536 # 80006a00 <__stack_top+0xfffc53d0>
800032c8:	acdff0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:204
            aux = API_GetTaskSlot(incommingPacket.task_id, incommingPacket.task_app_id);
800032cc:	800207b7          	lui	a5,0x80020
800032d0:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
800032d4:	00c7a703          	lw	a4,12(a5)
800032d8:	800207b7          	lui	a5,0x80020
800032dc:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
800032e0:	01c7a783          	lw	a5,28(a5)
800032e4:	00078593          	mv	a1,a5
800032e8:	00070513          	mv	a0,a4
800032ec:	251020ef          	jal	ra,80005d3c <API_GetTaskSlot>
800032f0:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:206
            // Informs the NI were to write the application
            HW_set_32bit_reg(NI_ADDR, (unsigned int)&TaskList[aux].appNumTasks);
800032f4:	fec42703          	lw	a4,-20(s0)
800032f8:	00070793          	mv	a5,a4
800032fc:	00479793          	slli	a5,a5,0x4
80003300:	40e787b3          	sub	a5,a5,a4
80003304:	00379793          	slli	a5,a5,0x3
80003308:	04078713          	addi	a4,a5,64
8000330c:	800217b7          	lui	a5,0x80021
80003310:	2d878793          	addi	a5,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80003314:	00f707b3          	add	a5,a4,a5
80003318:	00c78793          	addi	a5,a5,12
8000331c:	00078593          	mv	a1,a5
80003320:	500007b7          	lui	a5,0x50000
80003324:	00478513          	addi	a0,a5,4 # 50000004 <RAM_SIZE+0x4ff80004>
80003328:	bd1fd0ef          	jal	ra,80000ef8 <HW_set_32bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:207
            incommingPacket.service = TASK_RUN;
8000332c:	800207b7          	lui	a5,0x80020
80003330:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003334:	40100713          	li	a4,1025
80003338:	00e7a423          	sw	a4,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:208
            break;
8000333c:	2740006f          	j	800035b0 <External_2_IRQHandler+0x544>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:211
        
        case TASK_RUN:
            prints("Chegou um TASK_RUN!\n");
80003340:	800077b7          	lui	a5,0x80007
80003344:	a1878513          	addi	a0,a5,-1512 # 80006a18 <__stack_top+0xfffc53e8>
80003348:	a4dff0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:212
            aux = API_GetTaskSlot(incommingPacket.task_id, incommingPacket.task_app_id);
8000334c:	800207b7          	lui	a5,0x80020
80003350:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003354:	00c7a703          	lw	a4,12(a5)
80003358:	800207b7          	lui	a5,0x80020
8000335c:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003360:	01c7a783          	lw	a5,28(a5)
80003364:	00078593          	mv	a1,a5
80003368:	00070513          	mv	a0,a4
8000336c:	1d1020ef          	jal	ra,80005d3c <API_GetTaskSlot>
80003370:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:213
            printsvsv("Starting Task: ", incommingPacket.task_id, "from app: ", incommingPacket.task_app_id);
80003374:	800207b7          	lui	a5,0x80020
80003378:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
8000337c:	00c7a783          	lw	a5,12(a5)
80003380:	00078713          	mv	a4,a5
80003384:	800207b7          	lui	a5,0x80020
80003388:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
8000338c:	01c7a783          	lw	a5,28(a5)
80003390:	00078693          	mv	a3,a5
80003394:	800077b7          	lui	a5,0x80007
80003398:	a3078613          	addi	a2,a5,-1488 # 80006a30 <__stack_top+0xfffc5400>
8000339c:	00070593          	mv	a1,a4
800033a0:	800077b7          	lui	a5,0x80007
800033a4:	a3c78513          	addi	a0,a5,-1476 # 80006a3c <__stack_top+0xfffc540c>
800033a8:	ae1ff0ef          	jal	ra,80002e88 <printsvsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:214
            API_TaskStart(aux);
800033ac:	fec42503          	lw	a0,-20(s0)
800033b0:	25d020ef          	jal	ra,80005e0c <API_TaskStart>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:215
            break;
800033b4:	1fc0006f          	j	800035b0 <External_2_IRQHandler+0x544>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:219

        case MESSAGE_REQUEST:
            // check the pipe
            printsvsv("Chegou um message request! App: ", incommingPacket.task_app_id, "Task: ", incommingPacket.task_id);
800033b8:	800207b7          	lui	a5,0x80020
800033bc:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
800033c0:	01c7a783          	lw	a5,28(a5)
800033c4:	00078713          	mv	a4,a5
800033c8:	800207b7          	lui	a5,0x80020
800033cc:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
800033d0:	00c7a783          	lw	a5,12(a5)
800033d4:	00078693          	mv	a3,a5
800033d8:	800077b7          	lui	a5,0x80007
800033dc:	a4c78613          	addi	a2,a5,-1460 # 80006a4c <__stack_top+0xfffc541c>
800033e0:	00070593          	mv	a1,a4
800033e4:	800077b7          	lui	a5,0x80007
800033e8:	a5478513          	addi	a0,a5,-1452 # 80006a54 <__stack_top+0xfffc5424>
800033ec:	a9dff0ef          	jal	ra,80002e88 <printsvsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:220
            aux = API_CheckMessagePipe(incommingPacket.task_id, incommingPacket.task_app_id);
800033f0:	800207b7          	lui	a5,0x80020
800033f4:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
800033f8:	00c7a703          	lw	a4,12(a5)
800033fc:	800207b7          	lui	a5,0x80020
80003400:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003404:	01c7a783          	lw	a5,28(a5)
80003408:	00078593          	mv	a1,a5
8000340c:	00070513          	mv	a0,a4
80003410:	761000ef          	jal	ra,80004370 <API_CheckMessagePipe>
80003414:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:221
            if (aux == ERRO){
80003418:	fec42703          	lw	a4,-20(s0)
8000341c:	fff00793          	li	a5,-1
80003420:	04f71463          	bne	a4,a5,80003468 <External_2_IRQHandler+0x3fc>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:223
                // register an messagerequest
                prints("Mensagem não encontrada, adicionando ao PendingReq!\n");
80003424:	800077b7          	lui	a5,0x80007
80003428:	a7878513          	addi	a0,a5,-1416 # 80006a78 <__stack_top+0xfffc5448>
8000342c:	969ff0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:224
                API_AddPendingReq(incommingPacket.task_id, incommingPacket.task_app_id, incommingPacket.producer_task_id);
80003430:	800207b7          	lui	a5,0x80020
80003434:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003438:	00c7a703          	lw	a4,12(a5)
8000343c:	800207b7          	lui	a5,0x80020
80003440:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003444:	01c7a683          	lw	a3,28(a5)
80003448:	800207b7          	lui	a5,0x80020
8000344c:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003450:	0147a783          	lw	a5,20(a5)
80003454:	00078613          	mv	a2,a5
80003458:	00068593          	mv	a1,a3
8000345c:	00070513          	mv	a0,a4
80003460:	04c010ef          	jal	ra,800044ac <API_AddPendingReq>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:229
            } else {
                prints("Mensagem encontrada no pipe!\n");
                API_PushSendQueue(MESSAGE, aux);
            }
            break;
80003464:	14c0006f          	j	800035b0 <External_2_IRQHandler+0x544>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:226
                prints("Mensagem encontrada no pipe!\n");
80003468:	800077b7          	lui	a5,0x80007
8000346c:	ab078513          	addi	a0,a5,-1360 # 80006ab0 <__stack_top+0xfffc5480>
80003470:	925ff0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:227
                API_PushSendQueue(MESSAGE, aux);
80003474:	fec42583          	lw	a1,-20(s0)
80003478:	20200537          	lui	a0,0x20200
8000347c:	40c000ef          	jal	ra,80003888 <API_PushSendQueue>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:229
            break;
80003480:	1300006f          	j	800035b0 <External_2_IRQHandler+0x544>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:232
        
        case MESSAGE_DELIVERY:
            prints("Tem uma mensagem chegando...\n");
80003484:	800077b7          	lui	a5,0x80007
80003488:	ad078513          	addi	a0,a5,-1328 # 80006ad0 <__stack_top+0xfffc54a0>
8000348c:	909ff0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:233
            aux = API_GetTaskSlot(incommingPacket.destination_task, incommingPacket.application_id);
80003490:	800207b7          	lui	a5,0x80020
80003494:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003498:	0147a703          	lw	a4,20(a5)
8000349c:	800207b7          	lui	a5,0x80020
800034a0:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
800034a4:	00c7a783          	lw	a5,12(a5)
800034a8:	00078593          	mv	a1,a5
800034ac:	00070513          	mv	a0,a4
800034b0:	08d020ef          	jal	ra,80005d3c <API_GetTaskSlot>
800034b4:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:234
            incommingPacket.service = MESSAGE_DELIVERY_FINISH;
800034b8:	800207b7          	lui	a5,0x80020
800034bc:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
800034c0:	02100713          	li	a4,33
800034c4:	00e7a423          	sw	a4,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:235
            printsv("MESSAGE_DELIVERY addr: ", TaskList[aux].MsgToReceive);
800034c8:	800217b7          	lui	a5,0x80021
800034cc:	fec42703          	lw	a4,-20(s0)
800034d0:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
800034d4:	00070793          	mv	a5,a4
800034d8:	00479793          	slli	a5,a5,0x4
800034dc:	40e787b3          	sub	a5,a5,a4
800034e0:	00379793          	slli	a5,a5,0x3
800034e4:	00f687b3          	add	a5,a3,a5
800034e8:	0147a783          	lw	a5,20(a5)
800034ec:	00078593          	mv	a1,a5
800034f0:	800077b7          	lui	a5,0x80007
800034f4:	af078513          	addi	a0,a5,-1296 # 80006af0 <__stack_top+0xfffc54c0>
800034f8:	949ff0ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:236
            HW_set_32bit_reg(NI_ADDR, TaskList[aux].MsgToReceive);
800034fc:	800217b7          	lui	a5,0x80021
80003500:	fec42703          	lw	a4,-20(s0)
80003504:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80003508:	00070793          	mv	a5,a4
8000350c:	00479793          	slli	a5,a5,0x4
80003510:	40e787b3          	sub	a5,a5,a4
80003514:	00379793          	slli	a5,a5,0x3
80003518:	00f687b3          	add	a5,a3,a5
8000351c:	0147a783          	lw	a5,20(a5)
80003520:	00078593          	mv	a1,a5
80003524:	500007b7          	lui	a5,0x50000
80003528:	00478513          	addi	a0,a5,4 # 50000004 <RAM_SIZE+0x4ff80004>
8000352c:	9cdfd0ef          	jal	ra,80000ef8 <HW_set_32bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:237
            prints("done...\n----------\n");
80003530:	800077b7          	lui	a5,0x80007
80003534:	b0878513          	addi	a0,a5,-1272 # 80006b08 <__stack_top+0xfffc54d8>
80003538:	85dff0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:238
            break;
8000353c:	0740006f          	j	800035b0 <External_2_IRQHandler+0x544>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:242
        
        case MESSAGE_DELIVERY_FINISH:
            //prints("Terminou de entregar a mensagem!!\n");
            aux = API_GetTaskSlot(incommingPacket.destination_task, incommingPacket.application_id);
80003540:	800207b7          	lui	a5,0x80020
80003544:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003548:	0147a703          	lw	a4,20(a5)
8000354c:	800207b7          	lui	a5,0x80020
80003550:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003554:	00c7a783          	lw	a5,12(a5)
80003558:	00078593          	mv	a1,a5
8000355c:	00070513          	mv	a0,a4
80003560:	7dc020ef          	jal	ra,80005d3c <API_GetTaskSlot>
80003564:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:243
            TaskList[aux].waitingMsg = FALSE;
80003568:	800216b7          	lui	a3,0x80021
8000356c:	fec42703          	lw	a4,-20(s0)
80003570:	00070793          	mv	a5,a4
80003574:	00479793          	slli	a5,a5,0x4
80003578:	40e787b3          	sub	a5,a5,a4
8000357c:	00379793          	slli	a5,a5,0x3
80003580:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80003584:	00e787b3          	add	a5,a5,a4
80003588:	0007a823          	sw	zero,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:244
            break;
8000358c:	0240006f          	j	800035b0 <External_2_IRQHandler+0x544>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:248
            

        default:
            printsv("ERROR External_2_IRQHandler Unknown-Service ", incommingPacket.service);
80003590:	800207b7          	lui	a5,0x80020
80003594:	1b078793          	addi	a5,a5,432 # 800201b0 <__stack_top+0xfffdeb80>
80003598:	0087a783          	lw	a5,8(a5)
8000359c:	00078593          	mv	a1,a5
800035a0:	800077b7          	lui	a5,0x80007
800035a4:	b1c78513          	addi	a0,a5,-1252 # 80006b1c <__stack_top+0xfffc54ec>
800035a8:	899ff0ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:249
            break;
800035ac:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:252
    }
    // prints("==========================\n");
    HW_set_32bit_reg(NI_RX, DONE);
800035b0:	000057b7          	lui	a5,0x5
800035b4:	55578593          	addi	a1,a5,1365 # 5555 <HEAP_SIZE-0xaaab>
800035b8:	500007b7          	lui	a5,0x50000
800035bc:	00c78513          	addi	a0,a5,12 # 5000000c <RAM_SIZE+0x4ff8000c>
800035c0:	939fd0ef          	jal	ra,80000ef8 <HW_set_32bit_reg>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:253
    return 0;
800035c4:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:254
}
800035c8:	00078513          	mv	a0,a5
800035cc:	01c12083          	lw	ra,28(sp)
800035d0:	01812403          	lw	s0,24(sp)
800035d4:	02010113          	addi	sp,sp,32
800035d8:	00008067          	ret

800035dc <mySwap>:
mySwap():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:259

////////////////////////////////////////////////////////////
// https://www.techiedelight.com/implement-itoa-function-in-c/
// Function to swap two numbers
void mySwap(char *x, char *y) {
800035dc:	fd010113          	addi	sp,sp,-48
800035e0:	02812623          	sw	s0,44(sp)
800035e4:	03010413          	addi	s0,sp,48
800035e8:	fca42e23          	sw	a0,-36(s0)
800035ec:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:260
    char t = *x; *x = *y; *y = t;
800035f0:	fdc42783          	lw	a5,-36(s0)
800035f4:	0007c783          	lbu	a5,0(a5)
800035f8:	fef407a3          	sb	a5,-17(s0)
800035fc:	fd842783          	lw	a5,-40(s0)
80003600:	00078703          	lb	a4,0(a5)
80003604:	fdc42783          	lw	a5,-36(s0)
80003608:	00e78023          	sb	a4,0(a5)
8000360c:	fd842783          	lw	a5,-40(s0)
80003610:	fef44703          	lbu	a4,-17(s0)
80003614:	00e78023          	sb	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:261
}
80003618:	00000013          	nop
8000361c:	02c12403          	lw	s0,44(sp)
80003620:	03010113          	addi	sp,sp,48
80003624:	00008067          	ret

80003628 <reverse>:
reverse():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:263
// Function to reverse `buffer[i…j]`
char* reverse(char *buffer, int i, int j){
80003628:	fe010113          	addi	sp,sp,-32
8000362c:	00112e23          	sw	ra,28(sp)
80003630:	00812c23          	sw	s0,24(sp)
80003634:	02010413          	addi	s0,sp,32
80003638:	fea42623          	sw	a0,-20(s0)
8000363c:	feb42423          	sw	a1,-24(s0)
80003640:	fec42223          	sw	a2,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:264
    while (i < j) {
80003644:	0400006f          	j	80003684 <reverse+0x5c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:265
        mySwap(&buffer[i++], &buffer[j--]);
80003648:	fe842783          	lw	a5,-24(s0)
8000364c:	00178713          	addi	a4,a5,1
80003650:	fee42423          	sw	a4,-24(s0)
80003654:	00078713          	mv	a4,a5
80003658:	fec42783          	lw	a5,-20(s0)
8000365c:	00e786b3          	add	a3,a5,a4
80003660:	fe442783          	lw	a5,-28(s0)
80003664:	fff78713          	addi	a4,a5,-1
80003668:	fee42223          	sw	a4,-28(s0)
8000366c:	00078713          	mv	a4,a5
80003670:	fec42783          	lw	a5,-20(s0)
80003674:	00e787b3          	add	a5,a5,a4
80003678:	00078593          	mv	a1,a5
8000367c:	00068513          	mv	a0,a3
80003680:	f5dff0ef          	jal	ra,800035dc <mySwap>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:264
    while (i < j) {
80003684:	fe842703          	lw	a4,-24(s0)
80003688:	fe442783          	lw	a5,-28(s0)
8000368c:	faf74ee3          	blt	a4,a5,80003648 <reverse+0x20>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:268
    }
 
    return buffer;
80003690:	fec42783          	lw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:269
}
80003694:	00078513          	mv	a0,a5
80003698:	01c12083          	lw	ra,28(sp)
8000369c:	01812403          	lw	s0,24(sp)
800036a0:	02010113          	addi	sp,sp,32
800036a4:	00008067          	ret

800036a8 <myItoa>:
myItoa():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:271
// Iterative function to implement `itoa()` function in C
char* myItoa(int value, char* buffer, int base){
800036a8:	fd010113          	addi	sp,sp,-48
800036ac:	02112623          	sw	ra,44(sp)
800036b0:	02812423          	sw	s0,40(sp)
800036b4:	03010413          	addi	s0,sp,48
800036b8:	fca42e23          	sw	a0,-36(s0)
800036bc:	fcb42c23          	sw	a1,-40(s0)
800036c0:	fcc42a23          	sw	a2,-44(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:273
    // invalid input
    if (base < 2 || base > 32) {
800036c4:	fd442703          	lw	a4,-44(s0)
800036c8:	00100793          	li	a5,1
800036cc:	00e7d863          	ble	a4,a5,800036dc <myItoa+0x34>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:273 (discriminator 1)
800036d0:	fd442703          	lw	a4,-44(s0)
800036d4:	02000793          	li	a5,32
800036d8:	00e7d663          	ble	a4,a5,800036e4 <myItoa+0x3c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:274
        return buffer;
800036dc:	fd842783          	lw	a5,-40(s0)
800036e0:	1540006f          	j	80003834 <myItoa+0x18c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:278
    }
    // consider the absolute value of the number
    int n;
    if (value < 0)
800036e4:	fdc42783          	lw	a5,-36(s0)
800036e8:	0007da63          	bgez	a5,800036fc <myItoa+0x54>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:279
        n = value * -1;
800036ec:	fdc42783          	lw	a5,-36(s0)
800036f0:	40f007b3          	neg	a5,a5
800036f4:	fef42623          	sw	a5,-20(s0)
800036f8:	00c0006f          	j	80003704 <myItoa+0x5c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:281
    else 
        n = value;
800036fc:	fdc42783          	lw	a5,-36(s0)
80003700:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:283

    int i = 0;
80003704:	fe042423          	sw	zero,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:284
    while (n){
80003708:	09c0006f          	j	800037a4 <myItoa+0xfc>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:285
        int r = n % base;
8000370c:	fec42703          	lw	a4,-20(s0)
80003710:	fd442783          	lw	a5,-44(s0)
80003714:	02f767b3          	rem	a5,a4,a5
80003718:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:287
 
        if (r >= 10) {
8000371c:	fe442703          	lw	a4,-28(s0)
80003720:	00900793          	li	a5,9
80003724:	02e7de63          	ble	a4,a5,80003760 <myItoa+0xb8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:288
            buffer[i++] = 65 + (r - 10);
80003728:	fe442783          	lw	a5,-28(s0)
8000372c:	0ff7f793          	andi	a5,a5,255
80003730:	03778793          	addi	a5,a5,55
80003734:	0ff7f693          	andi	a3,a5,255
80003738:	fe842783          	lw	a5,-24(s0)
8000373c:	00178713          	addi	a4,a5,1
80003740:	fee42423          	sw	a4,-24(s0)
80003744:	00078713          	mv	a4,a5
80003748:	fd842783          	lw	a5,-40(s0)
8000374c:	00e787b3          	add	a5,a5,a4
80003750:	01869713          	slli	a4,a3,0x18
80003754:	41875713          	srai	a4,a4,0x18
80003758:	00e78023          	sb	a4,0(a5)
8000375c:	0380006f          	j	80003794 <myItoa+0xec>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:291
        }
        else {
            buffer[i++] = 48 + r;
80003760:	fe442783          	lw	a5,-28(s0)
80003764:	0ff7f793          	andi	a5,a5,255
80003768:	03078793          	addi	a5,a5,48
8000376c:	0ff7f693          	andi	a3,a5,255
80003770:	fe842783          	lw	a5,-24(s0)
80003774:	00178713          	addi	a4,a5,1
80003778:	fee42423          	sw	a4,-24(s0)
8000377c:	00078713          	mv	a4,a5
80003780:	fd842783          	lw	a5,-40(s0)
80003784:	00e787b3          	add	a5,a5,a4
80003788:	01869713          	slli	a4,a3,0x18
8000378c:	41875713          	srai	a4,a4,0x18
80003790:	00e78023          	sb	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:294
        }
 
        n = n / base;
80003794:	fec42703          	lw	a4,-20(s0)
80003798:	fd442783          	lw	a5,-44(s0)
8000379c:	02f747b3          	div	a5,a4,a5
800037a0:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:284
    while (n){
800037a4:	fec42783          	lw	a5,-20(s0)
800037a8:	f60792e3          	bnez	a5,8000370c <myItoa+0x64>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:297
    }
    // if the number is 0
    if (i == 0) {
800037ac:	fe842783          	lw	a5,-24(s0)
800037b0:	02079263          	bnez	a5,800037d4 <myItoa+0x12c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:298
        buffer[i++] = '0';
800037b4:	fe842783          	lw	a5,-24(s0)
800037b8:	00178713          	addi	a4,a5,1
800037bc:	fee42423          	sw	a4,-24(s0)
800037c0:	00078713          	mv	a4,a5
800037c4:	fd842783          	lw	a5,-40(s0)
800037c8:	00e787b3          	add	a5,a5,a4
800037cc:	03000713          	li	a4,48
800037d0:	00e78023          	sb	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:303
    }
    // If the base is 10 and the value is negative, the resulting string
    // is preceded with a minus sign (-)
    // With any other base, value is always considered unsigned
    if (value < 0 && base == 10) {
800037d4:	fdc42783          	lw	a5,-36(s0)
800037d8:	0207d863          	bgez	a5,80003808 <myItoa+0x160>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:303 (discriminator 1)
800037dc:	fd442703          	lw	a4,-44(s0)
800037e0:	00a00793          	li	a5,10
800037e4:	02f71263          	bne	a4,a5,80003808 <myItoa+0x160>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:304
        buffer[i++] = '-';
800037e8:	fe842783          	lw	a5,-24(s0)
800037ec:	00178713          	addi	a4,a5,1
800037f0:	fee42423          	sw	a4,-24(s0)
800037f4:	00078713          	mv	a4,a5
800037f8:	fd842783          	lw	a5,-40(s0)
800037fc:	00e787b3          	add	a5,a5,a4
80003800:	02d00713          	li	a4,45
80003804:	00e78023          	sb	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:306
    }
    buffer[i] = '\0'; // null terminate string
80003808:	fe842783          	lw	a5,-24(s0)
8000380c:	fd842703          	lw	a4,-40(s0)
80003810:	00f707b3          	add	a5,a4,a5
80003814:	00078023          	sb	zero,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:308
    // reverse the string and return it
    return reverse(buffer, 0, i - 1);
80003818:	fe842783          	lw	a5,-24(s0)
8000381c:	fff78793          	addi	a5,a5,-1
80003820:	00078613          	mv	a2,a5
80003824:	00000593          	li	a1,0
80003828:	fd842503          	lw	a0,-40(s0)
8000382c:	dfdff0ef          	jal	ra,80003628 <reverse>
80003830:	00050793          	mv	a5,a0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:309
}
80003834:	00078513          	mv	a0,a5
80003838:	02c12083          	lw	ra,44(sp)
8000383c:	02812403          	lw	s0,40(sp)
80003840:	03010113          	addi	sp,sp,48
80003844:	00008067          	ret

80003848 <makeAddress>:
makeAddress():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:323
    return;
}

////////////////////////////////////////////////////////////
// Returns the PE address for a giver pair of coords
unsigned int makeAddress(unsigned int x, unsigned int y) {
80003848:	fd010113          	addi	sp,sp,-48
8000384c:	02812623          	sw	s0,44(sp)
80003850:	03010413          	addi	s0,sp,48
80003854:	fca42e23          	sw	a0,-36(s0)
80003858:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:324
    unsigned int address = 0x00000000;
8000385c:	fe042623          	sw	zero,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:325
    return (address | (x << 8) | y);
80003860:	fdc42783          	lw	a5,-36(s0)
80003864:	00879713          	slli	a4,a5,0x8
80003868:	fec42783          	lw	a5,-20(s0)
8000386c:	00f76733          	or	a4,a4,a5
80003870:	fd842783          	lw	a5,-40(s0)
80003874:	00f767b3          	or	a5,a4,a5
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:326
}
80003878:	00078513          	mv	a0,a5
8000387c:	02c12403          	lw	s0,44(sp)
80003880:	03010113          	addi	sp,sp,48
80003884:	00008067          	ret

80003888 <API_PushSendQueue>:
API_PushSendQueue():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:330

////////////////////////////////////////////////////////////
// Pushes one slot to the sending queue
void API_PushSendQueue(unsigned int type, unsigned int slot){
80003888:	fe010113          	addi	sp,sp,-32
8000388c:	00112e23          	sw	ra,28(sp)
80003890:	00812c23          	sw	s0,24(sp)
80003894:	02010413          	addi	s0,sp,32
80003898:	fea42623          	sw	a0,-20(s0)
8000389c:	feb42423          	sw	a1,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:331
    SendingQueue[SendingQueue_front] = type | slot;
800038a0:	800207b7          	lui	a5,0x80020
800038a4:	21c7a683          	lw	a3,540(a5) # 8002021c <__stack_top+0xfffdebec>
800038a8:	fec42703          	lw	a4,-20(s0)
800038ac:	fe842783          	lw	a5,-24(s0)
800038b0:	00f76733          	or	a4,a4,a5
800038b4:	800207b7          	lui	a5,0x80020
800038b8:	00269693          	slli	a3,a3,0x2
800038bc:	1e478793          	addi	a5,a5,484 # 800201e4 <__stack_top+0xfffdebb4>
800038c0:	00f687b3          	add	a5,a3,a5
800038c4:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:332
    printsv("SendingQueue_front: ", SendingQueue_front);
800038c8:	800207b7          	lui	a5,0x80020
800038cc:	21c7a783          	lw	a5,540(a5) # 8002021c <__stack_top+0xfffdebec>
800038d0:	00078593          	mv	a1,a5
800038d4:	800077b7          	lui	a5,0x80007
800038d8:	b7478513          	addi	a0,a5,-1164 # 80006b74 <__stack_top+0xfffc5544>
800038dc:	d64ff0ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:333
    if(SendingQueue_front == (PIPE_SIZE*2)-1){
800038e0:	800207b7          	lui	a5,0x80020
800038e4:	21c7a703          	lw	a4,540(a5) # 8002021c <__stack_top+0xfffdebec>
800038e8:	00700793          	li	a5,7
800038ec:	00f71863          	bne	a4,a5,800038fc <API_PushSendQueue+0x74>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:334
        SendingQueue_front = 0;
800038f0:	800207b7          	lui	a5,0x80020
800038f4:	2007ae23          	sw	zero,540(a5) # 8002021c <__stack_top+0xfffdebec>
800038f8:	0180006f          	j	80003910 <API_PushSendQueue+0x88>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:336
    } else {
        SendingQueue_front++;
800038fc:	800207b7          	lui	a5,0x80020
80003900:	21c7a783          	lw	a5,540(a5) # 8002021c <__stack_top+0xfffdebec>
80003904:	00178713          	addi	a4,a5,1
80003908:	800207b7          	lui	a5,0x80020
8000390c:	20e7ae23          	sw	a4,540(a5) # 8002021c <__stack_top+0xfffdebec>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:338
    }
    API_Try2Send();
80003910:	0a4000ef          	jal	ra,800039b4 <API_Try2Send>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:339
    return;
80003914:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:340
}
80003918:	01c12083          	lw	ra,28(sp)
8000391c:	01812403          	lw	s0,24(sp)
80003920:	02010113          	addi	sp,sp,32
80003924:	00008067          	ret

80003928 <API_PopSendQueue>:
API_PopSendQueue():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:344

////////////////////////////////////////////////////////////
// Pushes one slot to the sending queue
unsigned int API_PopSendQueue(){
80003928:	fe010113          	addi	sp,sp,-32
8000392c:	00812e23          	sw	s0,28(sp)
80003930:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:346
    unsigned int element;
    if (SendingQueue_front == SendingQueue_tail){
80003934:	800207b7          	lui	a5,0x80020
80003938:	21c7a703          	lw	a4,540(a5) # 8002021c <__stack_top+0xfffdebec>
8000393c:	800207b7          	lui	a5,0x80020
80003940:	2047a783          	lw	a5,516(a5) # 80020204 <__stack_top+0xfffdebd4>
80003944:	00f71663          	bne	a4,a5,80003950 <API_PopSendQueue+0x28>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:347
        return EMPTY;
80003948:	303007b7          	lui	a5,0x30300
8000394c:	0580006f          	j	800039a4 <API_PopSendQueue+0x7c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:349
    } else {
        element = SendingQueue[SendingQueue_tail];
80003950:	800207b7          	lui	a5,0x80020
80003954:	2047a703          	lw	a4,516(a5) # 80020204 <__stack_top+0xfffdebd4>
80003958:	800207b7          	lui	a5,0x80020
8000395c:	00271713          	slli	a4,a4,0x2
80003960:	1e478793          	addi	a5,a5,484 # 800201e4 <__stack_top+0xfffdebb4>
80003964:	00f707b3          	add	a5,a4,a5
80003968:	0007a783          	lw	a5,0(a5)
8000396c:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:350
        if (SendingQueue_tail == (PIPE_SIZE*2)-1){
80003970:	800207b7          	lui	a5,0x80020
80003974:	2047a703          	lw	a4,516(a5) # 80020204 <__stack_top+0xfffdebd4>
80003978:	00700793          	li	a5,7
8000397c:	00f71863          	bne	a4,a5,8000398c <API_PopSendQueue+0x64>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:351
            SendingQueue_tail = 0;
80003980:	800207b7          	lui	a5,0x80020
80003984:	2007a223          	sw	zero,516(a5) # 80020204 <__stack_top+0xfffdebd4>
80003988:	0180006f          	j	800039a0 <API_PopSendQueue+0x78>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:353
        } else {
            SendingQueue_tail++;
8000398c:	800207b7          	lui	a5,0x80020
80003990:	2047a783          	lw	a5,516(a5) # 80020204 <__stack_top+0xfffdebd4>
80003994:	00178713          	addi	a4,a5,1
80003998:	800207b7          	lui	a5,0x80020
8000399c:	20e7a223          	sw	a4,516(a5) # 80020204 <__stack_top+0xfffdebd4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:355
        }
        return element;
800039a0:	fec42783          	lw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:357
    }
}
800039a4:	00078513          	mv	a0,a5
800039a8:	01c12403          	lw	s0,28(sp)
800039ac:	02010113          	addi	sp,sp,32
800039b0:	00008067          	ret

800039b4 <API_Try2Send>:
API_Try2Send():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:361

////////////////////////////////////////////////////////////
// Try to send some packet! 
void API_Try2Send(){
800039b4:	fe010113          	addi	sp,sp,-32
800039b8:	00112e23          	sw	ra,28(sp)
800039bc:	00812c23          	sw	s0,24(sp)
800039c0:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:365
    unsigned int toSend;
    //prints("API_Try2Send\n");
    // Try to send the packet to NI if it's available
    vPortEnterCritical();
800039c4:	bf1fd0ef          	jal	ra,800015b4 <vPortEnterCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:367
        // Checks if the NI is available to transmitt something
        if (HW_get_32bit_reg(NI_TX) == NI_STATUS_OFF){
800039c8:	500007b7          	lui	a5,0x50000
800039cc:	00878513          	addi	a0,a5,8 # 50000008 <RAM_SIZE+0x4ff80008>
800039d0:	d30fd0ef          	jal	ra,80000f00 <HW_get_32bit_reg>
800039d4:	00050713          	mv	a4,a0
800039d8:	0ff00793          	li	a5,255
800039dc:	0af71c63          	bne	a4,a5,80003a94 <API_Try2Send+0xe0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:369
            //prints("NI_TX free\n");
            toSend = API_PopSendQueue();
800039e0:	f49ff0ef          	jal	ra,80003928 <API_PopSendQueue>
800039e4:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:371
            //printsv("toSend ", toSend);
            if (toSend != EMPTY){
800039e8:	fec42703          	lw	a4,-20(s0)
800039ec:	303007b7          	lui	a5,0x30300
800039f0:	0af70263          	beq	a4,a5,80003a94 <API_Try2Send+0xe0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:372
                SendingSlot = toSend;
800039f4:	800207b7          	lui	a5,0x80020
800039f8:	fec42703          	lw	a4,-20(s0)
800039fc:	0ae7ac23          	sw	a4,184(a5) # 800200b8 <__stack_top+0xfffdea88>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:373
                if((toSend & 0xFFFF0000) ==  SERVICE){
80003a00:	fec42703          	lw	a4,-20(s0)
80003a04:	ffff07b7          	lui	a5,0xffff0
80003a08:	00f77733          	and	a4,a4,a5
80003a0c:	101007b7          	lui	a5,0x10100
80003a10:	04f71063          	bne	a4,a5,80003a50 <API_Try2Send+0x9c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:374
                    SendRaw((unsigned int)&ServicePipe[toSend & 0x0000FFFF].header);
80003a14:	fec42703          	lw	a4,-20(s0)
80003a18:	000107b7          	lui	a5,0x10
80003a1c:	fff78793          	addi	a5,a5,-1 # ffff <HEAP_SIZE-0x1>
80003a20:	00f77733          	and	a4,a4,a5
80003a24:	00070793          	mv	a5,a4
80003a28:	00479793          	slli	a5,a5,0x4
80003a2c:	40e787b3          	sub	a5,a5,a4
80003a30:	00279793          	slli	a5,a5,0x2
80003a34:	80020737          	lui	a4,0x80020
80003a38:	0bc70713          	addi	a4,a4,188 # 800200bc <__stack_top+0xfffdea8c>
80003a3c:	00e787b3          	add	a5,a5,a4
80003a40:	00878793          	addi	a5,a5,8
80003a44:	00078513          	mv	a0,a5
80003a48:	cf4ff0ef          	jal	ra,80002f3c <SendRaw>
80003a4c:	0480006f          	j	80003a94 <API_Try2Send+0xe0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:376
                }
                else if((toSend & 0xFFFF0000) ==  MESSAGE){
80003a50:	fec42703          	lw	a4,-20(s0)
80003a54:	ffff07b7          	lui	a5,0xffff0
80003a58:	00f77733          	and	a4,a4,a5
80003a5c:	202007b7          	lui	a5,0x20200
80003a60:	02f71a63          	bne	a4,a5,80003a94 <API_Try2Send+0xe0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:377
                    SendRaw((unsigned int)&MessagePipe[toSend & 0x0000FFFF].header);
80003a64:	fec42703          	lw	a4,-20(s0)
80003a68:	000107b7          	lui	a5,0x10
80003a6c:	fff78793          	addi	a5,a5,-1 # ffff <HEAP_SIZE-0x1>
80003a70:	00f77733          	and	a4,a4,a5
80003a74:	24400793          	li	a5,580
80003a78:	02f70733          	mul	a4,a4,a5
80003a7c:	800207b7          	lui	a5,0x80020
80003a80:	22078793          	addi	a5,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80003a84:	00f707b3          	add	a5,a4,a5
80003a88:	00c78793          	addi	a5,a5,12
80003a8c:	00078513          	mv	a0,a5
80003a90:	cacff0ef          	jal	ra,80002f3c <SendRaw>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:383
                }
            }
        } else {
            //prints("NI_TX occupied\n");
        }
    vPortExitCritical();
80003a94:	b55fd0ef          	jal	ra,800015e8 <vPortExitCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:384
    return;
80003a98:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:385
}
80003a9c:	01c12083          	lw	ra,28(sp)
80003aa0:	01812403          	lw	s0,24(sp)
80003aa4:	02010113          	addi	sp,sp,32
80003aa8:	00008067          	ret

80003aac <API_AckTaskAllocation>:
API_AckTaskAllocation():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:387

void API_AckTaskAllocation(unsigned int task_id, unsigned int app_id){
80003aac:	fd010113          	addi	sp,sp,-48
80003ab0:	02112623          	sw	ra,44(sp)
80003ab4:	02812423          	sw	s0,40(sp)
80003ab8:	03010413          	addi	s0,sp,48
80003abc:	fca42e23          	sw	a0,-36(s0)
80003ac0:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:390
    unsigned int mySlot;
    do{
        mySlot = API_GetServiceSlot();
80003ac4:	778020ef          	jal	ra,8000623c <API_GetServiceSlot>
80003ac8:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:391
        if(mySlot == PIPE_FULL) vTaskDelay(1);
80003acc:	fec42703          	lw	a4,-20(s0)
80003ad0:	fdfe07b7          	lui	a5,0xfdfe0
80003ad4:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
80003ad8:	00f71663          	bne	a4,a5,80003ae4 <API_AckTaskAllocation+0x38>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:391 (discriminator 1)
80003adc:	00100513          	li	a0,1
80003ae0:	e64fe0ef          	jal	ra,80002144 <vTaskDelay>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:392
    }while(mySlot == PIPE_FULL);
80003ae4:	fec42703          	lw	a4,-20(s0)
80003ae8:	fdfe07b7          	lui	a5,0xfdfe0
80003aec:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
80003af0:	fcf70ae3          	beq	a4,a5,80003ac4 <API_AckTaskAllocation+0x18>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:395
    //printsv("I got a free service slot!! -> ", mySlot);

    ServicePipe[mySlot].holder = PIPE_SYS_HOLDER;
80003af4:	800207b7          	lui	a5,0x80020
80003af8:	fec42703          	lw	a4,-20(s0)
80003afc:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80003b00:	00070793          	mv	a5,a4
80003b04:	00479793          	slli	a5,a5,0x4
80003b08:	40e787b3          	sub	a5,a5,a4
80003b0c:	00279793          	slli	a5,a5,0x2
80003b10:	00f687b3          	add	a5,a3,a5
80003b14:	feff0737          	lui	a4,0xfeff0
80003b18:	efe70713          	addi	a4,a4,-258 # fefefefe <__stack_top+0x7efae8ce>
80003b1c:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:397

    ServicePipe[mySlot].header.header           = makeAddress(0, 0);
80003b20:	00000593          	li	a1,0
80003b24:	00000513          	li	a0,0
80003b28:	d21ff0ef          	jal	ra,80003848 <makeAddress>
80003b2c:	00050613          	mv	a2,a0
80003b30:	800207b7          	lui	a5,0x80020
80003b34:	fec42703          	lw	a4,-20(s0)
80003b38:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80003b3c:	00070793          	mv	a5,a4
80003b40:	00479793          	slli	a5,a5,0x4
80003b44:	40e787b3          	sub	a5,a5,a4
80003b48:	00279793          	slli	a5,a5,0x2
80003b4c:	00f687b3          	add	a5,a3,a5
80003b50:	00c7a423          	sw	a2,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:398
    ServicePipe[mySlot].header.payload_size     = PKT_SERVICE_SIZE;
80003b54:	800207b7          	lui	a5,0x80020
80003b58:	fec42703          	lw	a4,-20(s0)
80003b5c:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80003b60:	00070793          	mv	a5,a4
80003b64:	00479793          	slli	a5,a5,0x4
80003b68:	40e787b3          	sub	a5,a5,a4
80003b6c:	00279793          	slli	a5,a5,0x2
80003b70:	00f687b3          	add	a5,a3,a5
80003b74:	00b00713          	li	a4,11
80003b78:	00e7a623          	sw	a4,12(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:399
    ServicePipe[mySlot].header.service          = TASK_ALLOCATION_SUCCESS;
80003b7c:	800207b7          	lui	a5,0x80020
80003b80:	fec42703          	lw	a4,-20(s0)
80003b84:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80003b88:	00070793          	mv	a5,a4
80003b8c:	00479793          	slli	a5,a5,0x4
80003b90:	40e787b3          	sub	a5,a5,a4
80003b94:	00279793          	slli	a5,a5,0x2
80003b98:	00f687b3          	add	a5,a3,a5
80003b9c:	03500713          	li	a4,53
80003ba0:	00e7a823          	sw	a4,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:400
    ServicePipe[mySlot].header.task_id          = task_id;
80003ba4:	800207b7          	lui	a5,0x80020
80003ba8:	fec42703          	lw	a4,-20(s0)
80003bac:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80003bb0:	00070793          	mv	a5,a4
80003bb4:	00479793          	slli	a5,a5,0x4
80003bb8:	40e787b3          	sub	a5,a5,a4
80003bbc:	00279793          	slli	a5,a5,0x2
80003bc0:	00f687b3          	add	a5,a3,a5
80003bc4:	fdc42703          	lw	a4,-36(s0)
80003bc8:	00e7aa23          	sw	a4,20(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:401
    ServicePipe[mySlot].header.task_app_id      = app_id;
80003bcc:	800207b7          	lui	a5,0x80020
80003bd0:	fec42703          	lw	a4,-20(s0)
80003bd4:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80003bd8:	00070793          	mv	a5,a4
80003bdc:	00479793          	slli	a5,a5,0x4
80003be0:	40e787b3          	sub	a5,a5,a4
80003be4:	00279793          	slli	a5,a5,0x2
80003be8:	00f687b3          	add	a5,a3,a5
80003bec:	fd842703          	lw	a4,-40(s0)
80003bf0:	02e7a223          	sw	a4,36(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:403

    API_PushSendQueue(SERVICE, mySlot);
80003bf4:	fec42583          	lw	a1,-20(s0)
80003bf8:	10100537          	lui	a0,0x10100
80003bfc:	c8dff0ef          	jal	ra,80003888 <API_PushSendQueue>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:404
    return;    
80003c00:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:405
}
80003c04:	02c12083          	lw	ra,44(sp)
80003c08:	02812403          	lw	s0,40(sp)
80003c0c:	03010113          	addi	sp,sp,48
80003c10:	00008067          	ret

80003c14 <API_SendMessage>:
API_SendMessage():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:407

void API_SendMessage(unsigned int addr, unsigned int taskID){
80003c14:	fd010113          	addi	sp,sp,-48
80003c18:	02112623          	sw	ra,44(sp)
80003c1c:	02812423          	sw	s0,40(sp)
80003c20:	03010413          	addi	s0,sp,48
80003c24:	fca42e23          	sw	a0,-36(s0)
80003c28:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:413
    unsigned int mySlot;
    unsigned int taskSlot;
    unsigned int i;
    Message *theMessage;
    do{
        vPortEnterCritical();
80003c2c:	989fd0ef          	jal	ra,800015b4 <vPortEnterCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:414
        mySlot = API_GetMessageSlot();
80003c30:	4c0020ef          	jal	ra,800060f0 <API_GetMessageSlot>
80003c34:	fea42423          	sw	a0,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:415
        prints("esperando um message slot...\n");
80003c38:	800077b7          	lui	a5,0x80007
80003c3c:	b8c78513          	addi	a0,a5,-1140 # 80006b8c <__stack_top+0xfffc555c>
80003c40:	954ff0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:416
        if(mySlot == PIPE_FULL){ 
80003c44:	fe842703          	lw	a4,-24(s0)
80003c48:	fdfe07b7          	lui	a5,0xfdfe0
80003c4c:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
80003c50:	00f71863          	bne	a4,a5,80003c60 <API_SendMessage+0x4c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:417
            vPortExitCritical();
80003c54:	995fd0ef          	jal	ra,800015e8 <vPortExitCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:418
            vTaskDelay(1);
80003c58:	00100513          	li	a0,1
80003c5c:	ce8fe0ef          	jal	ra,80002144 <vTaskDelay>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:420
        }
    }while(mySlot == PIPE_FULL);
80003c60:	fe842703          	lw	a4,-24(s0)
80003c64:	fdfe07b7          	lui	a5,0xfdfe0
80003c68:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
80003c6c:	fcf700e3          	beq	a4,a5,80003c2c <API_SendMessage+0x18>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:422
    
    theMessage = addr;
80003c70:	fdc42783          	lw	a5,-36(s0)
80003c74:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:424

    taskSlot = API_GetCurrentTaskSlot();
80003c78:	60d010ef          	jal	ra,80005a84 <API_GetCurrentTaskSlot>
80003c7c:	fea42023          	sw	a0,-32(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:425
    printsv("Adding a msg in the PIPE slot ", mySlot);
80003c80:	fe842783          	lw	a5,-24(s0)
80003c84:	00078593          	mv	a1,a5
80003c88:	800077b7          	lui	a5,0x80007
80003c8c:	bac78513          	addi	a0,a5,-1108 # 80006bac <__stack_top+0xfffc557c>
80003c90:	9b0ff0ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:426
    MessagePipe[mySlot].holder = taskSlot;
80003c94:	800207b7          	lui	a5,0x80020
80003c98:	fe842683          	lw	a3,-24(s0)
80003c9c:	22078713          	addi	a4,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80003ca0:	24400793          	li	a5,580
80003ca4:	02f687b3          	mul	a5,a3,a5
80003ca8:	00f707b3          	add	a5,a4,a5
80003cac:	fe042703          	lw	a4,-32(s0)
80003cb0:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:428

    MessagePipe[mySlot].header.header           = TaskList[taskSlot].TasksMap[taskID];
80003cb4:	800216b7          	lui	a3,0x80021
80003cb8:	fe042703          	lw	a4,-32(s0)
80003cbc:	00070793          	mv	a5,a4
80003cc0:	00479793          	slli	a5,a5,0x4
80003cc4:	40e787b3          	sub	a5,a5,a4
80003cc8:	00179793          	slli	a5,a5,0x1
80003ccc:	fd842703          	lw	a4,-40(s0)
80003cd0:	00e787b3          	add	a5,a5,a4
80003cd4:	01478793          	addi	a5,a5,20
80003cd8:	00279713          	slli	a4,a5,0x2
80003cdc:	2d868793          	addi	a5,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80003ce0:	00f707b3          	add	a5,a4,a5
80003ce4:	0007a703          	lw	a4,0(a5)
80003ce8:	800207b7          	lui	a5,0x80020
80003cec:	fe842603          	lw	a2,-24(s0)
80003cf0:	22078693          	addi	a3,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80003cf4:	24400793          	li	a5,580
80003cf8:	02f607b3          	mul	a5,a2,a5
80003cfc:	00f687b3          	add	a5,a3,a5
80003d00:	00e7a623          	sw	a4,12(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:429
    MessagePipe[mySlot].header.payload_size     = PKT_SERVICE_SIZE + theMessage->length + 1;
80003d04:	fe442783          	lw	a5,-28(s0)
80003d08:	0007a783          	lw	a5,0(a5)
80003d0c:	00c78713          	addi	a4,a5,12
80003d10:	800207b7          	lui	a5,0x80020
80003d14:	fe842603          	lw	a2,-24(s0)
80003d18:	22078693          	addi	a3,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80003d1c:	24400793          	li	a5,580
80003d20:	02f607b3          	mul	a5,a2,a5
80003d24:	00f687b3          	add	a5,a3,a5
80003d28:	00e7a823          	sw	a4,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:430
    MessagePipe[mySlot].header.service          = MESSAGE_DELIVERY;
80003d2c:	800207b7          	lui	a5,0x80020
80003d30:	fe842683          	lw	a3,-24(s0)
80003d34:	22078713          	addi	a4,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80003d38:	24400793          	li	a5,580
80003d3c:	02f687b3          	mul	a5,a3,a5
80003d40:	00f707b3          	add	a5,a4,a5
80003d44:	02000713          	li	a4,32
80003d48:	00e7aa23          	sw	a4,20(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:431
    MessagePipe[mySlot].header.application_id   = TaskList[taskSlot].AppID;
80003d4c:	800217b7          	lui	a5,0x80021
80003d50:	fe042703          	lw	a4,-32(s0)
80003d54:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80003d58:	00070793          	mv	a5,a4
80003d5c:	00479793          	slli	a5,a5,0x4
80003d60:	40e787b3          	sub	a5,a5,a4
80003d64:	00379793          	slli	a5,a5,0x3
80003d68:	00f687b3          	add	a5,a3,a5
80003d6c:	0087a703          	lw	a4,8(a5)
80003d70:	800207b7          	lui	a5,0x80020
80003d74:	fe842603          	lw	a2,-24(s0)
80003d78:	22078693          	addi	a3,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80003d7c:	24400793          	li	a5,580
80003d80:	02f607b3          	mul	a5,a2,a5
80003d84:	00f687b3          	add	a5,a3,a5
80003d88:	00e7ac23          	sw	a4,24(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:432
    MessagePipe[mySlot].header.producer_task    = TaskList[taskSlot].TaskID;
80003d8c:	800217b7          	lui	a5,0x80021
80003d90:	fe042703          	lw	a4,-32(s0)
80003d94:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80003d98:	00070793          	mv	a5,a4
80003d9c:	00479793          	slli	a5,a5,0x4
80003da0:	40e787b3          	sub	a5,a5,a4
80003da4:	00379793          	slli	a5,a5,0x3
80003da8:	00f687b3          	add	a5,a3,a5
80003dac:	0047a703          	lw	a4,4(a5)
80003db0:	800207b7          	lui	a5,0x80020
80003db4:	fe842603          	lw	a2,-24(s0)
80003db8:	22078693          	addi	a3,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80003dbc:	24400793          	li	a5,580
80003dc0:	02f607b3          	mul	a5,a2,a5
80003dc4:	00f687b3          	add	a5,a3,a5
80003dc8:	00e7ae23          	sw	a4,28(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:433
    MessagePipe[mySlot].header.destination_task = taskID;
80003dcc:	800207b7          	lui	a5,0x80020
80003dd0:	fe842683          	lw	a3,-24(s0)
80003dd4:	22078713          	addi	a4,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80003dd8:	24400793          	li	a5,580
80003ddc:	02f687b3          	mul	a5,a3,a5
80003de0:	00f707b3          	add	a5,a4,a5
80003de4:	fd842703          	lw	a4,-40(s0)
80003de8:	02e7a023          	sw	a4,32(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:434
    MessagePipe[mySlot].msg.length              = theMessage->length;
80003dec:	fe442783          	lw	a5,-28(s0)
80003df0:	0007a703          	lw	a4,0(a5)
80003df4:	800207b7          	lui	a5,0x80020
80003df8:	fe842603          	lw	a2,-24(s0)
80003dfc:	24400693          	li	a3,580
80003e00:	02d606b3          	mul	a3,a2,a3
80003e04:	22078793          	addi	a5,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80003e08:	00f687b3          	add	a5,a3,a5
80003e0c:	04e7a023          	sw	a4,64(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:435
    for (i = 0; i < theMessage->length; i++){
80003e10:	fe042623          	sw	zero,-20(s0)
80003e14:	05c0006f          	j	80003e70 <API_SendMessage+0x25c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:436 (discriminator 3)
        MessagePipe[mySlot].msg.msg[i]          = theMessage->msg[i];
80003e18:	fe442703          	lw	a4,-28(s0)
80003e1c:	fec42783          	lw	a5,-20(s0)
80003e20:	00279793          	slli	a5,a5,0x2
80003e24:	00f707b3          	add	a5,a4,a5
80003e28:	0047a683          	lw	a3,4(a5)
80003e2c:	80020637          	lui	a2,0x80020
80003e30:	fe842703          	lw	a4,-24(s0)
80003e34:	00070793          	mv	a5,a4
80003e38:	00379793          	slli	a5,a5,0x3
80003e3c:	00e787b3          	add	a5,a5,a4
80003e40:	00479793          	slli	a5,a5,0x4
80003e44:	00e787b3          	add	a5,a5,a4
80003e48:	fec42703          	lw	a4,-20(s0)
80003e4c:	00e787b3          	add	a5,a5,a4
80003e50:	01078793          	addi	a5,a5,16
80003e54:	22060713          	addi	a4,a2,544 # 80020220 <__stack_top+0xfffdebf0>
80003e58:	00279793          	slli	a5,a5,0x2
80003e5c:	00f707b3          	add	a5,a4,a5
80003e60:	00d7a223          	sw	a3,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:435 (discriminator 3)
    for (i = 0; i < theMessage->length; i++){
80003e64:	fec42783          	lw	a5,-20(s0)
80003e68:	00178793          	addi	a5,a5,1
80003e6c:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:435 (discriminator 1)
80003e70:	fe442783          	lw	a5,-28(s0)
80003e74:	0007a783          	lw	a5,0(a5)
80003e78:	fec42703          	lw	a4,-20(s0)
80003e7c:	f8f76ee3          	bltu	a4,a5,80003e18 <API_SendMessage+0x204>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:439
    }
    
    if (TaskList[taskSlot].PendingReq[taskID] == TRUE){
80003e80:	800216b7          	lui	a3,0x80021
80003e84:	fe042703          	lw	a4,-32(s0)
80003e88:	00070793          	mv	a5,a4
80003e8c:	00479793          	slli	a5,a5,0x4
80003e90:	40e787b3          	sub	a5,a5,a4
80003e94:	00179793          	slli	a5,a5,0x1
80003e98:	fd842703          	lw	a4,-40(s0)
80003e9c:	00e787b3          	add	a5,a5,a4
80003ea0:	00878793          	addi	a5,a5,8
80003ea4:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80003ea8:	00279793          	slli	a5,a5,0x2
80003eac:	00f707b3          	add	a5,a4,a5
80003eb0:	0047a703          	lw	a4,4(a5)
80003eb4:	00100793          	li	a5,1
80003eb8:	04f71863          	bne	a4,a5,80003f08 <API_SendMessage+0x2f4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:440
        prints(">>>>>Achei aqui no pending!\n");
80003ebc:	800077b7          	lui	a5,0x80007
80003ec0:	bcc78513          	addi	a0,a5,-1076 # 80006bcc <__stack_top+0xfffc559c>
80003ec4:	ed1fe0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:441
        API_PushSendQueue(MESSAGE, mySlot);
80003ec8:	fe842583          	lw	a1,-24(s0)
80003ecc:	20200537          	lui	a0,0x20200
80003ed0:	9b9ff0ef          	jal	ra,80003888 <API_PushSendQueue>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:442
        TaskList[taskSlot].PendingReq[taskID] = FALSE;
80003ed4:	800216b7          	lui	a3,0x80021
80003ed8:	fe042703          	lw	a4,-32(s0)
80003edc:	00070793          	mv	a5,a4
80003ee0:	00479793          	slli	a5,a5,0x4
80003ee4:	40e787b3          	sub	a5,a5,a4
80003ee8:	00179793          	slli	a5,a5,0x1
80003eec:	fd842703          	lw	a4,-40(s0)
80003ef0:	00e787b3          	add	a5,a5,a4
80003ef4:	00878793          	addi	a5,a5,8
80003ef8:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80003efc:	00279793          	slli	a5,a5,0x2
80003f00:	00f707b3          	add	a5,a4,a5
80003f04:	0007a223          	sw	zero,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:444
    }
    vPortExitCritical();
80003f08:	ee0fd0ef          	jal	ra,800015e8 <vPortExitCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:445
    return;
80003f0c:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:446
}
80003f10:	02c12083          	lw	ra,44(sp)
80003f14:	02812403          	lw	s0,40(sp)
80003f18:	03010113          	addi	sp,sp,48
80003f1c:	00008067          	ret

80003f20 <API_SendFinishTask>:
API_SendFinishTask():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:448

void API_SendFinishTask(unsigned int task_id, unsigned int app_id){
80003f20:	fd010113          	addi	sp,sp,-48
80003f24:	02112623          	sw	ra,44(sp)
80003f28:	02812423          	sw	s0,40(sp)
80003f2c:	03010413          	addi	s0,sp,48
80003f30:	fca42e23          	sw	a0,-36(s0)
80003f34:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:451
    unsigned int mySlot;
    do{
        mySlot = API_GetServiceSlot();
80003f38:	304020ef          	jal	ra,8000623c <API_GetServiceSlot>
80003f3c:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:452
        if(mySlot == PIPE_FULL){ 
80003f40:	fec42703          	lw	a4,-20(s0)
80003f44:	fdfe07b7          	lui	a5,0xfdfe0
80003f48:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
80003f4c:	00f71663          	bne	a4,a5,80003f58 <API_SendFinishTask+0x38>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:453
            vTaskDelay(1);
80003f50:	00100513          	li	a0,1
80003f54:	9f0fe0ef          	jal	ra,80002144 <vTaskDelay>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:455
        }
    }while(mySlot == PIPE_FULL);
80003f58:	fec42703          	lw	a4,-20(s0)
80003f5c:	fdfe07b7          	lui	a5,0xfdfe0
80003f60:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
80003f64:	fcf70ae3          	beq	a4,a5,80003f38 <API_SendFinishTask+0x18>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:457

    ServicePipe[mySlot].holder = PIPE_SYS_HOLDER;
80003f68:	800207b7          	lui	a5,0x80020
80003f6c:	fec42703          	lw	a4,-20(s0)
80003f70:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80003f74:	00070793          	mv	a5,a4
80003f78:	00479793          	slli	a5,a5,0x4
80003f7c:	40e787b3          	sub	a5,a5,a4
80003f80:	00279793          	slli	a5,a5,0x2
80003f84:	00f687b3          	add	a5,a3,a5
80003f88:	feff0737          	lui	a4,0xfeff0
80003f8c:	efe70713          	addi	a4,a4,-258 # fefefefe <__stack_top+0x7efae8ce>
80003f90:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:459

    ServicePipe[mySlot].header.header           = makeAddress(0, 0);
80003f94:	00000593          	li	a1,0
80003f98:	00000513          	li	a0,0
80003f9c:	8adff0ef          	jal	ra,80003848 <makeAddress>
80003fa0:	00050613          	mv	a2,a0
80003fa4:	800207b7          	lui	a5,0x80020
80003fa8:	fec42703          	lw	a4,-20(s0)
80003fac:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80003fb0:	00070793          	mv	a5,a4
80003fb4:	00479793          	slli	a5,a5,0x4
80003fb8:	40e787b3          	sub	a5,a5,a4
80003fbc:	00279793          	slli	a5,a5,0x2
80003fc0:	00f687b3          	add	a5,a3,a5
80003fc4:	00c7a423          	sw	a2,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:460
    ServicePipe[mySlot].header.payload_size     = PKT_SERVICE_SIZE;
80003fc8:	800207b7          	lui	a5,0x80020
80003fcc:	fec42703          	lw	a4,-20(s0)
80003fd0:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80003fd4:	00070793          	mv	a5,a4
80003fd8:	00479793          	slli	a5,a5,0x4
80003fdc:	40e787b3          	sub	a5,a5,a4
80003fe0:	00279793          	slli	a5,a5,0x2
80003fe4:	00f687b3          	add	a5,a3,a5
80003fe8:	00b00713          	li	a4,11
80003fec:	00e7a623          	sw	a4,12(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:461
    ServicePipe[mySlot].header.service          = TASK_FINISH;
80003ff0:	800207b7          	lui	a5,0x80020
80003ff4:	fec42703          	lw	a4,-20(s0)
80003ff8:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80003ffc:	00070793          	mv	a5,a4
80004000:	00479793          	slli	a5,a5,0x4
80004004:	40e787b3          	sub	a5,a5,a4
80004008:	00279793          	slli	a5,a5,0x2
8000400c:	00f687b3          	add	a5,a3,a5
80004010:	50000713          	li	a4,1280
80004014:	00e7a823          	sw	a4,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:462
    ServicePipe[mySlot].header.task_id          = task_id;
80004018:	800207b7          	lui	a5,0x80020
8000401c:	fec42703          	lw	a4,-20(s0)
80004020:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80004024:	00070793          	mv	a5,a4
80004028:	00479793          	slli	a5,a5,0x4
8000402c:	40e787b3          	sub	a5,a5,a4
80004030:	00279793          	slli	a5,a5,0x2
80004034:	00f687b3          	add	a5,a3,a5
80004038:	fdc42703          	lw	a4,-36(s0)
8000403c:	00e7aa23          	sw	a4,20(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:463
    ServicePipe[mySlot].header.task_app_id      = app_id;
80004040:	800207b7          	lui	a5,0x80020
80004044:	fec42703          	lw	a4,-20(s0)
80004048:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
8000404c:	00070793          	mv	a5,a4
80004050:	00479793          	slli	a5,a5,0x4
80004054:	40e787b3          	sub	a5,a5,a4
80004058:	00279793          	slli	a5,a5,0x2
8000405c:	00f687b3          	add	a5,a3,a5
80004060:	fd842703          	lw	a4,-40(s0)
80004064:	02e7a223          	sw	a4,36(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:464
    ServicePipe[mySlot].header.task_dest_addr   = ProcessorAddr;
80004068:	800217b7          	lui	a5,0x80021
8000406c:	6207a683          	lw	a3,1568(a5) # 80021620 <__stack_top+0xfffdfff0>
80004070:	800207b7          	lui	a5,0x80020
80004074:	fec42703          	lw	a4,-20(s0)
80004078:	0bc78613          	addi	a2,a5,188 # 800200bc <__stack_top+0xfffdea8c>
8000407c:	00070793          	mv	a5,a4
80004080:	00479793          	slli	a5,a5,0x4
80004084:	40e787b3          	sub	a5,a5,a4
80004088:	00279793          	slli	a5,a5,0x2
8000408c:	00f607b3          	add	a5,a2,a5
80004090:	02d7ac23          	sw	a3,56(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:465
    API_PushSendQueue(SERVICE, mySlot);
80004094:	fec42583          	lw	a1,-20(s0)
80004098:	10100537          	lui	a0,0x10100
8000409c:	fecff0ef          	jal	ra,80003888 <API_PushSendQueue>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:466
    return;    
800040a0:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:467
}
800040a4:	02c12083          	lw	ra,44(sp)
800040a8:	02812403          	lw	s0,40(sp)
800040ac:	03010113          	addi	sp,sp,48
800040b0:	00008067          	ret

800040b4 <API_SendMessageReq>:
API_SendMessageReq():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:469

void API_SendMessageReq(unsigned int addr, unsigned int taskID){
800040b4:	fd010113          	addi	sp,sp,-48
800040b8:	02112623          	sw	ra,44(sp)
800040bc:	02812423          	sw	s0,40(sp)
800040c0:	03010413          	addi	s0,sp,48
800040c4:	fca42e23          	sw	a0,-36(s0)
800040c8:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:474
    unsigned int taskSlot;
    unsigned int mySlot;

    // Update task info
    taskSlot = API_GetCurrentTaskSlot();
800040cc:	1b9010ef          	jal	ra,80005a84 <API_GetCurrentTaskSlot>
800040d0:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:475
    TaskList[taskSlot].waitingMsg = TRUE;
800040d4:	800216b7          	lui	a3,0x80021
800040d8:	fec42703          	lw	a4,-20(s0)
800040dc:	00070793          	mv	a5,a4
800040e0:	00479793          	slli	a5,a5,0x4
800040e4:	40e787b3          	sub	a5,a5,a4
800040e8:	00379793          	slli	a5,a5,0x3
800040ec:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
800040f0:	00e787b3          	add	a5,a5,a4
800040f4:	00100713          	li	a4,1
800040f8:	00e7a823          	sw	a4,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:476
    TaskList[taskSlot].MsgToReceive = addr;
800040fc:	800217b7          	lui	a5,0x80021
80004100:	fec42703          	lw	a4,-20(s0)
80004104:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80004108:	00070793          	mv	a5,a4
8000410c:	00479793          	slli	a5,a5,0x4
80004110:	40e787b3          	sub	a5,a5,a4
80004114:	00379793          	slli	a5,a5,0x3
80004118:	00f687b3          	add	a5,a3,a5
8000411c:	fdc42703          	lw	a4,-36(s0)
80004120:	00e7aa23          	sw	a4,20(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:481
    //printsv("API_SendMessageReq addr: ", addr);

    // Sends the message request
    do{
        mySlot = API_GetServiceSlot();
80004124:	118020ef          	jal	ra,8000623c <API_GetServiceSlot>
80004128:	fea42423          	sw	a0,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:482
        if(mySlot == PIPE_FULL) vTaskDelay(1);
8000412c:	fe842703          	lw	a4,-24(s0)
80004130:	fdfe07b7          	lui	a5,0xfdfe0
80004134:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
80004138:	00f71663          	bne	a4,a5,80004144 <API_SendMessageReq+0x90>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:482 (discriminator 1)
8000413c:	00100513          	li	a0,1
80004140:	804fe0ef          	jal	ra,80002144 <vTaskDelay>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:483
    }while(mySlot == PIPE_FULL);
80004144:	fe842703          	lw	a4,-24(s0)
80004148:	fdfe07b7          	lui	a5,0xfdfe0
8000414c:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
80004150:	fcf70ae3          	beq	a4,a5,80004124 <API_SendMessageReq+0x70>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:485

    ServicePipe[mySlot].holder = PIPE_SYS_HOLDER;
80004154:	800207b7          	lui	a5,0x80020
80004158:	fe842703          	lw	a4,-24(s0)
8000415c:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80004160:	00070793          	mv	a5,a4
80004164:	00479793          	slli	a5,a5,0x4
80004168:	40e787b3          	sub	a5,a5,a4
8000416c:	00279793          	slli	a5,a5,0x2
80004170:	00f687b3          	add	a5,a3,a5
80004174:	feff0737          	lui	a4,0xfeff0
80004178:	efe70713          	addi	a4,a4,-258 # fefefefe <__stack_top+0x7efae8ce>
8000417c:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:487

    ServicePipe[mySlot].header.header           = TaskList[taskSlot].TasksMap[taskID];
80004180:	800216b7          	lui	a3,0x80021
80004184:	fec42703          	lw	a4,-20(s0)
80004188:	00070793          	mv	a5,a4
8000418c:	00479793          	slli	a5,a5,0x4
80004190:	40e787b3          	sub	a5,a5,a4
80004194:	00179793          	slli	a5,a5,0x1
80004198:	fd842703          	lw	a4,-40(s0)
8000419c:	00e787b3          	add	a5,a5,a4
800041a0:	01478793          	addi	a5,a5,20
800041a4:	00279713          	slli	a4,a5,0x2
800041a8:	2d868793          	addi	a5,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
800041ac:	00f707b3          	add	a5,a4,a5
800041b0:	0007a683          	lw	a3,0(a5)
800041b4:	800207b7          	lui	a5,0x80020
800041b8:	fe842703          	lw	a4,-24(s0)
800041bc:	0bc78613          	addi	a2,a5,188 # 800200bc <__stack_top+0xfffdea8c>
800041c0:	00070793          	mv	a5,a4
800041c4:	00479793          	slli	a5,a5,0x4
800041c8:	40e787b3          	sub	a5,a5,a4
800041cc:	00279793          	slli	a5,a5,0x2
800041d0:	00f607b3          	add	a5,a2,a5
800041d4:	00d7a423          	sw	a3,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:488
    ServicePipe[mySlot].header.payload_size     = PKT_SERVICE_SIZE;
800041d8:	800207b7          	lui	a5,0x80020
800041dc:	fe842703          	lw	a4,-24(s0)
800041e0:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
800041e4:	00070793          	mv	a5,a4
800041e8:	00479793          	slli	a5,a5,0x4
800041ec:	40e787b3          	sub	a5,a5,a4
800041f0:	00279793          	slli	a5,a5,0x2
800041f4:	00f687b3          	add	a5,a3,a5
800041f8:	00b00713          	li	a4,11
800041fc:	00e7a623          	sw	a4,12(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:489
    ServicePipe[mySlot].header.service          = MESSAGE_REQUEST;
80004200:	800207b7          	lui	a5,0x80020
80004204:	fe842703          	lw	a4,-24(s0)
80004208:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
8000420c:	00070793          	mv	a5,a4
80004210:	00479793          	slli	a5,a5,0x4
80004214:	40e787b3          	sub	a5,a5,a4
80004218:	00279793          	slli	a5,a5,0x2
8000421c:	00f687b3          	add	a5,a3,a5
80004220:	01000713          	li	a4,16
80004224:	00e7a823          	sw	a4,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:490
    ServicePipe[mySlot].header.task_id          = TaskList[taskSlot].TaskID;
80004228:	800217b7          	lui	a5,0x80021
8000422c:	fec42703          	lw	a4,-20(s0)
80004230:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80004234:	00070793          	mv	a5,a4
80004238:	00479793          	slli	a5,a5,0x4
8000423c:	40e787b3          	sub	a5,a5,a4
80004240:	00379793          	slli	a5,a5,0x3
80004244:	00f687b3          	add	a5,a3,a5
80004248:	0047a683          	lw	a3,4(a5)
8000424c:	800207b7          	lui	a5,0x80020
80004250:	fe842703          	lw	a4,-24(s0)
80004254:	0bc78613          	addi	a2,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80004258:	00070793          	mv	a5,a4
8000425c:	00479793          	slli	a5,a5,0x4
80004260:	40e787b3          	sub	a5,a5,a4
80004264:	00279793          	slli	a5,a5,0x2
80004268:	00f607b3          	add	a5,a2,a5
8000426c:	00d7aa23          	sw	a3,20(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:491
    ServicePipe[mySlot].header.task_app_id      = TaskList[taskSlot].AppID;
80004270:	800217b7          	lui	a5,0x80021
80004274:	fec42703          	lw	a4,-20(s0)
80004278:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
8000427c:	00070793          	mv	a5,a4
80004280:	00479793          	slli	a5,a5,0x4
80004284:	40e787b3          	sub	a5,a5,a4
80004288:	00379793          	slli	a5,a5,0x3
8000428c:	00f687b3          	add	a5,a3,a5
80004290:	0087a683          	lw	a3,8(a5)
80004294:	800207b7          	lui	a5,0x80020
80004298:	fe842703          	lw	a4,-24(s0)
8000429c:	0bc78613          	addi	a2,a5,188 # 800200bc <__stack_top+0xfffdea8c>
800042a0:	00070793          	mv	a5,a4
800042a4:	00479793          	slli	a5,a5,0x4
800042a8:	40e787b3          	sub	a5,a5,a4
800042ac:	00279793          	slli	a5,a5,0x2
800042b0:	00f607b3          	add	a5,a2,a5
800042b4:	02d7a223          	sw	a3,36(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:492
    ServicePipe[mySlot].header.producer_task_id = taskID;
800042b8:	800207b7          	lui	a5,0x80020
800042bc:	fe842703          	lw	a4,-24(s0)
800042c0:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
800042c4:	00070793          	mv	a5,a4
800042c8:	00479793          	slli	a5,a5,0x4
800042cc:	40e787b3          	sub	a5,a5,a4
800042d0:	00279793          	slli	a5,a5,0x2
800042d4:	00f687b3          	add	a5,a3,a5
800042d8:	fd842703          	lw	a4,-40(s0)
800042dc:	00e7ae23          	sw	a4,28(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:494

    API_PushSendQueue(SERVICE, mySlot);
800042e0:	fe842583          	lw	a1,-24(s0)
800042e4:	10100537          	lui	a0,0x10100
800042e8:	da0ff0ef          	jal	ra,80003888 <API_PushSendQueue>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:495
    prints("Esperando Mensagem!\n");
800042ec:	800077b7          	lui	a5,0x80007
800042f0:	bec78513          	addi	a0,a5,-1044 # 80006bec <__stack_top+0xfffc55bc>
800042f4:	aa1fe0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:497
    // Bloquear a tarefa!
    while(TaskList[taskSlot].waitingMsg == TRUE){ 
800042f8:	02c0006f          	j	80004324 <API_SendMessageReq+0x270>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:498
        printsvsv("taskslot ", taskSlot, " esperando mensagem ", 0);
800042fc:	fec42703          	lw	a4,-20(s0)
80004300:	00000693          	li	a3,0
80004304:	800077b7          	lui	a5,0x80007
80004308:	c0478613          	addi	a2,a5,-1020 # 80006c04 <__stack_top+0xfffc55d4>
8000430c:	00070593          	mv	a1,a4
80004310:	800077b7          	lui	a5,0x80007
80004314:	c1c78513          	addi	a0,a5,-996 # 80006c1c <__stack_top+0xfffc55ec>
80004318:	b71fe0ef          	jal	ra,80002e88 <printsvsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:499
        vTaskDelay(1); 
8000431c:	00100513          	li	a0,1
80004320:	e25fd0ef          	jal	ra,80002144 <vTaskDelay>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:497
    while(TaskList[taskSlot].waitingMsg == TRUE){ 
80004324:	800216b7          	lui	a3,0x80021
80004328:	fec42703          	lw	a4,-20(s0)
8000432c:	00070793          	mv	a5,a4
80004330:	00479793          	slli	a5,a5,0x4
80004334:	40e787b3          	sub	a5,a5,a4
80004338:	00379793          	slli	a5,a5,0x3
8000433c:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80004340:	00e787b3          	add	a5,a5,a4
80004344:	0107a703          	lw	a4,16(a5)
80004348:	00100793          	li	a5,1
8000434c:	faf708e3          	beq	a4,a5,800042fc <API_SendMessageReq+0x248>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:501
    }
    prints("Mensagem Recebida!\n");
80004350:	800077b7          	lui	a5,0x80007
80004354:	c2878513          	addi	a0,a5,-984 # 80006c28 <__stack_top+0xfffc55f8>
80004358:	a3dfe0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:502
    return;
8000435c:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:503
}
80004360:	02c12083          	lw	ra,44(sp)
80004364:	02812403          	lw	s0,40(sp)
80004368:	03010113          	addi	sp,sp,48
8000436c:	00008067          	ret

80004370 <API_CheckMessagePipe>:
API_CheckMessagePipe():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:505

unsigned int API_CheckMessagePipe(unsigned int requester_task_id, unsigned int task_app_id){
80004370:	fd010113          	addi	sp,sp,-48
80004374:	02812623          	sw	s0,44(sp)
80004378:	03010413          	addi	s0,sp,48
8000437c:	fca42e23          	sw	a0,-36(s0)
80004380:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:507
    unsigned int i;
    unsigned int sel = ERRO;
80004384:	fff00793          	li	a5,-1
80004388:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:508
    unsigned int smallID = 268435455;
8000438c:	100007b7          	lui	a5,0x10000
80004390:	fff78793          	addi	a5,a5,-1 # fffffff <RAM_SIZE+0xff7ffff>
80004394:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:509
    for (i = 0; i < PIPE_SIZE; i++){
80004398:	fe042623          	sw	zero,-20(s0)
8000439c:	0c80006f          	j	80004464 <API_CheckMessagePipe+0xf4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:510
        if(MessagePipe[i].status == PIPE_OCCUPIED){
800043a0:	800207b7          	lui	a5,0x80020
800043a4:	fec42683          	lw	a3,-20(s0)
800043a8:	24400713          	li	a4,580
800043ac:	02e68733          	mul	a4,a3,a4
800043b0:	22078793          	addi	a5,a5,544 # 80020220 <__stack_top+0xfffdebf0>
800043b4:	00f707b3          	add	a5,a4,a5
800043b8:	0007a703          	lw	a4,0(a5)
800043bc:	00100793          	li	a5,1
800043c0:	08f71c63          	bne	a4,a5,80004458 <API_CheckMessagePipe+0xe8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:511
            if(MessagePipe[i].header.application_id == task_app_id){
800043c4:	800207b7          	lui	a5,0x80020
800043c8:	fec42683          	lw	a3,-20(s0)
800043cc:	22078713          	addi	a4,a5,544 # 80020220 <__stack_top+0xfffdebf0>
800043d0:	24400793          	li	a5,580
800043d4:	02f687b3          	mul	a5,a3,a5
800043d8:	00f707b3          	add	a5,a4,a5
800043dc:	0187a783          	lw	a5,24(a5)
800043e0:	fd842703          	lw	a4,-40(s0)
800043e4:	06f71a63          	bne	a4,a5,80004458 <API_CheckMessagePipe+0xe8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:512
                if(MessagePipe[i].header.destination_task == requester_task_id){
800043e8:	800207b7          	lui	a5,0x80020
800043ec:	fec42683          	lw	a3,-20(s0)
800043f0:	22078713          	addi	a4,a5,544 # 80020220 <__stack_top+0xfffdebf0>
800043f4:	24400793          	li	a5,580
800043f8:	02f687b3          	mul	a5,a3,a5
800043fc:	00f707b3          	add	a5,a4,a5
80004400:	0207a783          	lw	a5,32(a5)
80004404:	fdc42703          	lw	a4,-36(s0)
80004408:	04f71863          	bne	a4,a5,80004458 <API_CheckMessagePipe+0xe8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:513
                    if(MessagePipe[i].msgID < smallID){
8000440c:	800207b7          	lui	a5,0x80020
80004410:	fec42683          	lw	a3,-20(s0)
80004414:	22078713          	addi	a4,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80004418:	24400793          	li	a5,580
8000441c:	02f687b3          	mul	a5,a3,a5
80004420:	00f707b3          	add	a5,a4,a5
80004424:	0087a783          	lw	a5,8(a5)
80004428:	fe442703          	lw	a4,-28(s0)
8000442c:	02e7f663          	bleu	a4,a5,80004458 <API_CheckMessagePipe+0xe8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:514
                        smallID = MessagePipe[i].msgID;
80004430:	800207b7          	lui	a5,0x80020
80004434:	fec42683          	lw	a3,-20(s0)
80004438:	22078713          	addi	a4,a5,544 # 80020220 <__stack_top+0xfffdebf0>
8000443c:	24400793          	li	a5,580
80004440:	02f687b3          	mul	a5,a3,a5
80004444:	00f707b3          	add	a5,a4,a5
80004448:	0087a783          	lw	a5,8(a5)
8000444c:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:515
                        sel = i;
80004450:	fec42783          	lw	a5,-20(s0)
80004454:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:509 (discriminator 2)
    for (i = 0; i < PIPE_SIZE; i++){
80004458:	fec42783          	lw	a5,-20(s0)
8000445c:	00178793          	addi	a5,a5,1
80004460:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:509 (discriminator 1)
80004464:	fec42703          	lw	a4,-20(s0)
80004468:	00300793          	li	a5,3
8000446c:	f2e7fae3          	bleu	a4,a5,800043a0 <API_CheckMessagePipe+0x30>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:521
                    }
                }
            }
        }
    }
    if(sel != ERRO){
80004470:	fe842703          	lw	a4,-24(s0)
80004474:	fff00793          	li	a5,-1
80004478:	02f70063          	beq	a4,a5,80004498 <API_CheckMessagePipe+0x128>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:522
        MessagePipe[sel].status == PIPE_TRANSMITTING;
8000447c:	800207b7          	lui	a5,0x80020
80004480:	fe842683          	lw	a3,-24(s0)
80004484:	24400713          	li	a4,580
80004488:	02e68733          	mul	a4,a3,a4
8000448c:	22078793          	addi	a5,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80004490:	00f707b3          	add	a5,a4,a5
80004494:	0007a783          	lw	a5,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:525
    }
    //printsv("returning sel: ", sel);
    return sel;
80004498:	fe842783          	lw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:526
}
8000449c:	00078513          	mv	a0,a5
800044a0:	02c12403          	lw	s0,44(sp)
800044a4:	03010113          	addi	sp,sp,48
800044a8:	00008067          	ret

800044ac <API_AddPendingReq>:
API_AddPendingReq():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:528

void API_AddPendingReq(unsigned int requester_task_id, unsigned int task_app_id, unsigned int producer_task_id){
800044ac:	fd010113          	addi	sp,sp,-48
800044b0:	02112623          	sw	ra,44(sp)
800044b4:	02812423          	sw	s0,40(sp)
800044b8:	03010413          	addi	s0,sp,48
800044bc:	fca42e23          	sw	a0,-36(s0)
800044c0:	fcb42c23          	sw	a1,-40(s0)
800044c4:	fcc42a23          	sw	a2,-44(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:529
    unsigned int slot = API_GetTaskSlot(producer_task_id, task_app_id);
800044c8:	fd842583          	lw	a1,-40(s0)
800044cc:	fd442503          	lw	a0,-44(s0)
800044d0:	06d010ef          	jal	ra,80005d3c <API_GetTaskSlot>
800044d4:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:530
    TaskList[slot].PendingReq[requester_task_id] = TRUE;
800044d8:	800216b7          	lui	a3,0x80021
800044dc:	fec42703          	lw	a4,-20(s0)
800044e0:	00070793          	mv	a5,a4
800044e4:	00479793          	slli	a5,a5,0x4
800044e8:	40e787b3          	sub	a5,a5,a4
800044ec:	00179793          	slli	a5,a5,0x1
800044f0:	fdc42703          	lw	a4,-36(s0)
800044f4:	00e787b3          	add	a5,a5,a4
800044f8:	00878793          	addi	a5,a5,8
800044fc:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80004500:	00279793          	slli	a5,a5,0x2
80004504:	00f707b3          	add	a5,a4,a5
80004508:	00100713          	li	a4,1
8000450c:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:531
    return;
80004510:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/chronos.c:532
}
80004514:	02c12083          	lw	ra,44(sp)
80004518:	02812403          	lw	s0,40(sp)
8000451c:	03010113          	addi	sp,sp,48
80004520:	00008067          	ret

80004524 <API_RepositoryWakeUp>:
API_RepositoryWakeUp():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:10
#include "packet.h"
#include "services.h"

////////////////////////////////////////////////////////////
// Informs the Repository that the GLOBALMASTER is ready to receive the application info
void API_RepositoryWakeUp(){
80004524:	fe010113          	addi	sp,sp,-32
80004528:	00112e23          	sw	ra,28(sp)
8000452c:	00812c23          	sw	s0,24(sp)
80004530:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:13
    unsigned int mySlot;
    do{
        mySlot = API_GetServiceSlot();
80004534:	509010ef          	jal	ra,8000623c <API_GetServiceSlot>
80004538:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:14
        if(mySlot == PIPE_FULL) vTaskDelay(1);
8000453c:	fec42703          	lw	a4,-20(s0)
80004540:	fdfe07b7          	lui	a5,0xfdfe0
80004544:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
80004548:	00f71663          	bne	a4,a5,80004554 <API_RepositoryWakeUp+0x30>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:14 (discriminator 1)
8000454c:	00100513          	li	a0,1
80004550:	bf5fd0ef          	jal	ra,80002144 <vTaskDelay>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:15
    }while(mySlot == PIPE_FULL);
80004554:	fec42703          	lw	a4,-20(s0)
80004558:	fdfe07b7          	lui	a5,0xfdfe0
8000455c:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
80004560:	fcf70ae3          	beq	a4,a5,80004534 <API_RepositoryWakeUp+0x10>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:18
    //printsv("I got a free service slot!! -> ", mySlot);

    ServicePipe[mySlot].holder = PIPE_SYS_HOLDER;
80004564:	800207b7          	lui	a5,0x80020
80004568:	fec42703          	lw	a4,-20(s0)
8000456c:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80004570:	00070793          	mv	a5,a4
80004574:	00479793          	slli	a5,a5,0x4
80004578:	40e787b3          	sub	a5,a5,a4
8000457c:	00279793          	slli	a5,a5,0x2
80004580:	00f687b3          	add	a5,a3,a5
80004584:	feff0737          	lui	a4,0xfeff0
80004588:	efe70713          	addi	a4,a4,-258 # fefefefe <__stack_top+0x7efae8ce>
8000458c:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:20

    ServicePipe[mySlot].header.header       = makeAddress(0, 0) | PERIPH_SOUTH;
80004590:	00000593          	li	a1,0
80004594:	00000513          	li	a0,0
80004598:	ab0ff0ef          	jal	ra,80003848 <makeAddress>
8000459c:	00050713          	mv	a4,a0
800045a0:	000407b7          	lui	a5,0x40
800045a4:	00f766b3          	or	a3,a4,a5
800045a8:	800207b7          	lui	a5,0x80020
800045ac:	fec42703          	lw	a4,-20(s0)
800045b0:	0bc78613          	addi	a2,a5,188 # 800200bc <__stack_top+0xfffdea8c>
800045b4:	00070793          	mv	a5,a4
800045b8:	00479793          	slli	a5,a5,0x4
800045bc:	40e787b3          	sub	a5,a5,a4
800045c0:	00279793          	slli	a5,a5,0x2
800045c4:	00f607b3          	add	a5,a2,a5
800045c8:	00d7a423          	sw	a3,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:21
    ServicePipe[mySlot].header.payload_size = PKT_SERVICE_SIZE;
800045cc:	800207b7          	lui	a5,0x80020
800045d0:	fec42703          	lw	a4,-20(s0)
800045d4:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
800045d8:	00070793          	mv	a5,a4
800045dc:	00479793          	slli	a5,a5,0x4
800045e0:	40e787b3          	sub	a5,a5,a4
800045e4:	00279793          	slli	a5,a5,0x2
800045e8:	00f687b3          	add	a5,a3,a5
800045ec:	00b00713          	li	a4,11
800045f0:	00e7a623          	sw	a4,12(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:22
    ServicePipe[mySlot].header.service      = REPOSITORY_WAKEUP;
800045f4:	800207b7          	lui	a5,0x80020
800045f8:	fec42703          	lw	a4,-20(s0)
800045fc:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80004600:	00070793          	mv	a5,a4
80004604:	00479793          	slli	a5,a5,0x4
80004608:	40e787b3          	sub	a5,a5,a4
8000460c:	00279793          	slli	a5,a5,0x2
80004610:	00f687b3          	add	a5,a3,a5
80004614:	10000713          	li	a4,256
80004618:	00e7a823          	sw	a4,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:24

    API_PushSendQueue(SERVICE, mySlot);
8000461c:	fec42583          	lw	a1,-20(s0)
80004620:	10100537          	lui	a0,0x10100
80004624:	a64ff0ef          	jal	ra,80003888 <API_PushSendQueue>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:25
    return;    
80004628:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:26
}
8000462c:	01c12083          	lw	ra,28(sp)
80004630:	01812403          	lw	s0,24(sp)
80004634:	02010113          	addi	sp,sp,32
80004638:	00008067          	ret

8000463c <API_AddApplication>:
API_AddApplication():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:30

////////////////////////////////////////////////////////////
// Add one Application in the Execution Queue
void API_AddApplication(unsigned int appID, unsigned int appPeriod, unsigned int appExec, unsigned int appNTasks){
8000463c:	fd010113          	addi	sp,sp,-48
80004640:	02112623          	sw	ra,44(sp)
80004644:	02812423          	sw	s0,40(sp)
80004648:	03010413          	addi	s0,sp,48
8000464c:	fca42e23          	sw	a0,-36(s0)
80004650:	fcb42c23          	sw	a1,-40(s0)
80004654:	fcc42a23          	sw	a2,-44(s0)
80004658:	fcd42823          	sw	a3,-48(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:31
    int slot = API_GetApplicationFreeSlot();
8000465c:	1c4000ef          	jal	ra,80004820 <API_GetApplicationFreeSlot>
80004660:	00050793          	mv	a5,a0
80004664:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:32
    applications[slot].occupied = TRUE;
80004668:	800216b7          	lui	a3,0x80021
8000466c:	fec42703          	lw	a4,-20(s0)
80004670:	00070793          	mv	a5,a4
80004674:	00279793          	slli	a5,a5,0x2
80004678:	00e787b3          	add	a5,a5,a4
8000467c:	00579793          	slli	a5,a5,0x5
80004680:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004684:	00e787b3          	add	a5,a5,a4
80004688:	00100713          	li	a4,1
8000468c:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:33
    applications[slot].appID = appID;
80004690:	800217b7          	lui	a5,0x80021
80004694:	fec42703          	lw	a4,-20(s0)
80004698:	b5878693          	addi	a3,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
8000469c:	00070793          	mv	a5,a4
800046a0:	00279793          	slli	a5,a5,0x2
800046a4:	00e787b3          	add	a5,a5,a4
800046a8:	00579793          	slli	a5,a5,0x5
800046ac:	00f687b3          	add	a5,a3,a5
800046b0:	fdc42703          	lw	a4,-36(s0)
800046b4:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:34
    applications[slot].appPeriod = appPeriod;
800046b8:	800217b7          	lui	a5,0x80021
800046bc:	fec42703          	lw	a4,-20(s0)
800046c0:	b5878693          	addi	a3,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
800046c4:	00070793          	mv	a5,a4
800046c8:	00279793          	slli	a5,a5,0x2
800046cc:	00e787b3          	add	a5,a5,a4
800046d0:	00579793          	slli	a5,a5,0x5
800046d4:	00f687b3          	add	a5,a3,a5
800046d8:	fd842703          	lw	a4,-40(s0)
800046dc:	00e7a423          	sw	a4,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:35
    applications[slot].appExec = appExec;
800046e0:	800217b7          	lui	a5,0x80021
800046e4:	fec42703          	lw	a4,-20(s0)
800046e8:	b5878693          	addi	a3,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
800046ec:	00070793          	mv	a5,a4
800046f0:	00279793          	slli	a5,a5,0x2
800046f4:	00e787b3          	add	a5,a5,a4
800046f8:	00579793          	slli	a5,a5,0x5
800046fc:	00f687b3          	add	a5,a3,a5
80004700:	fd442703          	lw	a4,-44(s0)
80004704:	00e7a623          	sw	a4,12(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:36
    applications[slot].numTasks = appNTasks;
80004708:	800216b7          	lui	a3,0x80021
8000470c:	fec42703          	lw	a4,-20(s0)
80004710:	00070793          	mv	a5,a4
80004714:	00279793          	slli	a5,a5,0x2
80004718:	00e787b3          	add	a5,a5,a4
8000471c:	00579793          	slli	a5,a5,0x5
80004720:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004724:	00e787b3          	add	a5,a5,a4
80004728:	fd042703          	lw	a4,-48(s0)
8000472c:	00e7a823          	sw	a4,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:37
    applications[slot].nextRun = xTaskGetTickCount() + appPeriod;
80004730:	cb1fd0ef          	jal	ra,800023e0 <xTaskGetTickCount>
80004734:	00050713          	mv	a4,a0
80004738:	fd842783          	lw	a5,-40(s0)
8000473c:	00f706b3          	add	a3,a4,a5
80004740:	800217b7          	lui	a5,0x80021
80004744:	fec42703          	lw	a4,-20(s0)
80004748:	b5878613          	addi	a2,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
8000474c:	00070793          	mv	a5,a4
80004750:	00279793          	slli	a5,a5,0x2
80004754:	00e787b3          	add	a5,a5,a4
80004758:	00579793          	slli	a5,a5,0x5
8000475c:	00f607b3          	add	a5,a2,a5
80004760:	08d7a623          	sw	a3,140(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:38
    applications[slot].executed = 0;
80004764:	800216b7          	lui	a3,0x80021
80004768:	fec42703          	lw	a4,-20(s0)
8000476c:	00070793          	mv	a5,a4
80004770:	00279793          	slli	a5,a5,0x2
80004774:	00e787b3          	add	a5,a5,a4
80004778:	00579793          	slli	a5,a5,0x5
8000477c:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004780:	00e787b3          	add	a5,a5,a4
80004784:	0807a823          	sw	zero,144(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:39
    applications[slot].lastStart = -1;
80004788:	800217b7          	lui	a5,0x80021
8000478c:	fec42703          	lw	a4,-20(s0)
80004790:	b5878693          	addi	a3,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004794:	00070793          	mv	a5,a4
80004798:	00279793          	slli	a5,a5,0x2
8000479c:	00e787b3          	add	a5,a5,a4
800047a0:	00579793          	slli	a5,a5,0x5
800047a4:	00f687b3          	add	a5,a3,a5
800047a8:	fff00713          	li	a4,-1
800047ac:	08e7aa23          	sw	a4,148(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:40
    applications[slot].finishedTasks = 0;
800047b0:	800217b7          	lui	a5,0x80021
800047b4:	fec42703          	lw	a4,-20(s0)
800047b8:	b5878693          	addi	a3,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
800047bc:	00070793          	mv	a5,a4
800047c0:	00279793          	slli	a5,a5,0x2
800047c4:	00e787b3          	add	a5,a5,a4
800047c8:	00579793          	slli	a5,a5,0x5
800047cc:	00f687b3          	add	a5,a3,a5
800047d0:	0807ac23          	sw	zero,152(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:41
    applications[slot].lastFinish = 0;
800047d4:	800217b7          	lui	a5,0x80021
800047d8:	fec42703          	lw	a4,-20(s0)
800047dc:	b5878693          	addi	a3,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
800047e0:	00070793          	mv	a5,a4
800047e4:	00279793          	slli	a5,a5,0x2
800047e8:	00e787b3          	add	a5,a5,a4
800047ec:	00579793          	slli	a5,a5,0x5
800047f0:	00f687b3          	add	a5,a3,a5
800047f4:	0807ae23          	sw	zero,156(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:42
    printsv("New application registered - ID: ", appID);
800047f8:	fdc42783          	lw	a5,-36(s0)
800047fc:	00078593          	mv	a1,a5
80004800:	800077b7          	lui	a5,0x80007
80004804:	c3c78513          	addi	a0,a5,-964 # 80006c3c <__stack_top+0xfffc560c>
80004808:	e38fe0ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:43
    return;
8000480c:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:44
}
80004810:	02c12083          	lw	ra,44(sp)
80004814:	02812403          	lw	s0,40(sp)
80004818:	03010113          	addi	sp,sp,48
8000481c:	00008067          	ret

80004820 <API_GetApplicationFreeSlot>:
API_GetApplicationFreeSlot():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:61
}


////////////////////////////////////////////////////////////
// Gets an application slot that is free
unsigned int API_GetApplicationFreeSlot(){
80004820:	fe010113          	addi	sp,sp,-32
80004824:	00812e23          	sw	s0,28(sp)
80004828:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:63
    int i;
    for (i = 0; i < NUM_MAX_APPS; i++){
8000482c:	fe042623          	sw	zero,-20(s0)
80004830:	0400006f          	j	80004870 <API_GetApplicationFreeSlot+0x50>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:64
        if (applications[i].occupied == FALSE){
80004834:	800216b7          	lui	a3,0x80021
80004838:	fec42703          	lw	a4,-20(s0)
8000483c:	00070793          	mv	a5,a4
80004840:	00279793          	slli	a5,a5,0x2
80004844:	00e787b3          	add	a5,a5,a4
80004848:	00579793          	slli	a5,a5,0x5
8000484c:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004850:	00e787b3          	add	a5,a5,a4
80004854:	0007a783          	lw	a5,0(a5)
80004858:	00079663          	bnez	a5,80004864 <API_GetApplicationFreeSlot+0x44>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:65
            return i;
8000485c:	fec42783          	lw	a5,-20(s0)
80004860:	0200006f          	j	80004880 <API_GetApplicationFreeSlot+0x60>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:63 (discriminator 2)
    for (i = 0; i < NUM_MAX_APPS; i++){
80004864:	fec42783          	lw	a5,-20(s0)
80004868:	00178793          	addi	a5,a5,1
8000486c:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:63 (discriminator 1)
80004870:	fec42703          	lw	a4,-20(s0)
80004874:	00b00793          	li	a5,11
80004878:	fae7dee3          	ble	a4,a5,80004834 <API_GetApplicationFreeSlot+0x14>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:68
        }
    }
    return ERRO;
8000487c:	fff00793          	li	a5,-1
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:69
}
80004880:	00078513          	mv	a0,a5
80004884:	01c12403          	lw	s0,28(sp)
80004888:	02010113          	addi	sp,sp,32
8000488c:	00008067          	ret

80004890 <API_ApplicationsReset>:
API_ApplicationsReset():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:73

////////////////////////////////////////////////////////////
// Reset applications vector
void API_ApplicationsReset(){
80004890:	fe010113          	addi	sp,sp,-32
80004894:	00812e23          	sw	s0,28(sp)
80004898:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:75
    int i;
    for (i = 0; i < NUM_MAX_APPS; i++){
8000489c:	fe042623          	sw	zero,-20(s0)
800048a0:	0340006f          	j	800048d4 <API_ApplicationsReset+0x44>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:76 (discriminator 3)
        applications[i].occupied = FALSE;
800048a4:	800216b7          	lui	a3,0x80021
800048a8:	fec42703          	lw	a4,-20(s0)
800048ac:	00070793          	mv	a5,a4
800048b0:	00279793          	slli	a5,a5,0x2
800048b4:	00e787b3          	add	a5,a5,a4
800048b8:	00579793          	slli	a5,a5,0x5
800048bc:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
800048c0:	00e787b3          	add	a5,a5,a4
800048c4:	0007a023          	sw	zero,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:75 (discriminator 3)
    for (i = 0; i < NUM_MAX_APPS; i++){
800048c8:	fec42783          	lw	a5,-20(s0)
800048cc:	00178793          	addi	a5,a5,1
800048d0:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:75 (discriminator 1)
800048d4:	fec42703          	lw	a4,-20(s0)
800048d8:	00b00793          	li	a5,11
800048dc:	fce7d4e3          	ble	a4,a5,800048a4 <API_ApplicationsReset+0x14>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:78
    }
    return;
800048e0:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:79
}
800048e4:	01c12403          	lw	s0,28(sp)
800048e8:	02010113          	addi	sp,sp,32
800048ec:	00008067          	ret

800048f0 <API_TilesReset>:
API_TilesReset():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:83

////////////////////////////////////////////////////////////
// Initialize the Tiles Info
void API_TilesReset(){
800048f0:	fe010113          	addi	sp,sp,-32
800048f4:	00812e23          	sw	s0,28(sp)
800048f8:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:85
    int i, m, n;
    for (m = 0; m < DIM_X; m++){
800048fc:	fe042623          	sw	zero,-20(s0)
80004900:	0fc0006f          	j	800049fc <API_TilesReset+0x10c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:86
        for (n = 0; n < DIM_Y; n++){
80004904:	fe042423          	sw	zero,-24(s0)
80004908:	0dc0006f          	j	800049e4 <API_TilesReset+0xf4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:87 (discriminator 3)
            Tiles[m][n].temperature = 273;
8000490c:	80021637          	lui	a2,0x80021
80004910:	fe842783          	lw	a5,-24(s0)
80004914:	fec42683          	lw	a3,-20(s0)
80004918:	00078713          	mv	a4,a5
8000491c:	00171713          	slli	a4,a4,0x1
80004920:	00f70733          	add	a4,a4,a5
80004924:	00271793          	slli	a5,a4,0x2
80004928:	00078713          	mv	a4,a5
8000492c:	00068793          	mv	a5,a3
80004930:	00379793          	slli	a5,a5,0x3
80004934:	00d787b3          	add	a5,a5,a3
80004938:	00279793          	slli	a5,a5,0x2
8000493c:	00f70733          	add	a4,a4,a5
80004940:	5ac60793          	addi	a5,a2,1452 # 800215ac <__stack_top+0xfffdff7c>
80004944:	00f707b3          	add	a5,a4,a5
80004948:	11100713          	li	a4,273
8000494c:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:88 (discriminator 3)
            Tiles[m][n].frequency = 1000;
80004950:	80021737          	lui	a4,0x80021
80004954:	fe842783          	lw	a5,-24(s0)
80004958:	fec42683          	lw	a3,-20(s0)
8000495c:	5ac70613          	addi	a2,a4,1452 # 800215ac <__stack_top+0xfffdff7c>
80004960:	00078713          	mv	a4,a5
80004964:	00171713          	slli	a4,a4,0x1
80004968:	00f70733          	add	a4,a4,a5
8000496c:	00271793          	slli	a5,a4,0x2
80004970:	00078713          	mv	a4,a5
80004974:	00068793          	mv	a5,a3
80004978:	00379793          	slli	a5,a5,0x3
8000497c:	00d787b3          	add	a5,a5,a3
80004980:	00279793          	slli	a5,a5,0x2
80004984:	00f707b3          	add	a5,a4,a5
80004988:	00f607b3          	add	a5,a2,a5
8000498c:	3e800713          	li	a4,1000
80004990:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:89 (discriminator 3)
            Tiles[m][n].taskSlots = NUM_MAX_TASKS;
80004994:	80021737          	lui	a4,0x80021
80004998:	fe842783          	lw	a5,-24(s0)
8000499c:	fec42683          	lw	a3,-20(s0)
800049a0:	5ac70613          	addi	a2,a4,1452 # 800215ac <__stack_top+0xfffdff7c>
800049a4:	00078713          	mv	a4,a5
800049a8:	00171713          	slli	a4,a4,0x1
800049ac:	00f70733          	add	a4,a4,a5
800049b0:	00271793          	slli	a5,a4,0x2
800049b4:	00078713          	mv	a4,a5
800049b8:	00068793          	mv	a5,a3
800049bc:	00379793          	slli	a5,a5,0x3
800049c0:	00d787b3          	add	a5,a5,a3
800049c4:	00279793          	slli	a5,a5,0x2
800049c8:	00f707b3          	add	a5,a4,a5
800049cc:	00f607b3          	add	a5,a2,a5
800049d0:	00600713          	li	a4,6
800049d4:	00e7a423          	sw	a4,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:86 (discriminator 3)
        for (n = 0; n < DIM_Y; n++){
800049d8:	fe842783          	lw	a5,-24(s0)
800049dc:	00178793          	addi	a5,a5,1
800049e0:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:86 (discriminator 1)
800049e4:	fe842703          	lw	a4,-24(s0)
800049e8:	00200793          	li	a5,2
800049ec:	f2e7d0e3          	ble	a4,a5,8000490c <API_TilesReset+0x1c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:85 (discriminator 2)
    for (m = 0; m < DIM_X; m++){
800049f0:	fec42783          	lw	a5,-20(s0)
800049f4:	00178793          	addi	a5,a5,1
800049f8:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:85 (discriminator 1)
800049fc:	fec42703          	lw	a4,-20(s0)
80004a00:	00200793          	li	a5,2
80004a04:	f0e7d0e3          	ble	a4,a5,80004904 <API_TilesReset+0x14>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:95
            /*for(i = 0; i < NUM_MAX_TASKS; i++){
                Tiles[m][n].AppTask[i] = NONE;
            }*/
        }
    }    
    return;
80004a08:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:96
}
80004a0c:	01c12403          	lw	s0,28(sp)
80004a10:	02010113          	addi	sp,sp,32
80004a14:	00008067          	ret

80004a18 <GeneratePatternMatrix>:
GeneratePatternMatrix():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:99

// Generates the Pattern Matrix for Pattern mapping
void GeneratePatternMatrix(){
80004a18:	fe010113          	addi	sp,sp,-32
80004a1c:	00812e23          	sw	s0,28(sp)
80004a20:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:101
    int i, aux;
    aux = 0;
80004a24:	fe042423          	sw	zero,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:102
    priorityPointer = 0;
80004a28:	800217b7          	lui	a5,0x80021
80004a2c:	5a07a423          	sw	zero,1448(a5) # 800215a8 <__stack_top+0xfffdff78>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:104
    //prints("Testando Pattern: \n");
    for(i=0; i<(DIM_X*DIM_Y); i++){
80004a30:	fe042623          	sw	zero,-20(s0)
80004a34:	0700006f          	j	80004aa4 <GeneratePatternMatrix+0x8c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:106
        //printi(i); prints(": "); printi(aux); prints("\n");
        priorityMatrix[i] = (aux / DIM_X << 8) | aux % DIM_X;
80004a38:	fe842703          	lw	a4,-24(s0)
80004a3c:	00300793          	li	a5,3
80004a40:	02f747b3          	div	a5,a4,a5
80004a44:	00879713          	slli	a4,a5,0x8
80004a48:	fe842683          	lw	a3,-24(s0)
80004a4c:	00300793          	li	a5,3
80004a50:	02f6e7b3          	rem	a5,a3,a5
80004a54:	00f767b3          	or	a5,a4,a5
80004a58:	00078693          	mv	a3,a5
80004a5c:	800217b7          	lui	a5,0x80021
80004a60:	fec42703          	lw	a4,-20(s0)
80004a64:	00271713          	slli	a4,a4,0x2
80004a68:	b3478793          	addi	a5,a5,-1228 # 80020b34 <__stack_top+0xfffdf504>
80004a6c:	00f707b3          	add	a5,a4,a5
80004a70:	00d7a023          	sw	a3,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:125
            else{
                aux = 1;
            }
        } 
        else{
            if(aux<=((DIM_X*DIM_Y)-3))
80004a74:	fe842703          	lw	a4,-24(s0)
80004a78:	00600793          	li	a5,6
80004a7c:	00e7ca63          	blt	a5,a4,80004a90 <GeneratePatternMatrix+0x78>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:126
                aux += 2;
80004a80:	fe842783          	lw	a5,-24(s0)
80004a84:	00278793          	addi	a5,a5,2
80004a88:	fef42423          	sw	a5,-24(s0)
80004a8c:	00c0006f          	j	80004a98 <GeneratePatternMatrix+0x80>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:128
            else
                aux = 1;
80004a90:	00100793          	li	a5,1
80004a94:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:104 (discriminator 2)
    for(i=0; i<(DIM_X*DIM_Y); i++){
80004a98:	fec42783          	lw	a5,-20(s0)
80004a9c:	00178793          	addi	a5,a5,1
80004aa0:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:104 (discriminator 1)
80004aa4:	fec42703          	lw	a4,-20(s0)
80004aa8:	00800793          	li	a5,8
80004aac:	f8e7d6e3          	ble	a4,a5,80004a38 <GeneratePatternMatrix+0x20>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:131
        }    
    }
    return;
80004ab0:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:132
}
80004ab4:	01c12403          	lw	s0,28(sp)
80004ab8:	02010113          	addi	sp,sp,32
80004abc:	00008067          	ret

80004ac0 <API_AllocateTasks>:
API_AllocateTasks():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:135

// Checks if there is some task to allocate...
void API_AllocateTasks(unsigned int tick){
80004ac0:	fd010113          	addi	sp,sp,-48
80004ac4:	02112623          	sw	ra,44(sp)
80004ac8:	02812423          	sw	s0,40(sp)
80004acc:	02912223          	sw	s1,36(sp)
80004ad0:	03010413          	addi	s0,sp,48
80004ad4:	fca42e23          	sw	a0,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:139
    int i, j;
    int addr, slot;
    // Iterate around every possible application
    for (i = 0; i < NUM_MAX_APPS; i++){
80004ad8:	fe042623          	sw	zero,-20(s0)
80004adc:	2980006f          	j	80004d74 <API_AllocateTasks+0x2b4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:141
        // If the application is valid
        if (applications[i].occupied == TRUE){
80004ae0:	800216b7          	lui	a3,0x80021
80004ae4:	fec42703          	lw	a4,-20(s0)
80004ae8:	00070793          	mv	a5,a4
80004aec:	00279793          	slli	a5,a5,0x2
80004af0:	00e787b3          	add	a5,a5,a4
80004af4:	00579793          	slli	a5,a5,0x5
80004af8:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004afc:	00e787b3          	add	a5,a5,a4
80004b00:	0007a703          	lw	a4,0(a5)
80004b04:	00100793          	li	a5,1
80004b08:	26f71063          	bne	a4,a5,80004d68 <API_AllocateTasks+0x2a8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:144

            // If the nextRun of this application is right now, then release each task!
            if(applications[i].nextRun <= tick && applications[i].nextRun != applications[i].lastStart){
80004b0c:	800217b7          	lui	a5,0x80021
80004b10:	fec42703          	lw	a4,-20(s0)
80004b14:	b5878693          	addi	a3,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004b18:	00070793          	mv	a5,a4
80004b1c:	00279793          	slli	a5,a5,0x2
80004b20:	00e787b3          	add	a5,a5,a4
80004b24:	00579793          	slli	a5,a5,0x5
80004b28:	00f687b3          	add	a5,a3,a5
80004b2c:	08c7a783          	lw	a5,140(a5)
80004b30:	fdc42703          	lw	a4,-36(s0)
80004b34:	22f76a63          	bltu	a4,a5,80004d68 <API_AllocateTasks+0x2a8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:144 (discriminator 1)
80004b38:	800217b7          	lui	a5,0x80021
80004b3c:	fec42703          	lw	a4,-20(s0)
80004b40:	b5878693          	addi	a3,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004b44:	00070793          	mv	a5,a4
80004b48:	00279793          	slli	a5,a5,0x2
80004b4c:	00e787b3          	add	a5,a5,a4
80004b50:	00579793          	slli	a5,a5,0x5
80004b54:	00f687b3          	add	a5,a3,a5
80004b58:	08c7a683          	lw	a3,140(a5)
80004b5c:	800217b7          	lui	a5,0x80021
80004b60:	fec42703          	lw	a4,-20(s0)
80004b64:	b5878613          	addi	a2,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004b68:	00070793          	mv	a5,a4
80004b6c:	00279793          	slli	a5,a5,0x2
80004b70:	00e787b3          	add	a5,a5,a4
80004b74:	00579793          	slli	a5,a5,0x5
80004b78:	00f607b3          	add	a5,a2,a5
80004b7c:	0947a783          	lw	a5,148(a5)
80004b80:	1ef68463          	beq	a3,a5,80004d68 <API_AllocateTasks+0x2a8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:147

                // If the system has space to accept every task
                if(applications[i].numTasks <= API_GetSystemTasksSlots()){
80004b84:	800216b7          	lui	a3,0x80021
80004b88:	fec42703          	lw	a4,-20(s0)
80004b8c:	00070793          	mv	a5,a4
80004b90:	00279793          	slli	a5,a5,0x2
80004b94:	00e787b3          	add	a5,a5,a4
80004b98:	00579793          	slli	a5,a5,0x5
80004b9c:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004ba0:	00e787b3          	add	a5,a5,a4
80004ba4:	0107a483          	lw	s1,16(a5)
80004ba8:	798000ef          	jal	ra,80005340 <API_GetSystemTasksSlots>
80004bac:	00050793          	mv	a5,a0
80004bb0:	1a97ec63          	bltu	a5,s1,80004d68 <API_AllocateTasks+0x2a8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:150
                    
                    // Iterates around each task of this application
                    for(j = 0; j < applications[i].numTasks; j++){
80004bb4:	fe042423          	sw	zero,-24(s0)
80004bb8:	13c0006f          	j	80004cf4 <API_AllocateTasks+0x234>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:153

                        for(;;){
                            addr = getNextPriorityAddr();
80004bbc:	4e0000ef          	jal	ra,8000509c <getNextPriorityAddr>
80004bc0:	00050793          	mv	a5,a0
80004bc4:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:154
                            slot = API_GetTaskSlotFromTile(addr, i, j);
80004bc8:	fe442783          	lw	a5,-28(s0)
80004bcc:	fec42703          	lw	a4,-20(s0)
80004bd0:	fe842683          	lw	a3,-24(s0)
80004bd4:	00068613          	mv	a2,a3
80004bd8:	00070593          	mv	a1,a4
80004bdc:	00078513          	mv	a0,a5
80004be0:	4dc000ef          	jal	ra,800050bc <API_GetTaskSlotFromTile>
80004be4:	00050793          	mv	a5,a0
80004be8:	fef42023          	sw	a5,-32(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:155
                            if (slot != ERRO)
80004bec:	fe042703          	lw	a4,-32(s0)
80004bf0:	fff00793          	li	a5,-1
80004bf4:	00f71463          	bne	a4,a5,80004bfc <API_AllocateTasks+0x13c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:153
                            addr = getNextPriorityAddr();
80004bf8:	fc5ff06f          	j	80004bbc <API_AllocateTasks+0xfc>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:156
                                break;
80004bfc:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:158
                        }
                        applications[i].tasks[j].status = TASK_ALLOCATING;
80004c00:	80021737          	lui	a4,0x80021
80004c04:	fe842783          	lw	a5,-24(s0)
80004c08:	fec42683          	lw	a3,-20(s0)
80004c0c:	b5870613          	addi	a2,a4,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004c10:	00078713          	mv	a4,a5
80004c14:	00171713          	slli	a4,a4,0x1
80004c18:	00f70733          	add	a4,a4,a5
80004c1c:	00271793          	slli	a5,a4,0x2
80004c20:	00078713          	mv	a4,a5
80004c24:	00068793          	mv	a5,a3
80004c28:	00279793          	slli	a5,a5,0x2
80004c2c:	00d787b3          	add	a5,a5,a3
80004c30:	00579793          	slli	a5,a5,0x5
80004c34:	00f707b3          	add	a5,a4,a5
80004c38:	00f607b3          	add	a5,a2,a5
80004c3c:	00300713          	li	a4,3
80004c40:	00e7aa23          	sw	a4,20(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:159
                        applications[i].tasks[j].addr = addr;
80004c44:	fe442603          	lw	a2,-28(s0)
80004c48:	80021737          	lui	a4,0x80021
80004c4c:	fe842783          	lw	a5,-24(s0)
80004c50:	fec42683          	lw	a3,-20(s0)
80004c54:	b5870593          	addi	a1,a4,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004c58:	00078713          	mv	a4,a5
80004c5c:	00171713          	slli	a4,a4,0x1
80004c60:	00f70733          	add	a4,a4,a5
80004c64:	00271793          	slli	a5,a4,0x2
80004c68:	00078713          	mv	a4,a5
80004c6c:	00068793          	mv	a5,a3
80004c70:	00279793          	slli	a5,a5,0x2
80004c74:	00d787b3          	add	a5,a5,a3
80004c78:	00579793          	slli	a5,a5,0x5
80004c7c:	00f707b3          	add	a5,a4,a5
80004c80:	00f587b3          	add	a5,a1,a5
80004c84:	00c7ac23          	sw	a2,24(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:160
                        applications[i].tasks[j].slot = slot;
80004c88:	fe042603          	lw	a2,-32(s0)
80004c8c:	80021737          	lui	a4,0x80021
80004c90:	fe842783          	lw	a5,-24(s0)
80004c94:	fec42683          	lw	a3,-20(s0)
80004c98:	b5870593          	addi	a1,a4,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004c9c:	00078713          	mv	a4,a5
80004ca0:	00171713          	slli	a4,a4,0x1
80004ca4:	00f70733          	add	a4,a4,a5
80004ca8:	00271793          	slli	a5,a4,0x2
80004cac:	00078713          	mv	a4,a5
80004cb0:	00068793          	mv	a5,a3
80004cb4:	00279793          	slli	a5,a5,0x2
80004cb8:	00d787b3          	add	a5,a5,a3
80004cbc:	00579793          	slli	a5,a5,0x5
80004cc0:	00f707b3          	add	a5,a4,a5
80004cc4:	00f587b3          	add	a5,a1,a5
80004cc8:	00c7ae23          	sw	a2,28(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:161
                        API_RepositoryAllocation(i, j, addr);
80004ccc:	fec42783          	lw	a5,-20(s0)
80004cd0:	fe842703          	lw	a4,-24(s0)
80004cd4:	fe442683          	lw	a3,-28(s0)
80004cd8:	00068613          	mv	a2,a3
80004cdc:	00070593          	mv	a1,a4
80004ce0:	00078513          	mv	a0,a5
80004ce4:	748000ef          	jal	ra,8000542c <API_RepositoryAllocation>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:150
                    for(j = 0; j < applications[i].numTasks; j++){
80004ce8:	fe842783          	lw	a5,-24(s0)
80004cec:	00178793          	addi	a5,a5,1
80004cf0:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:150 (discriminator 1)
80004cf4:	800216b7          	lui	a3,0x80021
80004cf8:	fec42703          	lw	a4,-20(s0)
80004cfc:	00070793          	mv	a5,a4
80004d00:	00279793          	slli	a5,a5,0x2
80004d04:	00e787b3          	add	a5,a5,a4
80004d08:	00579793          	slli	a5,a5,0x5
80004d0c:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004d10:	00e787b3          	add	a5,a5,a4
80004d14:	0107a703          	lw	a4,16(a5)
80004d18:	fe842783          	lw	a5,-24(s0)
80004d1c:	eae7e0e3          	bltu	a5,a4,80004bbc <API_AllocateTasks+0xfc>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:165
                    }

                    // Resets the lastStart
                    applications[i].lastStart = applications[i].nextRun;
80004d20:	800217b7          	lui	a5,0x80021
80004d24:	fec42703          	lw	a4,-20(s0)
80004d28:	b5878693          	addi	a3,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004d2c:	00070793          	mv	a5,a4
80004d30:	00279793          	slli	a5,a5,0x2
80004d34:	00e787b3          	add	a5,a5,a4
80004d38:	00579793          	slli	a5,a5,0x5
80004d3c:	00f687b3          	add	a5,a3,a5
80004d40:	08c7a683          	lw	a3,140(a5)
80004d44:	800217b7          	lui	a5,0x80021
80004d48:	fec42703          	lw	a4,-20(s0)
80004d4c:	b5878613          	addi	a2,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004d50:	00070793          	mv	a5,a4
80004d54:	00279793          	slli	a5,a5,0x2
80004d58:	00e787b3          	add	a5,a5,a4
80004d5c:	00579793          	slli	a5,a5,0x5
80004d60:	00f607b3          	add	a5,a2,a5
80004d64:	08d7aa23          	sw	a3,148(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:139 (discriminator 2)
    for (i = 0; i < NUM_MAX_APPS; i++){
80004d68:	fec42783          	lw	a5,-20(s0)
80004d6c:	00178793          	addi	a5,a5,1
80004d70:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:139 (discriminator 1)
80004d74:	fec42703          	lw	a4,-20(s0)
80004d78:	00b00793          	li	a5,11
80004d7c:	d6e7d2e3          	ble	a4,a5,80004ae0 <API_AllocateTasks+0x20>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:171
                }
            }
        }
    }

    return;
80004d80:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:172
}
80004d84:	02c12083          	lw	ra,44(sp)
80004d88:	02812403          	lw	s0,40(sp)
80004d8c:	02412483          	lw	s1,36(sp)
80004d90:	03010113          	addi	sp,sp,48
80004d94:	00008067          	ret

80004d98 <API_DealocateTask>:
API_DealocateTask():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:174

void API_DealocateTask(unsigned int task_id, unsigned int app_id){
80004d98:	fd010113          	addi	sp,sp,-48
80004d9c:	02112623          	sw	ra,44(sp)
80004da0:	02812423          	sw	s0,40(sp)
80004da4:	03010413          	addi	s0,sp,48
80004da8:	fca42e23          	sw	a0,-36(s0)
80004dac:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:176
    unsigned int i, flag, tick;
    applications[app_id].tasks[task_id].status = TASK_FINISHED;
80004db0:	80021737          	lui	a4,0x80021
80004db4:	fdc42783          	lw	a5,-36(s0)
80004db8:	fd842683          	lw	a3,-40(s0)
80004dbc:	b5870613          	addi	a2,a4,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004dc0:	00078713          	mv	a4,a5
80004dc4:	00171713          	slli	a4,a4,0x1
80004dc8:	00f70733          	add	a4,a4,a5
80004dcc:	00271793          	slli	a5,a4,0x2
80004dd0:	00078713          	mv	a4,a5
80004dd4:	00068793          	mv	a5,a3
80004dd8:	00279793          	slli	a5,a5,0x2
80004ddc:	00d787b3          	add	a5,a5,a3
80004de0:	00579793          	slli	a5,a5,0x5
80004de4:	00f707b3          	add	a5,a4,a5
80004de8:	00f607b3          	add	a5,a2,a5
80004dec:	00200713          	li	a4,2
80004df0:	00e7aa23          	sw	a4,20(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:178
    // verify if every task has finished
    flag = 1;
80004df4:	00100793          	li	a5,1
80004df8:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:179
    for (i = 0; i < applications[app_id].numTasks; i++){
80004dfc:	fe042623          	sw	zero,-20(s0)
80004e00:	0600006f          	j	80004e60 <API_DealocateTask+0xc8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:181
        //printsvsv("checking ", i, "task is: ", applications[app_id].tasks[i].status);
        if(applications[app_id].tasks[i].status != TASK_FINISHED){
80004e04:	80021737          	lui	a4,0x80021
80004e08:	fec42783          	lw	a5,-20(s0)
80004e0c:	fd842683          	lw	a3,-40(s0)
80004e10:	b5870613          	addi	a2,a4,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004e14:	00078713          	mv	a4,a5
80004e18:	00171713          	slli	a4,a4,0x1
80004e1c:	00f70733          	add	a4,a4,a5
80004e20:	00271793          	slli	a5,a4,0x2
80004e24:	00078713          	mv	a4,a5
80004e28:	00068793          	mv	a5,a3
80004e2c:	00279793          	slli	a5,a5,0x2
80004e30:	00d787b3          	add	a5,a5,a3
80004e34:	00579793          	slli	a5,a5,0x5
80004e38:	00f707b3          	add	a5,a4,a5
80004e3c:	00f607b3          	add	a5,a2,a5
80004e40:	0147a703          	lw	a4,20(a5)
80004e44:	00200793          	li	a5,2
80004e48:	00f70663          	beq	a4,a5,80004e54 <API_DealocateTask+0xbc>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:182
            flag = 0;
80004e4c:	fe042423          	sw	zero,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:183
            break;
80004e50:	03c0006f          	j	80004e8c <API_DealocateTask+0xf4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:179 (discriminator 2)
    for (i = 0; i < applications[app_id].numTasks; i++){
80004e54:	fec42783          	lw	a5,-20(s0)
80004e58:	00178793          	addi	a5,a5,1
80004e5c:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:179 (discriminator 1)
80004e60:	800216b7          	lui	a3,0x80021
80004e64:	fd842703          	lw	a4,-40(s0)
80004e68:	00070793          	mv	a5,a4
80004e6c:	00279793          	slli	a5,a5,0x2
80004e70:	00e787b3          	add	a5,a5,a4
80004e74:	00579793          	slli	a5,a5,0x5
80004e78:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004e7c:	00e787b3          	add	a5,a5,a4
80004e80:	0107a783          	lw	a5,16(a5)
80004e84:	fec42703          	lw	a4,-20(s0)
80004e88:	f6f76ee3          	bltu	a4,a5,80004e04 <API_DealocateTask+0x6c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:187
        }
    }
    // in positive case
    if(flag){
80004e8c:	fe842783          	lw	a5,-24(s0)
80004e90:	1e078c63          	beqz	a5,80005088 <API_DealocateTask+0x2f0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:189
        // register that the application has executed another time
        tick = xTaskGetTickCount();
80004e94:	d4cfd0ef          	jal	ra,800023e0 <xTaskGetTickCount>
80004e98:	fea42223          	sw	a0,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:190
        applications[app_id].executed++;
80004e9c:	800216b7          	lui	a3,0x80021
80004ea0:	fd842703          	lw	a4,-40(s0)
80004ea4:	00070793          	mv	a5,a4
80004ea8:	00279793          	slli	a5,a5,0x2
80004eac:	00e787b3          	add	a5,a5,a4
80004eb0:	00579793          	slli	a5,a5,0x5
80004eb4:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004eb8:	00e787b3          	add	a5,a5,a4
80004ebc:	0907a783          	lw	a5,144(a5)
80004ec0:	00178693          	addi	a3,a5,1
80004ec4:	80021637          	lui	a2,0x80021
80004ec8:	fd842703          	lw	a4,-40(s0)
80004ecc:	00070793          	mv	a5,a4
80004ed0:	00279793          	slli	a5,a5,0x2
80004ed4:	00e787b3          	add	a5,a5,a4
80004ed8:	00579793          	slli	a5,a5,0x5
80004edc:	b5860713          	addi	a4,a2,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004ee0:	00e787b3          	add	a5,a5,a4
80004ee4:	08d7a823          	sw	a3,144(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:191
        printsvsv("Application ", app_id, "was executed in ", (tick - applications[app_id].lastStart));
80004ee8:	fd842583          	lw	a1,-40(s0)
80004eec:	800217b7          	lui	a5,0x80021
80004ef0:	fd842703          	lw	a4,-40(s0)
80004ef4:	b5878693          	addi	a3,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004ef8:	00070793          	mv	a5,a4
80004efc:	00279793          	slli	a5,a5,0x2
80004f00:	00e787b3          	add	a5,a5,a4
80004f04:	00579793          	slli	a5,a5,0x5
80004f08:	00f687b3          	add	a5,a3,a5
80004f0c:	0947a783          	lw	a5,148(a5)
80004f10:	fe442703          	lw	a4,-28(s0)
80004f14:	40f707b3          	sub	a5,a4,a5
80004f18:	00078693          	mv	a3,a5
80004f1c:	800077b7          	lui	a5,0x80007
80004f20:	c6078613          	addi	a2,a5,-928 # 80006c60 <__stack_top+0xfffc5630>
80004f24:	800077b7          	lui	a5,0x80007
80004f28:	c7478513          	addi	a0,a5,-908 # 80006c74 <__stack_top+0xfffc5644>
80004f2c:	f5dfd0ef          	jal	ra,80002e88 <printsvsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:192
        applications[app_id].lastFinish = tick;
80004f30:	800217b7          	lui	a5,0x80021
80004f34:	fd842703          	lw	a4,-40(s0)
80004f38:	b5878693          	addi	a3,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004f3c:	00070793          	mv	a5,a4
80004f40:	00279793          	slli	a5,a5,0x2
80004f44:	00e787b3          	add	a5,a5,a4
80004f48:	00579793          	slli	a5,a5,0x5
80004f4c:	00f687b3          	add	a5,a3,a5
80004f50:	fe442703          	lw	a4,-28(s0)
80004f54:	08e7ae23          	sw	a4,156(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:194
        // if the application must run another time
        if(applications[app_id].appExec > applications[app_id].executed){
80004f58:	800217b7          	lui	a5,0x80021
80004f5c:	fd842703          	lw	a4,-40(s0)
80004f60:	b5878693          	addi	a3,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004f64:	00070793          	mv	a5,a4
80004f68:	00279793          	slli	a5,a5,0x2
80004f6c:	00e787b3          	add	a5,a5,a4
80004f70:	00579793          	slli	a5,a5,0x5
80004f74:	00f687b3          	add	a5,a3,a5
80004f78:	00c7a683          	lw	a3,12(a5)
80004f7c:	80021637          	lui	a2,0x80021
80004f80:	fd842703          	lw	a4,-40(s0)
80004f84:	00070793          	mv	a5,a4
80004f88:	00279793          	slli	a5,a5,0x2
80004f8c:	00e787b3          	add	a5,a5,a4
80004f90:	00579793          	slli	a5,a5,0x5
80004f94:	b5860713          	addi	a4,a2,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004f98:	00e787b3          	add	a5,a5,a4
80004f9c:	0907a783          	lw	a5,144(a5)
80004fa0:	0ad7fa63          	bleu	a3,a5,80005054 <API_DealocateTask+0x2bc>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:195
            printsv("\t\tThis application still need to run: ", (applications[app_id].appExec - applications[app_id].executed));
80004fa4:	800217b7          	lui	a5,0x80021
80004fa8:	fd842703          	lw	a4,-40(s0)
80004fac:	b5878693          	addi	a3,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004fb0:	00070793          	mv	a5,a4
80004fb4:	00279793          	slli	a5,a5,0x2
80004fb8:	00e787b3          	add	a5,a5,a4
80004fbc:	00579793          	slli	a5,a5,0x5
80004fc0:	00f687b3          	add	a5,a3,a5
80004fc4:	00c7a683          	lw	a3,12(a5)
80004fc8:	80021637          	lui	a2,0x80021
80004fcc:	fd842703          	lw	a4,-40(s0)
80004fd0:	00070793          	mv	a5,a4
80004fd4:	00279793          	slli	a5,a5,0x2
80004fd8:	00e787b3          	add	a5,a5,a4
80004fdc:	00579793          	slli	a5,a5,0x5
80004fe0:	b5860713          	addi	a4,a2,-1192 # 80020b58 <__stack_top+0xfffdf528>
80004fe4:	00e787b3          	add	a5,a5,a4
80004fe8:	0907a783          	lw	a5,144(a5)
80004fec:	40f687b3          	sub	a5,a3,a5
80004ff0:	00078593          	mv	a1,a5
80004ff4:	800077b7          	lui	a5,0x80007
80004ff8:	c8478513          	addi	a0,a5,-892 # 80006c84 <__stack_top+0xfffc5654>
80004ffc:	e45fd0ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:196
            applications[app_id].nextRun = tick + applications[app_id].appPeriod;
80005000:	800217b7          	lui	a5,0x80021
80005004:	fd842703          	lw	a4,-40(s0)
80005008:	b5878693          	addi	a3,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
8000500c:	00070793          	mv	a5,a4
80005010:	00279793          	slli	a5,a5,0x2
80005014:	00e787b3          	add	a5,a5,a4
80005018:	00579793          	slli	a5,a5,0x5
8000501c:	00f687b3          	add	a5,a3,a5
80005020:	0087a703          	lw	a4,8(a5)
80005024:	fe442783          	lw	a5,-28(s0)
80005028:	00f706b3          	add	a3,a4,a5
8000502c:	800217b7          	lui	a5,0x80021
80005030:	fd842703          	lw	a4,-40(s0)
80005034:	b5878613          	addi	a2,a5,-1192 # 80020b58 <__stack_top+0xfffdf528>
80005038:	00070793          	mv	a5,a4
8000503c:	00279793          	slli	a5,a5,0x2
80005040:	00e787b3          	add	a5,a5,a4
80005044:	00579793          	slli	a5,a5,0x5
80005048:	00f607b3          	add	a5,a2,a5
8000504c:	08d7a623          	sw	a3,140(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:202
        } else { // if the application has finished its runs
            prints("\t\tThis application is DONE!\n");
            applications[app_id].occupied = FALSE;
        }        
    }
    return;
80005050:	0380006f          	j	80005088 <API_DealocateTask+0x2f0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:198
            prints("\t\tThis application is DONE!\n");
80005054:	800077b7          	lui	a5,0x80007
80005058:	cac78513          	addi	a0,a5,-852 # 80006cac <__stack_top+0xfffc567c>
8000505c:	d39fd0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:199
            applications[app_id].occupied = FALSE;
80005060:	800216b7          	lui	a3,0x80021
80005064:	fd842703          	lw	a4,-40(s0)
80005068:	00070793          	mv	a5,a4
8000506c:	00279793          	slli	a5,a5,0x2
80005070:	00e787b3          	add	a5,a5,a4
80005074:	00579793          	slli	a5,a5,0x5
80005078:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
8000507c:	00e787b3          	add	a5,a5,a4
80005080:	0007a023          	sw	zero,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:202
    return;
80005084:	00000013          	nop
80005088:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:203
}
8000508c:	02c12083          	lw	ra,44(sp)
80005090:	02812403          	lw	s0,40(sp)
80005094:	03010113          	addi	sp,sp,48
80005098:	00008067          	ret

8000509c <getNextPriorityAddr>:
getNextPriorityAddr():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:206

// Gets the address of the next tile in the priority list 
unsigned int getNextPriorityAddr(){
8000509c:	ff010113          	addi	sp,sp,-16
800050a0:	00812623          	sw	s0,12(sp)
800050a4:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:228
        // If we found a new valid address, return
        if( addr != makeAddress(0,0))
            break;
    }
    return addr;*/
    return 0x101;
800050a8:	10100793          	li	a5,257
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:229
}
800050ac:	00078513          	mv	a0,a5
800050b0:	00c12403          	lw	s0,12(sp)
800050b4:	01010113          	addi	sp,sp,16
800050b8:	00008067          	ret

800050bc <API_GetTaskSlotFromTile>:
API_GetTaskSlotFromTile():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:232

// Gets a free slot from one given tile
unsigned int API_GetTaskSlotFromTile(unsigned int addr, unsigned int app, unsigned int task){
800050bc:	fe010113          	addi	sp,sp,-32
800050c0:	00112e23          	sw	ra,28(sp)
800050c4:	00812c23          	sw	s0,24(sp)
800050c8:	00912a23          	sw	s1,20(sp)
800050cc:	01212823          	sw	s2,16(sp)
800050d0:	02010413          	addi	s0,sp,32
800050d4:	fea42623          	sw	a0,-20(s0)
800050d8:	feb42423          	sw	a1,-24(s0)
800050dc:	fec42223          	sw	a2,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:242
            printsv("\t achei!! > ", i);
            Tiles[getXpos(addr)][getYpos(addr)].AppTask[i] = (app << 16) | task;
            return i;
        }
    }*/
    if(Tiles[getXpos(addr)][getYpos(addr)].taskSlots > 0){
800050e0:	fec42503          	lw	a0,-20(s0)
800050e4:	e05fd0ef          	jal	ra,80002ee8 <getXpos>
800050e8:	00050493          	mv	s1,a0
800050ec:	fec42503          	lw	a0,-20(s0)
800050f0:	e25fd0ef          	jal	ra,80002f14 <getYpos>
800050f4:	00050613          	mv	a2,a0
800050f8:	800217b7          	lui	a5,0x80021
800050fc:	5ac78693          	addi	a3,a5,1452 # 800215ac <__stack_top+0xfffdff7c>
80005100:	00060713          	mv	a4,a2
80005104:	00171793          	slli	a5,a4,0x1
80005108:	00078713          	mv	a4,a5
8000510c:	00c70733          	add	a4,a4,a2
80005110:	00271793          	slli	a5,a4,0x2
80005114:	00078713          	mv	a4,a5
80005118:	00048793          	mv	a5,s1
8000511c:	00379793          	slli	a5,a5,0x3
80005120:	009787b3          	add	a5,a5,s1
80005124:	00279793          	slli	a5,a5,0x2
80005128:	00f707b3          	add	a5,a4,a5
8000512c:	00f687b3          	add	a5,a3,a5
80005130:	0087a783          	lw	a5,8(a5)
80005134:	0a078c63          	beqz	a5,800051ec <API_GetTaskSlotFromTile+0x130>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:243
        Tiles[getXpos(addr)][getYpos(addr)].taskSlots = Tiles[getXpos(addr)][getYpos(addr)].taskSlots - 1;
80005138:	fec42503          	lw	a0,-20(s0)
8000513c:	dadfd0ef          	jal	ra,80002ee8 <getXpos>
80005140:	00050493          	mv	s1,a0
80005144:	fec42503          	lw	a0,-20(s0)
80005148:	dcdfd0ef          	jal	ra,80002f14 <getYpos>
8000514c:	00050613          	mv	a2,a0
80005150:	800217b7          	lui	a5,0x80021
80005154:	5ac78693          	addi	a3,a5,1452 # 800215ac <__stack_top+0xfffdff7c>
80005158:	00060713          	mv	a4,a2
8000515c:	00171793          	slli	a5,a4,0x1
80005160:	00078713          	mv	a4,a5
80005164:	00c70733          	add	a4,a4,a2
80005168:	00271793          	slli	a5,a4,0x2
8000516c:	00078713          	mv	a4,a5
80005170:	00048793          	mv	a5,s1
80005174:	00379793          	slli	a5,a5,0x3
80005178:	009787b3          	add	a5,a5,s1
8000517c:	00279793          	slli	a5,a5,0x2
80005180:	00f707b3          	add	a5,a4,a5
80005184:	00f687b3          	add	a5,a3,a5
80005188:	0087a483          	lw	s1,8(a5)
8000518c:	fec42503          	lw	a0,-20(s0)
80005190:	d59fd0ef          	jal	ra,80002ee8 <getXpos>
80005194:	00050913          	mv	s2,a0
80005198:	fec42503          	lw	a0,-20(s0)
8000519c:	d79fd0ef          	jal	ra,80002f14 <getYpos>
800051a0:	00050593          	mv	a1,a0
800051a4:	fff48693          	addi	a3,s1,-1
800051a8:	800217b7          	lui	a5,0x80021
800051ac:	5ac78613          	addi	a2,a5,1452 # 800215ac <__stack_top+0xfffdff7c>
800051b0:	00058713          	mv	a4,a1
800051b4:	00171793          	slli	a5,a4,0x1
800051b8:	00078713          	mv	a4,a5
800051bc:	00b70733          	add	a4,a4,a1
800051c0:	00271793          	slli	a5,a4,0x2
800051c4:	00078713          	mv	a4,a5
800051c8:	00090793          	mv	a5,s2
800051cc:	00379793          	slli	a5,a5,0x3
800051d0:	012787b3          	add	a5,a5,s2
800051d4:	00279793          	slli	a5,a5,0x2
800051d8:	00f707b3          	add	a5,a4,a5
800051dc:	00f607b3          	add	a5,a2,a5
800051e0:	00d7a423          	sw	a3,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:244
        return 1;
800051e4:	00100793          	li	a5,1
800051e8:	0080006f          	j	800051f0 <API_GetTaskSlotFromTile+0x134>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:246
    }else {
        return ERRO;
800051ec:	fff00793          	li	a5,-1
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:248
    }
}
800051f0:	00078513          	mv	a0,a5
800051f4:	01c12083          	lw	ra,28(sp)
800051f8:	01812403          	lw	s0,24(sp)
800051fc:	01412483          	lw	s1,20(sp)
80005200:	01012903          	lw	s2,16(sp)
80005204:	02010113          	addi	sp,sp,32
80005208:	00008067          	ret

8000520c <API_ClearTaskSlotFromTile>:
API_ClearTaskSlotFromTile():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:251

// Clear a slot occupied by a given task
unsigned int API_ClearTaskSlotFromTile(unsigned int addr, unsigned int app, unsigned int task){
8000520c:	fe010113          	addi	sp,sp,-32
80005210:	00112e23          	sw	ra,28(sp)
80005214:	00812c23          	sw	s0,24(sp)
80005218:	00912a23          	sw	s1,20(sp)
8000521c:	02010413          	addi	s0,sp,32
80005220:	fea42623          	sw	a0,-20(s0)
80005224:	feb42423          	sw	a1,-24(s0)
80005228:	fec42223          	sw	a2,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:252
    Tiles[getXpos(addr)][getYpos(addr)].taskSlots++;
8000522c:	fec42503          	lw	a0,-20(s0)
80005230:	cb9fd0ef          	jal	ra,80002ee8 <getXpos>
80005234:	00050493          	mv	s1,a0
80005238:	fec42503          	lw	a0,-20(s0)
8000523c:	cd9fd0ef          	jal	ra,80002f14 <getYpos>
80005240:	00050693          	mv	a3,a0
80005244:	800217b7          	lui	a5,0x80021
80005248:	5ac78613          	addi	a2,a5,1452 # 800215ac <__stack_top+0xfffdff7c>
8000524c:	00068713          	mv	a4,a3
80005250:	00171793          	slli	a5,a4,0x1
80005254:	00078713          	mv	a4,a5
80005258:	00d70733          	add	a4,a4,a3
8000525c:	00271793          	slli	a5,a4,0x2
80005260:	00078713          	mv	a4,a5
80005264:	00048793          	mv	a5,s1
80005268:	00379793          	slli	a5,a5,0x3
8000526c:	009787b3          	add	a5,a5,s1
80005270:	00279793          	slli	a5,a5,0x2
80005274:	00f707b3          	add	a5,a4,a5
80005278:	00f607b3          	add	a5,a2,a5
8000527c:	0087a783          	lw	a5,8(a5)
80005280:	00178613          	addi	a2,a5,1
80005284:	800217b7          	lui	a5,0x80021
80005288:	5ac78593          	addi	a1,a5,1452 # 800215ac <__stack_top+0xfffdff7c>
8000528c:	00068713          	mv	a4,a3
80005290:	00171793          	slli	a5,a4,0x1
80005294:	00078713          	mv	a4,a5
80005298:	00d70733          	add	a4,a4,a3
8000529c:	00271793          	slli	a5,a4,0x2
800052a0:	00078713          	mv	a4,a5
800052a4:	00048793          	mv	a5,s1
800052a8:	00379793          	slli	a5,a5,0x3
800052ac:	009787b3          	add	a5,a5,s1
800052b0:	00279793          	slli	a5,a5,0x2
800052b4:	00f707b3          	add	a5,a4,a5
800052b8:	00f587b3          	add	a5,a1,a5
800052bc:	00c7a423          	sw	a2,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:253
    if(Tiles[getXpos(addr)][getYpos(addr)].taskSlots >= NUM_MAX_TASKS){
800052c0:	fec42503          	lw	a0,-20(s0)
800052c4:	c25fd0ef          	jal	ra,80002ee8 <getXpos>
800052c8:	00050493          	mv	s1,a0
800052cc:	fec42503          	lw	a0,-20(s0)
800052d0:	c45fd0ef          	jal	ra,80002f14 <getYpos>
800052d4:	00050613          	mv	a2,a0
800052d8:	800217b7          	lui	a5,0x80021
800052dc:	5ac78693          	addi	a3,a5,1452 # 800215ac <__stack_top+0xfffdff7c>
800052e0:	00060713          	mv	a4,a2
800052e4:	00171793          	slli	a5,a4,0x1
800052e8:	00078713          	mv	a4,a5
800052ec:	00c70733          	add	a4,a4,a2
800052f0:	00271793          	slli	a5,a4,0x2
800052f4:	00078713          	mv	a4,a5
800052f8:	00048793          	mv	a5,s1
800052fc:	00379793          	slli	a5,a5,0x3
80005300:	009787b3          	add	a5,a5,s1
80005304:	00279793          	slli	a5,a5,0x2
80005308:	00f707b3          	add	a5,a4,a5
8000530c:	00f687b3          	add	a5,a3,a5
80005310:	0087a703          	lw	a4,8(a5)
80005314:	00500793          	li	a5,5
80005318:	00e7f663          	bleu	a4,a5,80005324 <API_ClearTaskSlotFromTile+0x118>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:254
        return ERRO;
8000531c:	fff00793          	li	a5,-1
80005320:	0080006f          	j	80005328 <API_ClearTaskSlotFromTile+0x11c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:257
    }
    else{
        return 1;
80005324:	00100793          	li	a5,1
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:268
            Tiles[getXpos(addr)][getYpos(addr)].AppTask[i] = NONE;
            return 1;
        }
    }*/
    return ERRO;
}
80005328:	00078513          	mv	a0,a5
8000532c:	01c12083          	lw	ra,28(sp)
80005330:	01812403          	lw	s0,24(sp)
80005334:	01412483          	lw	s1,20(sp)
80005338:	02010113          	addi	sp,sp,32
8000533c:	00008067          	ret

80005340 <API_GetSystemTasksSlots>:
API_GetSystemTasksSlots():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:271

// Iterates around the system tiles to sum the amount of tasks slots available
unsigned int API_GetSystemTasksSlots(){
80005340:	fe010113          	addi	sp,sp,-32
80005344:	00112e23          	sw	ra,28(sp)
80005348:	00812c23          	sw	s0,24(sp)
8000534c:	00912a23          	sw	s1,20(sp)
80005350:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:273
    int m, n, i, sum;
    sum = 0;
80005354:	fe042223          	sw	zero,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:274
    for(m = 0; m < DIM_X; m++){
80005358:	fe042623          	sw	zero,-20(s0)
8000535c:	0a80006f          	j	80005404 <API_GetSystemTasksSlots+0xc4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:275
        for(n = 0; n < DIM_Y; n++){
80005360:	fe042423          	sw	zero,-24(s0)
80005364:	0880006f          	j	800053ec <API_GetSystemTasksSlots+0xac>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:276
            if(makeAddress(m,n) != makeAddress(0,0)){
80005368:	fec42783          	lw	a5,-20(s0)
8000536c:	fe842703          	lw	a4,-24(s0)
80005370:	00070593          	mv	a1,a4
80005374:	00078513          	mv	a0,a5
80005378:	cd0fe0ef          	jal	ra,80003848 <makeAddress>
8000537c:	00050493          	mv	s1,a0
80005380:	00000593          	li	a1,0
80005384:	00000513          	li	a0,0
80005388:	cc0fe0ef          	jal	ra,80003848 <makeAddress>
8000538c:	00050793          	mv	a5,a0
80005390:	04f48863          	beq	s1,a5,800053e0 <API_GetSystemTasksSlots+0xa0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:277
                sum += Tiles[m][n].taskSlots;
80005394:	80021737          	lui	a4,0x80021
80005398:	fe842783          	lw	a5,-24(s0)
8000539c:	fec42683          	lw	a3,-20(s0)
800053a0:	5ac70613          	addi	a2,a4,1452 # 800215ac <__stack_top+0xfffdff7c>
800053a4:	00078713          	mv	a4,a5
800053a8:	00171713          	slli	a4,a4,0x1
800053ac:	00f70733          	add	a4,a4,a5
800053b0:	00271793          	slli	a5,a4,0x2
800053b4:	00078713          	mv	a4,a5
800053b8:	00068793          	mv	a5,a3
800053bc:	00379793          	slli	a5,a5,0x3
800053c0:	00d787b3          	add	a5,a5,a3
800053c4:	00279793          	slli	a5,a5,0x2
800053c8:	00f707b3          	add	a5,a4,a5
800053cc:	00f607b3          	add	a5,a2,a5
800053d0:	0087a703          	lw	a4,8(a5)
800053d4:	fe442783          	lw	a5,-28(s0)
800053d8:	00f707b3          	add	a5,a4,a5
800053dc:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:275 (discriminator 2)
        for(n = 0; n < DIM_Y; n++){
800053e0:	fe842783          	lw	a5,-24(s0)
800053e4:	00178793          	addi	a5,a5,1
800053e8:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:275 (discriminator 1)
800053ec:	fe842703          	lw	a4,-24(s0)
800053f0:	00200793          	li	a5,2
800053f4:	f6e7dae3          	ble	a4,a5,80005368 <API_GetSystemTasksSlots+0x28>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:274 (discriminator 2)
    for(m = 0; m < DIM_X; m++){
800053f8:	fec42783          	lw	a5,-20(s0)
800053fc:	00178793          	addi	a5,a5,1
80005400:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:274 (discriminator 1)
80005404:	fec42703          	lw	a4,-20(s0)
80005408:	00200793          	li	a5,2
8000540c:	f4e7dae3          	ble	a4,a5,80005360 <API_GetSystemTasksSlots+0x20>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:286
                    }
                }*/
            }
        }
    }
    return sum;
80005410:	fe442783          	lw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:287
}
80005414:	00078513          	mv	a0,a5
80005418:	01c12083          	lw	ra,28(sp)
8000541c:	01812403          	lw	s0,24(sp)
80005420:	01412483          	lw	s1,20(sp)
80005424:	02010113          	addi	sp,sp,32
80005428:	00008067          	ret

8000542c <API_RepositoryAllocation>:
API_RepositoryAllocation():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:289

void API_RepositoryAllocation(unsigned int app, unsigned int task, unsigned int dest_addr){
8000542c:	fd010113          	addi	sp,sp,-48
80005430:	02112623          	sw	ra,44(sp)
80005434:	02812423          	sw	s0,40(sp)
80005438:	03010413          	addi	s0,sp,48
8000543c:	fca42e23          	sw	a0,-36(s0)
80005440:	fcb42c23          	sw	a1,-40(s0)
80005444:	fcc42a23          	sw	a2,-44(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:292
    unsigned int mySlot;
    do{
        mySlot = API_GetServiceSlot();
80005448:	5f5000ef          	jal	ra,8000623c <API_GetServiceSlot>
8000544c:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:293
        if(mySlot == PIPE_FULL){ 
80005450:	fec42703          	lw	a4,-20(s0)
80005454:	fdfe07b7          	lui	a5,0xfdfe0
80005458:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
8000545c:	00f71663          	bne	a4,a5,80005468 <API_RepositoryAllocation+0x3c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:294
            vTaskDelay(1);
80005460:	00100513          	li	a0,1
80005464:	ce1fc0ef          	jal	ra,80002144 <vTaskDelay>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:297
            //prints("esperando slot\n");
        }
    }while(mySlot == PIPE_FULL);
80005468:	fec42703          	lw	a4,-20(s0)
8000546c:	fdfe07b7          	lui	a5,0xfdfe0
80005470:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
80005474:	fcf70ae3          	beq	a4,a5,80005448 <API_RepositoryAllocation+0x1c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:298
    printsv("I got a free service slot!! -> ", mySlot);
80005478:	fec42783          	lw	a5,-20(s0)
8000547c:	00078593          	mv	a1,a5
80005480:	800077b7          	lui	a5,0x80007
80005484:	ccc78513          	addi	a0,a5,-820 # 80006ccc <__stack_top+0xfffc569c>
80005488:	9b9fd0ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:300

    ServicePipe[mySlot].holder = PIPE_SYS_HOLDER;
8000548c:	800207b7          	lui	a5,0x80020
80005490:	fec42703          	lw	a4,-20(s0)
80005494:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80005498:	00070793          	mv	a5,a4
8000549c:	00479793          	slli	a5,a5,0x4
800054a0:	40e787b3          	sub	a5,a5,a4
800054a4:	00279793          	slli	a5,a5,0x2
800054a8:	00f687b3          	add	a5,a3,a5
800054ac:	feff0737          	lui	a4,0xfeff0
800054b0:	efe70713          	addi	a4,a4,-258 # fefefefe <__stack_top+0x7efae8ce>
800054b4:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:302

    ServicePipe[mySlot].header.header           = makeAddress(0, 0) | PERIPH_SOUTH;
800054b8:	00000593          	li	a1,0
800054bc:	00000513          	li	a0,0
800054c0:	b88fe0ef          	jal	ra,80003848 <makeAddress>
800054c4:	00050713          	mv	a4,a0
800054c8:	000407b7          	lui	a5,0x40
800054cc:	00f766b3          	or	a3,a4,a5
800054d0:	800207b7          	lui	a5,0x80020
800054d4:	fec42703          	lw	a4,-20(s0)
800054d8:	0bc78613          	addi	a2,a5,188 # 800200bc <__stack_top+0xfffdea8c>
800054dc:	00070793          	mv	a5,a4
800054e0:	00479793          	slli	a5,a5,0x4
800054e4:	40e787b3          	sub	a5,a5,a4
800054e8:	00279793          	slli	a5,a5,0x2
800054ec:	00f607b3          	add	a5,a2,a5
800054f0:	00d7a423          	sw	a3,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:303
    ServicePipe[mySlot].header.payload_size     = PKT_SERVICE_SIZE;
800054f4:	800207b7          	lui	a5,0x80020
800054f8:	fec42703          	lw	a4,-20(s0)
800054fc:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80005500:	00070793          	mv	a5,a4
80005504:	00479793          	slli	a5,a5,0x4
80005508:	40e787b3          	sub	a5,a5,a4
8000550c:	00279793          	slli	a5,a5,0x2
80005510:	00f687b3          	add	a5,a3,a5
80005514:	00b00713          	li	a4,11
80005518:	00e7a623          	sw	a4,12(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:304
    ServicePipe[mySlot].header.service          = TASK_ALLOCATION_SEND;
8000551c:	800207b7          	lui	a5,0x80020
80005520:	fec42703          	lw	a4,-20(s0)
80005524:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80005528:	00070793          	mv	a5,a4
8000552c:	00479793          	slli	a5,a5,0x4
80005530:	40e787b3          	sub	a5,a5,a4
80005534:	00279793          	slli	a5,a5,0x2
80005538:	00f687b3          	add	a5,a3,a5
8000553c:	03000713          	li	a4,48
80005540:	00e7a823          	sw	a4,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:305
    ServicePipe[mySlot].header.task_id          = task;
80005544:	800207b7          	lui	a5,0x80020
80005548:	fec42703          	lw	a4,-20(s0)
8000554c:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80005550:	00070793          	mv	a5,a4
80005554:	00479793          	slli	a5,a5,0x4
80005558:	40e787b3          	sub	a5,a5,a4
8000555c:	00279793          	slli	a5,a5,0x2
80005560:	00f687b3          	add	a5,a3,a5
80005564:	fd842703          	lw	a4,-40(s0)
80005568:	00e7aa23          	sw	a4,20(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:306
    ServicePipe[mySlot].header.task_app_id      = app;
8000556c:	800207b7          	lui	a5,0x80020
80005570:	fec42703          	lw	a4,-20(s0)
80005574:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
80005578:	00070793          	mv	a5,a4
8000557c:	00479793          	slli	a5,a5,0x4
80005580:	40e787b3          	sub	a5,a5,a4
80005584:	00279793          	slli	a5,a5,0x2
80005588:	00f687b3          	add	a5,a3,a5
8000558c:	fdc42703          	lw	a4,-36(s0)
80005590:	02e7a223          	sw	a4,36(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:307
    ServicePipe[mySlot].header.task_dest_addr   = dest_addr;
80005594:	800207b7          	lui	a5,0x80020
80005598:	fec42703          	lw	a4,-20(s0)
8000559c:	0bc78693          	addi	a3,a5,188 # 800200bc <__stack_top+0xfffdea8c>
800055a0:	00070793          	mv	a5,a4
800055a4:	00479793          	slli	a5,a5,0x4
800055a8:	40e787b3          	sub	a5,a5,a4
800055ac:	00279793          	slli	a5,a5,0x2
800055b0:	00f687b3          	add	a5,a3,a5
800055b4:	fd442703          	lw	a4,-44(s0)
800055b8:	02e7ac23          	sw	a4,56(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:309

    API_PushSendQueue(SERVICE, mySlot);
800055bc:	fec42583          	lw	a1,-20(s0)
800055c0:	10100537          	lui	a0,0x10100
800055c4:	ac4fe0ef          	jal	ra,80003888 <API_PushSendQueue>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:310
    return;    
800055c8:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:311
}
800055cc:	02c12083          	lw	ra,44(sp)
800055d0:	02812403          	lw	s0,40(sp)
800055d4:	03010113          	addi	sp,sp,48
800055d8:	00008067          	ret

800055dc <API_TaskAllocated>:
API_TaskAllocated():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:313

void API_TaskAllocated(unsigned int task_id, unsigned int app_id){
800055dc:	fd010113          	addi	sp,sp,-48
800055e0:	02112623          	sw	ra,44(sp)
800055e4:	02812423          	sw	s0,40(sp)
800055e8:	03010413          	addi	s0,sp,48
800055ec:	fca42e23          	sw	a0,-36(s0)
800055f0:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:315
    unsigned int i;
    applications[app_id].tasks[task_id].status = TASK_ALLOCATED;
800055f4:	80021737          	lui	a4,0x80021
800055f8:	fdc42783          	lw	a5,-36(s0)
800055fc:	fd842683          	lw	a3,-40(s0)
80005600:	b5870613          	addi	a2,a4,-1192 # 80020b58 <__stack_top+0xfffdf528>
80005604:	00078713          	mv	a4,a5
80005608:	00171713          	slli	a4,a4,0x1
8000560c:	00f70733          	add	a4,a4,a5
80005610:	00271793          	slli	a5,a4,0x2
80005614:	00078713          	mv	a4,a5
80005618:	00068793          	mv	a5,a3
8000561c:	00279793          	slli	a5,a5,0x2
80005620:	00d787b3          	add	a5,a5,a3
80005624:	00579793          	slli	a5,a5,0x5
80005628:	00f707b3          	add	a5,a4,a5
8000562c:	00f607b3          	add	a5,a2,a5
80005630:	00400713          	li	a4,4
80005634:	00e7aa23          	sw	a4,20(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:317

    for(i = 0; i < applications[app_id].numTasks; i++){
80005638:	fe042623          	sw	zero,-20(s0)
8000563c:	0580006f          	j	80005694 <API_TaskAllocated+0xb8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:318
        if(applications[app_id].tasks[i].status != TASK_ALLOCATED){
80005640:	80021737          	lui	a4,0x80021
80005644:	fec42783          	lw	a5,-20(s0)
80005648:	fd842683          	lw	a3,-40(s0)
8000564c:	b5870613          	addi	a2,a4,-1192 # 80020b58 <__stack_top+0xfffdf528>
80005650:	00078713          	mv	a4,a5
80005654:	00171713          	slli	a4,a4,0x1
80005658:	00f70733          	add	a4,a4,a5
8000565c:	00271793          	slli	a5,a4,0x2
80005660:	00078713          	mv	a4,a5
80005664:	00068793          	mv	a5,a3
80005668:	00279793          	slli	a5,a5,0x2
8000566c:	00d787b3          	add	a5,a5,a3
80005670:	00579793          	slli	a5,a5,0x5
80005674:	00f707b3          	add	a5,a4,a5
80005678:	00f607b3          	add	a5,a2,a5
8000567c:	0147a703          	lw	a4,20(a5)
80005680:	00400793          	li	a5,4
80005684:	06f71663          	bne	a4,a5,800056f0 <API_TaskAllocated+0x114>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:317 (discriminator 2)
    for(i = 0; i < applications[app_id].numTasks; i++){
80005688:	fec42783          	lw	a5,-20(s0)
8000568c:	00178793          	addi	a5,a5,1
80005690:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:317 (discriminator 1)
80005694:	800216b7          	lui	a3,0x80021
80005698:	fd842703          	lw	a4,-40(s0)
8000569c:	00070793          	mv	a5,a4
800056a0:	00279793          	slli	a5,a5,0x2
800056a4:	00e787b3          	add	a5,a5,a4
800056a8:	00579793          	slli	a5,a5,0x5
800056ac:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
800056b0:	00e787b3          	add	a5,a5,a4
800056b4:	0107a783          	lw	a5,16(a5)
800056b8:	fec42703          	lw	a4,-20(s0)
800056bc:	f8f762e3          	bltu	a4,a5,80005640 <API_TaskAllocated+0x64>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:322
            return;
        }
    }
    printsv("Application allocated: ", app_id);
800056c0:	fd842783          	lw	a5,-40(s0)
800056c4:	00078593          	mv	a1,a5
800056c8:	800077b7          	lui	a5,0x80007
800056cc:	cec78513          	addi	a0,a5,-788 # 80006cec <__stack_top+0xfffc56bc>
800056d0:	f70fd0ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:323
    API_ApplicationStart(app_id);
800056d4:	fd842503          	lw	a0,-40(s0)
800056d8:	02c000ef          	jal	ra,80005704 <API_ApplicationStart>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:324
    prints("\tStart command sent to every task.\n");
800056dc:	800077b7          	lui	a5,0x80007
800056e0:	d0478513          	addi	a0,a5,-764 # 80006d04 <__stack_top+0xfffc56d4>
800056e4:	eb0fd0ef          	jal	ra,80002d94 <prints>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:325
    return;
800056e8:	00000013          	nop
800056ec:	0080006f          	j	800056f4 <API_TaskAllocated+0x118>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:319
            return;
800056f0:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:326
}
800056f4:	02c12083          	lw	ra,44(sp)
800056f8:	02812403          	lw	s0,40(sp)
800056fc:	03010113          	addi	sp,sp,48
80005700:	00008067          	ret

80005704 <API_ApplicationStart>:
API_ApplicationStart():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:328

void API_ApplicationStart(unsigned int app_id){
80005704:	fd010113          	addi	sp,sp,-48
80005708:	02112623          	sw	ra,44(sp)
8000570c:	02812423          	sw	s0,40(sp)
80005710:	03010413          	addi	s0,sp,48
80005714:	fca42e23          	sw	a0,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:331
    unsigned int i, j;
    unsigned int mySlot;
    for(i = 0; i < applications[app_id].numTasks; i++){
80005718:	fe042623          	sw	zero,-20(s0)
8000571c:	2740006f          	j	80005990 <API_ApplicationStart+0x28c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:333
        do{
            vPortEnterCritical();
80005720:	e95fb0ef          	jal	ra,800015b4 <vPortEnterCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:334
            mySlot = API_GetMessageSlot();
80005724:	1cd000ef          	jal	ra,800060f0 <API_GetMessageSlot>
80005728:	fea42223          	sw	a0,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:335
            if(mySlot == PIPE_FULL){ 
8000572c:	fe442703          	lw	a4,-28(s0)
80005730:	fdfe07b7          	lui	a5,0xfdfe0
80005734:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
80005738:	00f71863          	bne	a4,a5,80005748 <API_ApplicationStart+0x44>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:336
                vPortExitCritical();
8000573c:	eadfb0ef          	jal	ra,800015e8 <vPortExitCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:337
                vTaskDelay(1);
80005740:	00100513          	li	a0,1
80005744:	a01fc0ef          	jal	ra,80002144 <vTaskDelay>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:339
            }
        }while(mySlot == PIPE_FULL);
80005748:	fe442703          	lw	a4,-28(s0)
8000574c:	fdfe07b7          	lui	a5,0xfdfe0
80005750:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
80005754:	fcf706e3          	beq	a4,a5,80005720 <API_ApplicationStart+0x1c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:341

        MessagePipe[mySlot].holder = PIPE_SYS_HOLDER;
80005758:	800207b7          	lui	a5,0x80020
8000575c:	fe442683          	lw	a3,-28(s0)
80005760:	22078713          	addi	a4,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80005764:	24400793          	li	a5,580
80005768:	02f687b3          	mul	a5,a3,a5
8000576c:	00f707b3          	add	a5,a4,a5
80005770:	feff0737          	lui	a4,0xfeff0
80005774:	efe70713          	addi	a4,a4,-258 # fefefefe <__stack_top+0x7efae8ce>
80005778:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:343

        MessagePipe[mySlot].header.header           = applications[app_id].tasks[i].addr;
8000577c:	80021737          	lui	a4,0x80021
80005780:	fec42783          	lw	a5,-20(s0)
80005784:	fdc42683          	lw	a3,-36(s0)
80005788:	b5870613          	addi	a2,a4,-1192 # 80020b58 <__stack_top+0xfffdf528>
8000578c:	00078713          	mv	a4,a5
80005790:	00171713          	slli	a4,a4,0x1
80005794:	00f70733          	add	a4,a4,a5
80005798:	00271793          	slli	a5,a4,0x2
8000579c:	00078713          	mv	a4,a5
800057a0:	00068793          	mv	a5,a3
800057a4:	00279793          	slli	a5,a5,0x2
800057a8:	00d787b3          	add	a5,a5,a3
800057ac:	00579793          	slli	a5,a5,0x5
800057b0:	00f707b3          	add	a5,a4,a5
800057b4:	00f607b3          	add	a5,a2,a5
800057b8:	0187a703          	lw	a4,24(a5)
800057bc:	800207b7          	lui	a5,0x80020
800057c0:	fe442603          	lw	a2,-28(s0)
800057c4:	22078693          	addi	a3,a5,544 # 80020220 <__stack_top+0xfffdebf0>
800057c8:	24400793          	li	a5,580
800057cc:	02f607b3          	mul	a5,a2,a5
800057d0:	00f687b3          	add	a5,a3,a5
800057d4:	00e7a623          	sw	a4,12(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:344
        MessagePipe[mySlot].header.payload_size     = PKT_SERVICE_SIZE + applications[app_id].numTasks + 1;
800057d8:	800216b7          	lui	a3,0x80021
800057dc:	fdc42703          	lw	a4,-36(s0)
800057e0:	00070793          	mv	a5,a4
800057e4:	00279793          	slli	a5,a5,0x2
800057e8:	00e787b3          	add	a5,a5,a4
800057ec:	00579793          	slli	a5,a5,0x5
800057f0:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
800057f4:	00e787b3          	add	a5,a5,a4
800057f8:	0107a783          	lw	a5,16(a5)
800057fc:	00c78713          	addi	a4,a5,12
80005800:	800207b7          	lui	a5,0x80020
80005804:	fe442603          	lw	a2,-28(s0)
80005808:	22078693          	addi	a3,a5,544 # 80020220 <__stack_top+0xfffdebf0>
8000580c:	24400793          	li	a5,580
80005810:	02f607b3          	mul	a5,a2,a5
80005814:	00f687b3          	add	a5,a3,a5
80005818:	00e7a823          	sw	a4,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:345
        MessagePipe[mySlot].header.service          = TASK_START;
8000581c:	800207b7          	lui	a5,0x80020
80005820:	fe442683          	lw	a3,-28(s0)
80005824:	22078713          	addi	a4,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80005828:	24400793          	li	a5,580
8000582c:	02f687b3          	mul	a5,a3,a5
80005830:	00f707b3          	add	a5,a4,a5
80005834:	40000713          	li	a4,1024
80005838:	00e7aa23          	sw	a4,20(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:346
        MessagePipe[mySlot].header.task_id          = i;
8000583c:	800207b7          	lui	a5,0x80020
80005840:	fe442683          	lw	a3,-28(s0)
80005844:	22078713          	addi	a4,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80005848:	24400793          	li	a5,580
8000584c:	02f687b3          	mul	a5,a3,a5
80005850:	00f707b3          	add	a5,a4,a5
80005854:	fec42703          	lw	a4,-20(s0)
80005858:	00e7ac23          	sw	a4,24(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:347
        MessagePipe[mySlot].header.task_app_id      = app_id;
8000585c:	800207b7          	lui	a5,0x80020
80005860:	fe442683          	lw	a3,-28(s0)
80005864:	22078713          	addi	a4,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80005868:	24400793          	li	a5,580
8000586c:	02f687b3          	mul	a5,a3,a5
80005870:	00f707b3          	add	a5,a4,a5
80005874:	fdc42703          	lw	a4,-36(s0)
80005878:	02e7a423          	sw	a4,40(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:348
        MessagePipe[mySlot].msg.length              = applications[app_id].numTasks;
8000587c:	800216b7          	lui	a3,0x80021
80005880:	fdc42703          	lw	a4,-36(s0)
80005884:	00070793          	mv	a5,a4
80005888:	00279793          	slli	a5,a5,0x2
8000588c:	00e787b3          	add	a5,a5,a4
80005890:	00579793          	slli	a5,a5,0x5
80005894:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
80005898:	00e787b3          	add	a5,a5,a4
8000589c:	0107a703          	lw	a4,16(a5)
800058a0:	800207b7          	lui	a5,0x80020
800058a4:	fe442603          	lw	a2,-28(s0)
800058a8:	24400693          	li	a3,580
800058ac:	02d606b3          	mul	a3,a2,a3
800058b0:	22078793          	addi	a5,a5,544 # 80020220 <__stack_top+0xfffdebf0>
800058b4:	00f687b3          	add	a5,a3,a5
800058b8:	04e7a023          	sw	a4,64(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:349
        for(j = 0; j < applications[app_id].numTasks; j++){
800058bc:	fe042423          	sw	zero,-24(s0)
800058c0:	0880006f          	j	80005948 <API_ApplicationStart+0x244>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:350 (discriminator 3)
            MessagePipe[mySlot].msg.msg[j]          = applications[app_id].tasks[j].addr;
800058c4:	80021737          	lui	a4,0x80021
800058c8:	fe842783          	lw	a5,-24(s0)
800058cc:	fdc42683          	lw	a3,-36(s0)
800058d0:	b5870613          	addi	a2,a4,-1192 # 80020b58 <__stack_top+0xfffdf528>
800058d4:	00078713          	mv	a4,a5
800058d8:	00171713          	slli	a4,a4,0x1
800058dc:	00f70733          	add	a4,a4,a5
800058e0:	00271793          	slli	a5,a4,0x2
800058e4:	00078713          	mv	a4,a5
800058e8:	00068793          	mv	a5,a3
800058ec:	00279793          	slli	a5,a5,0x2
800058f0:	00d787b3          	add	a5,a5,a3
800058f4:	00579793          	slli	a5,a5,0x5
800058f8:	00f707b3          	add	a5,a4,a5
800058fc:	00f607b3          	add	a5,a2,a5
80005900:	0187a683          	lw	a3,24(a5)
80005904:	80020637          	lui	a2,0x80020
80005908:	fe442703          	lw	a4,-28(s0)
8000590c:	00070793          	mv	a5,a4
80005910:	00379793          	slli	a5,a5,0x3
80005914:	00e787b3          	add	a5,a5,a4
80005918:	00479793          	slli	a5,a5,0x4
8000591c:	00e787b3          	add	a5,a5,a4
80005920:	fe842703          	lw	a4,-24(s0)
80005924:	00e787b3          	add	a5,a5,a4
80005928:	01078793          	addi	a5,a5,16
8000592c:	22060713          	addi	a4,a2,544 # 80020220 <__stack_top+0xfffdebf0>
80005930:	00279793          	slli	a5,a5,0x2
80005934:	00f707b3          	add	a5,a4,a5
80005938:	00d7a223          	sw	a3,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:349 (discriminator 3)
        for(j = 0; j < applications[app_id].numTasks; j++){
8000593c:	fe842783          	lw	a5,-24(s0)
80005940:	00178793          	addi	a5,a5,1
80005944:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:349 (discriminator 1)
80005948:	800216b7          	lui	a3,0x80021
8000594c:	fdc42703          	lw	a4,-36(s0)
80005950:	00070793          	mv	a5,a4
80005954:	00279793          	slli	a5,a5,0x2
80005958:	00e787b3          	add	a5,a5,a4
8000595c:	00579793          	slli	a5,a5,0x5
80005960:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
80005964:	00e787b3          	add	a5,a5,a4
80005968:	0107a783          	lw	a5,16(a5)
8000596c:	fe842703          	lw	a4,-24(s0)
80005970:	f4f76ae3          	bltu	a4,a5,800058c4 <API_ApplicationStart+0x1c0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:352 (discriminator 2)
        }
        API_PushSendQueue(MESSAGE, mySlot);
80005974:	fe442583          	lw	a1,-28(s0)
80005978:	20200537          	lui	a0,0x20200
8000597c:	f0dfd0ef          	jal	ra,80003888 <API_PushSendQueue>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:353 (discriminator 2)
        vPortExitCritical();
80005980:	c69fb0ef          	jal	ra,800015e8 <vPortExitCritical>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:331 (discriminator 2)
    for(i = 0; i < applications[app_id].numTasks; i++){
80005984:	fec42783          	lw	a5,-20(s0)
80005988:	00178793          	addi	a5,a5,1
8000598c:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:331 (discriminator 1)
80005990:	800216b7          	lui	a3,0x80021
80005994:	fdc42703          	lw	a4,-36(s0)
80005998:	00070793          	mv	a5,a4
8000599c:	00279793          	slli	a5,a5,0x2
800059a0:	00e787b3          	add	a5,a5,a4
800059a4:	00579793          	slli	a5,a5,0x5
800059a8:	b5868713          	addi	a4,a3,-1192 # 80020b58 <__stack_top+0xfffdf528>
800059ac:	00e787b3          	add	a5,a5,a4
800059b0:	0107a783          	lw	a5,16(a5)
800059b4:	fec42703          	lw	a4,-20(s0)
800059b8:	d6f764e3          	bltu	a4,a5,80005720 <API_ApplicationStart+0x1c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/globalMaster.c:355
    }
}
800059bc:	00000013          	nop
800059c0:	02c12083          	lw	ra,44(sp)
800059c4:	02812403          	lw	s0,40(sp)
800059c8:	03010113          	addi	sp,sp,48
800059cc:	00008067          	ret

800059d0 <API_TaskListInit>:
API_TaskListInit():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:13
#include "chronos.h"

// Stores information about each running task
//extern volatile Task TaskList[ NUM_MAX_TASKS ];

void API_TaskListInit(){
800059d0:	fe010113          	addi	sp,sp,-32
800059d4:	00812e23          	sw	s0,28(sp)
800059d8:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:15
    unsigned int i, j;
    for (i = 0; i < NUM_MAX_TASKS; i++){
800059dc:	fe042623          	sw	zero,-20(s0)
800059e0:	0880006f          	j	80005a68 <API_TaskListInit+0x98>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:16
        TaskList[i].status = TASK_SLOT_EMPTY;
800059e4:	800216b7          	lui	a3,0x80021
800059e8:	fec42703          	lw	a4,-20(s0)
800059ec:	00070793          	mv	a5,a4
800059f0:	00479793          	slli	a5,a5,0x4
800059f4:	40e787b3          	sub	a5,a5,a4
800059f8:	00379793          	slli	a5,a5,0x3
800059fc:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80005a00:	00e787b3          	add	a5,a5,a4
80005a04:	0007a023          	sw	zero,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:17
        for (j = 0; j < NUM_MAX_APP_TASKS; j++){
80005a08:	fe042423          	sw	zero,-24(s0)
80005a0c:	0440006f          	j	80005a50 <API_TaskListInit+0x80>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:18 (discriminator 3)
            TaskList[i].PendingReq[j] = FALSE;
80005a10:	800216b7          	lui	a3,0x80021
80005a14:	fec42703          	lw	a4,-20(s0)
80005a18:	00070793          	mv	a5,a4
80005a1c:	00479793          	slli	a5,a5,0x4
80005a20:	40e787b3          	sub	a5,a5,a4
80005a24:	00179793          	slli	a5,a5,0x1
80005a28:	fe842703          	lw	a4,-24(s0)
80005a2c:	00e787b3          	add	a5,a5,a4
80005a30:	00878793          	addi	a5,a5,8
80005a34:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80005a38:	00279793          	slli	a5,a5,0x2
80005a3c:	00f707b3          	add	a5,a4,a5
80005a40:	0007a223          	sw	zero,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:17 (discriminator 3)
        for (j = 0; j < NUM_MAX_APP_TASKS; j++){
80005a44:	fe842783          	lw	a5,-24(s0)
80005a48:	00178793          	addi	a5,a5,1
80005a4c:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:17 (discriminator 1)
80005a50:	fe842703          	lw	a4,-24(s0)
80005a54:	00900793          	li	a5,9
80005a58:	fae7fce3          	bleu	a4,a5,80005a10 <API_TaskListInit+0x40>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:15 (discriminator 2)
    for (i = 0; i < NUM_MAX_TASKS; i++){
80005a5c:	fec42783          	lw	a5,-20(s0)
80005a60:	00178793          	addi	a5,a5,1
80005a64:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:15 (discriminator 1)
80005a68:	fec42703          	lw	a4,-20(s0)
80005a6c:	00500793          	li	a5,5
80005a70:	f6e7fae3          	bleu	a4,a5,800059e4 <API_TaskListInit+0x14>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:21
        }
    }
    return;
80005a74:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:22
}
80005a78:	01c12403          	lw	s0,28(sp)
80005a7c:	02010113          	addi	sp,sp,32
80005a80:	00008067          	ret

80005a84 <API_GetCurrentTaskSlot>:
API_GetCurrentTaskSlot():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:24

unsigned int API_GetCurrentTaskSlot(){
80005a84:	fe010113          	addi	sp,sp,-32
80005a88:	00112e23          	sw	ra,28(sp)
80005a8c:	00812c23          	sw	s0,24(sp)
80005a90:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:26
    // The handle of the currently running ( calling ) task on the kernel.
    TaskHandle_t xHandle = xTaskGetCurrentTaskHandle();
80005a94:	910fd0ef          	jal	ra,80002ba4 <xTaskGetCurrentTaskHandle>
80005a98:	fea42423          	sw	a0,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:27
    unsigned int i = 0;
80005a9c:	fe042623          	sw	zero,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:28
    for ( i = 0 ; i < NUM_MAX_TASKS ; i++ ) {
80005aa0:	fe042623          	sw	zero,-20(s0)
80005aa4:	0440006f          	j	80005ae8 <API_GetCurrentTaskSlot+0x64>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:29
        if ( TaskList[ i ].TaskHandler == xHandle ) {
80005aa8:	800217b7          	lui	a5,0x80021
80005aac:	fec42703          	lw	a4,-20(s0)
80005ab0:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80005ab4:	00070793          	mv	a5,a4
80005ab8:	00479793          	slli	a5,a5,0x4
80005abc:	40e787b3          	sub	a5,a5,a4
80005ac0:	00379793          	slli	a5,a5,0x3
80005ac4:	00f687b3          	add	a5,a3,a5
80005ac8:	00c7a783          	lw	a5,12(a5)
80005acc:	fe842703          	lw	a4,-24(s0)
80005ad0:	00f71663          	bne	a4,a5,80005adc <API_GetCurrentTaskSlot+0x58>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:30
            return( i );
80005ad4:	fec42783          	lw	a5,-20(s0)
80005ad8:	0200006f          	j	80005af8 <API_GetCurrentTaskSlot+0x74>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:28 (discriminator 2)
    for ( i = 0 ; i < NUM_MAX_TASKS ; i++ ) {
80005adc:	fec42783          	lw	a5,-20(s0)
80005ae0:	00178793          	addi	a5,a5,1
80005ae4:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:28 (discriminator 1)
80005ae8:	fec42703          	lw	a4,-20(s0)
80005aec:	00500793          	li	a5,5
80005af0:	fae7fce3          	bleu	a4,a5,80005aa8 <API_GetCurrentTaskSlot+0x24>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:33
        }
    }
    return ERRO;
80005af4:	fff00793          	li	a5,-1
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:34
}
80005af8:	00078513          	mv	a0,a5
80005afc:	01c12083          	lw	ra,28(sp)
80005b00:	01812403          	lw	s0,24(sp)
80005b04:	02010113          	addi	sp,sp,32
80005b08:	00008067          	ret

80005b0c <API_GetFreeTaskSlot>:
API_GetFreeTaskSlot():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:36

unsigned int API_GetFreeTaskSlot(){
80005b0c:	fe010113          	addi	sp,sp,-32
80005b10:	00812e23          	sw	s0,28(sp)
80005b14:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:38
    unsigned int i;
    for (i = 0; i < NUM_MAX_TASKS; i++){
80005b18:	fe042623          	sw	zero,-20(s0)
80005b1c:	0400006f          	j	80005b5c <API_GetFreeTaskSlot+0x50>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:39
        if (TaskList[i].status == TASK_SLOT_EMPTY){
80005b20:	800216b7          	lui	a3,0x80021
80005b24:	fec42703          	lw	a4,-20(s0)
80005b28:	00070793          	mv	a5,a4
80005b2c:	00479793          	slli	a5,a5,0x4
80005b30:	40e787b3          	sub	a5,a5,a4
80005b34:	00379793          	slli	a5,a5,0x3
80005b38:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80005b3c:	00e787b3          	add	a5,a5,a4
80005b40:	0007a783          	lw	a5,0(a5)
80005b44:	00079663          	bnez	a5,80005b50 <API_GetFreeTaskSlot+0x44>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:40
            return i;
80005b48:	fec42783          	lw	a5,-20(s0)
80005b4c:	0200006f          	j	80005b6c <API_GetFreeTaskSlot+0x60>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:38 (discriminator 2)
    for (i = 0; i < NUM_MAX_TASKS; i++){
80005b50:	fec42783          	lw	a5,-20(s0)
80005b54:	00178793          	addi	a5,a5,1
80005b58:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:38 (discriminator 1)
80005b5c:	fec42703          	lw	a4,-20(s0)
80005b60:	00500793          	li	a5,5
80005b64:	fae7fee3          	bleu	a4,a5,80005b20 <API_GetFreeTaskSlot+0x14>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:43
        }
    }
    return ERRO;
80005b68:	fff00793          	li	a5,-1
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:44
}
80005b6c:	00078513          	mv	a0,a5
80005b70:	01c12403          	lw	s0,28(sp)
80005b74:	02010113          	addi	sp,sp,32
80005b78:	00008067          	ret

80005b7c <API_TaskAllocation>:
API_TaskAllocation():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:46

unsigned int API_TaskAllocation(unsigned int task_id, unsigned int txt_size, unsigned int bss_size, unsigned int start_point, unsigned int task_app_id){
80005b7c:	fc010113          	addi	sp,sp,-64
80005b80:	02112e23          	sw	ra,60(sp)
80005b84:	02812c23          	sw	s0,56(sp)
80005b88:	04010413          	addi	s0,sp,64
80005b8c:	fca42e23          	sw	a0,-36(s0)
80005b90:	fcb42c23          	sw	a1,-40(s0)
80005b94:	fcc42a23          	sw	a2,-44(s0)
80005b98:	fcd42823          	sw	a3,-48(s0)
80005b9c:	fce42623          	sw	a4,-52(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:47
    unsigned int tslot = API_GetFreeTaskSlot();
80005ba0:	f6dff0ef          	jal	ra,80005b0c <API_GetFreeTaskSlot>
80005ba4:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:48
    TaskList[tslot].status = TASK_SLOT_WAITING_START;
80005ba8:	800216b7          	lui	a3,0x80021
80005bac:	fec42703          	lw	a4,-20(s0)
80005bb0:	00070793          	mv	a5,a4
80005bb4:	00479793          	slli	a5,a5,0x4
80005bb8:	40e787b3          	sub	a5,a5,a4
80005bbc:	00379793          	slli	a5,a5,0x3
80005bc0:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80005bc4:	00e787b3          	add	a5,a5,a4
80005bc8:	00200713          	li	a4,2
80005bcc:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:49
    TaskList[tslot].waitingMsg = FALSE;
80005bd0:	800216b7          	lui	a3,0x80021
80005bd4:	fec42703          	lw	a4,-20(s0)
80005bd8:	00070793          	mv	a5,a4
80005bdc:	00479793          	slli	a5,a5,0x4
80005be0:	40e787b3          	sub	a5,a5,a4
80005be4:	00379793          	slli	a5,a5,0x3
80005be8:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80005bec:	00e787b3          	add	a5,a5,a4
80005bf0:	0007a823          	sw	zero,16(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:50
    TaskList[tslot].TaskID = task_id;
80005bf4:	800217b7          	lui	a5,0x80021
80005bf8:	fec42703          	lw	a4,-20(s0)
80005bfc:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80005c00:	00070793          	mv	a5,a4
80005c04:	00479793          	slli	a5,a5,0x4
80005c08:	40e787b3          	sub	a5,a5,a4
80005c0c:	00379793          	slli	a5,a5,0x3
80005c10:	00f687b3          	add	a5,a3,a5
80005c14:	fdc42703          	lw	a4,-36(s0)
80005c18:	00e7a223          	sw	a4,4(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:51
    TaskList[tslot].AppID = task_app_id;
80005c1c:	800217b7          	lui	a5,0x80021
80005c20:	fec42703          	lw	a4,-20(s0)
80005c24:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80005c28:	00070793          	mv	a5,a4
80005c2c:	00479793          	slli	a5,a5,0x4
80005c30:	40e787b3          	sub	a5,a5,a4
80005c34:	00379793          	slli	a5,a5,0x3
80005c38:	00f687b3          	add	a5,a3,a5
80005c3c:	fcc42703          	lw	a4,-52(s0)
80005c40:	00e7a423          	sw	a4,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:52
    TaskList[tslot].taskSize = 4 * (txt_size + bss_size); // it multiply by four because each word has 32 bits and the memory is addressed by byte - so each word is composed by 4 addresses
80005c44:	fd842703          	lw	a4,-40(s0)
80005c48:	fd442783          	lw	a5,-44(s0)
80005c4c:	00f707b3          	add	a5,a4,a5
80005c50:	00279693          	slli	a3,a5,0x2
80005c54:	800217b7          	lui	a5,0x80021
80005c58:	fec42703          	lw	a4,-20(s0)
80005c5c:	2d878613          	addi	a2,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80005c60:	00070793          	mv	a5,a4
80005c64:	00479793          	slli	a5,a5,0x4
80005c68:	40e787b3          	sub	a5,a5,a4
80005c6c:	00379793          	slli	a5,a5,0x3
80005c70:	00f607b3          	add	a5,a2,a5
80005c74:	00d7ac23          	sw	a3,24(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:54

    TaskList[tslot].taskAddr = (unsigned int)pvPortMalloc(TaskList[tslot].taskSize); //vPortFree(TaskList[tslot].taskAddr);    
80005c78:	800217b7          	lui	a5,0x80021
80005c7c:	fec42703          	lw	a4,-20(s0)
80005c80:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80005c84:	00070793          	mv	a5,a4
80005c88:	00479793          	slli	a5,a5,0x4
80005c8c:	40e787b3          	sub	a5,a5,a4
80005c90:	00379793          	slli	a5,a5,0x3
80005c94:	00f687b3          	add	a5,a3,a5
80005c98:	0187a783          	lw	a5,24(a5)
80005c9c:	00078513          	mv	a0,a5
80005ca0:	dacfb0ef          	jal	ra,8000124c <pvPortMalloc>
80005ca4:	00050793          	mv	a5,a0
80005ca8:	00078613          	mv	a2,a5
80005cac:	800217b7          	lui	a5,0x80021
80005cb0:	fec42703          	lw	a4,-20(s0)
80005cb4:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80005cb8:	00070793          	mv	a5,a4
80005cbc:	00479793          	slli	a5,a5,0x4
80005cc0:	40e787b3          	sub	a5,a5,a4
80005cc4:	00379793          	slli	a5,a5,0x3
80005cc8:	00f687b3          	add	a5,a3,a5
80005ccc:	00c7ae23          	sw	a2,28(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:55
    TaskList[tslot].mainAddr =  TaskList[tslot].taskAddr + (4 * start_point);
80005cd0:	800217b7          	lui	a5,0x80021
80005cd4:	fec42703          	lw	a4,-20(s0)
80005cd8:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80005cdc:	00070793          	mv	a5,a4
80005ce0:	00479793          	slli	a5,a5,0x4
80005ce4:	40e787b3          	sub	a5,a5,a4
80005ce8:	00379793          	slli	a5,a5,0x3
80005cec:	00f687b3          	add	a5,a3,a5
80005cf0:	01c7a703          	lw	a4,28(a5)
80005cf4:	fd042783          	lw	a5,-48(s0)
80005cf8:	00279793          	slli	a5,a5,0x2
80005cfc:	00f706b3          	add	a3,a4,a5
80005d00:	80021637          	lui	a2,0x80021
80005d04:	fec42703          	lw	a4,-20(s0)
80005d08:	00070793          	mv	a5,a4
80005d0c:	00479793          	slli	a5,a5,0x4
80005d10:	40e787b3          	sub	a5,a5,a4
80005d14:	00379793          	slli	a5,a5,0x3
80005d18:	2d860713          	addi	a4,a2,728 # 800212d8 <__stack_top+0xfffdfca8>
80005d1c:	00e787b3          	add	a5,a5,a4
80005d20:	02d7a023          	sw	a3,32(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:57

    return tslot;
80005d24:	fec42783          	lw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:58
}
80005d28:	00078513          	mv	a0,a5
80005d2c:	03c12083          	lw	ra,60(sp)
80005d30:	03812403          	lw	s0,56(sp)
80005d34:	04010113          	addi	sp,sp,64
80005d38:	00008067          	ret

80005d3c <API_GetTaskSlot>:
API_GetTaskSlot():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:60

unsigned int API_GetTaskSlot(unsigned int task_id, unsigned int app_id){
80005d3c:	fd010113          	addi	sp,sp,-48
80005d40:	02812623          	sw	s0,44(sp)
80005d44:	03010413          	addi	s0,sp,48
80005d48:	fca42e23          	sw	a0,-36(s0)
80005d4c:	fcb42c23          	sw	a1,-40(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:62
    unsigned int i;
    for( i = 0; i < NUM_MAX_APP_TASKS; i++){
80005d50:	fe042623          	sw	zero,-20(s0)
80005d54:	0980006f          	j	80005dec <API_GetTaskSlot+0xb0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:63
        if(task_id == TaskList[i].TaskID && app_id == TaskList[i].AppID && TaskList[i].status != TASK_SLOT_EMPTY)
80005d58:	800217b7          	lui	a5,0x80021
80005d5c:	fec42703          	lw	a4,-20(s0)
80005d60:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80005d64:	00070793          	mv	a5,a4
80005d68:	00479793          	slli	a5,a5,0x4
80005d6c:	40e787b3          	sub	a5,a5,a4
80005d70:	00379793          	slli	a5,a5,0x3
80005d74:	00f687b3          	add	a5,a3,a5
80005d78:	0047a783          	lw	a5,4(a5)
80005d7c:	fdc42703          	lw	a4,-36(s0)
80005d80:	06f71063          	bne	a4,a5,80005de0 <API_GetTaskSlot+0xa4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:63 (discriminator 1)
80005d84:	800217b7          	lui	a5,0x80021
80005d88:	fec42703          	lw	a4,-20(s0)
80005d8c:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80005d90:	00070793          	mv	a5,a4
80005d94:	00479793          	slli	a5,a5,0x4
80005d98:	40e787b3          	sub	a5,a5,a4
80005d9c:	00379793          	slli	a5,a5,0x3
80005da0:	00f687b3          	add	a5,a3,a5
80005da4:	0087a783          	lw	a5,8(a5)
80005da8:	fd842703          	lw	a4,-40(s0)
80005dac:	02f71a63          	bne	a4,a5,80005de0 <API_GetTaskSlot+0xa4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:63 (discriminator 2)
80005db0:	800216b7          	lui	a3,0x80021
80005db4:	fec42703          	lw	a4,-20(s0)
80005db8:	00070793          	mv	a5,a4
80005dbc:	00479793          	slli	a5,a5,0x4
80005dc0:	40e787b3          	sub	a5,a5,a4
80005dc4:	00379793          	slli	a5,a5,0x3
80005dc8:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80005dcc:	00e787b3          	add	a5,a5,a4
80005dd0:	0007a783          	lw	a5,0(a5)
80005dd4:	00078663          	beqz	a5,80005de0 <API_GetTaskSlot+0xa4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:64
            return i;
80005dd8:	fec42783          	lw	a5,-20(s0)
80005ddc:	0200006f          	j	80005dfc <API_GetTaskSlot+0xc0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:62 (discriminator 2)
    for( i = 0; i < NUM_MAX_APP_TASKS; i++){
80005de0:	fec42783          	lw	a5,-20(s0)
80005de4:	00178793          	addi	a5,a5,1
80005de8:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:62 (discriminator 1)
80005dec:	fec42703          	lw	a4,-20(s0)
80005df0:	00900793          	li	a5,9
80005df4:	f6e7f2e3          	bleu	a4,a5,80005d58 <API_GetTaskSlot+0x1c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:66
    }
    return ERRO;
80005df8:	fff00793          	li	a5,-1
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:67
}
80005dfc:	00078513          	mv	a0,a5
80005e00:	02c12403          	lw	s0,44(sp)
80005e04:	03010113          	addi	sp,sp,48
80005e08:	00008067          	ret

80005e0c <API_TaskStart>:
API_TaskStart():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:69

void API_TaskStart(unsigned int slot){
80005e0c:	fe010113          	addi	sp,sp,-32
80005e10:	00112e23          	sw	ra,28(sp)
80005e14:	00812c23          	sw	s0,24(sp)
80005e18:	02010413          	addi	s0,sp,32
80005e1c:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:70
    TaskList[slot].status = TASK_SLOT_RUNNING;
80005e20:	800216b7          	lui	a3,0x80021
80005e24:	fec42703          	lw	a4,-20(s0)
80005e28:	00070793          	mv	a5,a4
80005e2c:	00479793          	slli	a5,a5,0x4
80005e30:	40e787b3          	sub	a5,a5,a4
80005e34:	00379793          	slli	a5,a5,0x3
80005e38:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80005e3c:	00e787b3          	add	a5,a5,a4
80005e40:	00100713          	li	a4,1
80005e44:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:71
    xTaskCreate(TaskList[slot].mainAddr,
80005e48:	800216b7          	lui	a3,0x80021
80005e4c:	fec42703          	lw	a4,-20(s0)
80005e50:	00070793          	mv	a5,a4
80005e54:	00479793          	slli	a5,a5,0x4
80005e58:	40e787b3          	sub	a5,a5,a4
80005e5c:	00379793          	slli	a5,a5,0x3
80005e60:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80005e64:	00e787b3          	add	a5,a5,a4
80005e68:	0207a783          	lw	a5,32(a5)
80005e6c:	00078513          	mv	a0,a5
80005e70:	fec42703          	lw	a4,-20(s0)
80005e74:	00070793          	mv	a5,a4
80005e78:	00479793          	slli	a5,a5,0x4
80005e7c:	40e787b3          	sub	a5,a5,a4
80005e80:	00379793          	slli	a5,a5,0x3
80005e84:	80021737          	lui	a4,0x80021
80005e88:	2d870713          	addi	a4,a4,728 # 800212d8 <__stack_top+0xfffdfca8>
80005e8c:	00e787b3          	add	a5,a5,a4
80005e90:	00c78793          	addi	a5,a5,12
80005e94:	00000893          	li	a7,0
80005e98:	00000813          	li	a6,0
80005e9c:	00100713          	li	a4,1
80005ea0:	00000693          	li	a3,0
80005ea4:	40000613          	li	a2,1024
80005ea8:	800075b7          	lui	a1,0x80007
80005eac:	d2858593          	addi	a1,a1,-728 # 80006d28 <__stack_top+0xfffc56f8>
80005eb0:	f9dfb0ef          	jal	ra,80001e4c <xTaskGenericCreate>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:77
                "LaTask",
                1024,
                NULL,
                tskIDLE_PRIORITY+1,
                &TaskList[slot].TaskHandler);
    return;
80005eb4:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:78
}
80005eb8:	01c12083          	lw	ra,28(sp)
80005ebc:	01812403          	lw	s0,24(sp)
80005ec0:	02010113          	addi	sp,sp,32
80005ec4:	00008067          	ret

80005ec8 <API_FinishRunningTask>:
API_FinishRunningTask():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:81


void API_FinishRunningTask(){
80005ec8:	fe010113          	addi	sp,sp,-32
80005ecc:	00112e23          	sw	ra,28(sp)
80005ed0:	00812c23          	sw	s0,24(sp)
80005ed4:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:82
    unsigned int slot = API_GetCurrentTaskSlot();
80005ed8:	badff0ef          	jal	ra,80005a84 <API_GetCurrentTaskSlot>
80005edc:	fea42623          	sw	a0,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:83
    while(API_checkPipe(slot) == 1){
80005ee0:	00c0006f          	j	80005eec <API_FinishRunningTask+0x24>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:84
        vTaskDelay(1);
80005ee4:	00100513          	li	a0,1
80005ee8:	a5cfc0ef          	jal	ra,80002144 <vTaskDelay>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:83
    while(API_checkPipe(slot) == 1){
80005eec:	fec42503          	lw	a0,-20(s0)
80005ef0:	488000ef          	jal	ra,80006378 <API_checkPipe>
80005ef4:	00050713          	mv	a4,a0
80005ef8:	00100793          	li	a5,1
80005efc:	fef704e3          	beq	a4,a5,80005ee4 <API_FinishRunningTask+0x1c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:86
    }
    vPortFree(TaskList[slot].taskAddr);
80005f00:	800217b7          	lui	a5,0x80021
80005f04:	fec42703          	lw	a4,-20(s0)
80005f08:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80005f0c:	00070793          	mv	a5,a4
80005f10:	00479793          	slli	a5,a5,0x4
80005f14:	40e787b3          	sub	a5,a5,a4
80005f18:	00379793          	slli	a5,a5,0x3
80005f1c:	00f687b3          	add	a5,a3,a5
80005f20:	01c7a783          	lw	a5,28(a5)
80005f24:	00078513          	mv	a0,a5
80005f28:	d00fb0ef          	jal	ra,80001428 <vPortFree>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:87
    API_SendFinishTask(TaskList[slot].TaskID, TaskList[slot].AppID);
80005f2c:	800217b7          	lui	a5,0x80021
80005f30:	fec42703          	lw	a4,-20(s0)
80005f34:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80005f38:	00070793          	mv	a5,a4
80005f3c:	00479793          	slli	a5,a5,0x4
80005f40:	40e787b3          	sub	a5,a5,a4
80005f44:	00379793          	slli	a5,a5,0x3
80005f48:	00f687b3          	add	a5,a3,a5
80005f4c:	0047a603          	lw	a2,4(a5)
80005f50:	800217b7          	lui	a5,0x80021
80005f54:	fec42703          	lw	a4,-20(s0)
80005f58:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80005f5c:	00070793          	mv	a5,a4
80005f60:	00479793          	slli	a5,a5,0x4
80005f64:	40e787b3          	sub	a5,a5,a4
80005f68:	00379793          	slli	a5,a5,0x3
80005f6c:	00f687b3          	add	a5,a3,a5
80005f70:	0087a783          	lw	a5,8(a5)
80005f74:	00078593          	mv	a1,a5
80005f78:	00060513          	mv	a0,a2
80005f7c:	fa5fd0ef          	jal	ra,80003f20 <API_SendFinishTask>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:88
    printsvsv("Task ", TaskList[slot].TaskID, "deleted with sucsess! From application ", TaskList[slot].AppID);
80005f80:	800217b7          	lui	a5,0x80021
80005f84:	fec42703          	lw	a4,-20(s0)
80005f88:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80005f8c:	00070793          	mv	a5,a4
80005f90:	00479793          	slli	a5,a5,0x4
80005f94:	40e787b3          	sub	a5,a5,a4
80005f98:	00379793          	slli	a5,a5,0x3
80005f9c:	00f687b3          	add	a5,a3,a5
80005fa0:	0047a783          	lw	a5,4(a5)
80005fa4:	00078593          	mv	a1,a5
80005fa8:	800217b7          	lui	a5,0x80021
80005fac:	fec42703          	lw	a4,-20(s0)
80005fb0:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80005fb4:	00070793          	mv	a5,a4
80005fb8:	00479793          	slli	a5,a5,0x4
80005fbc:	40e787b3          	sub	a5,a5,a4
80005fc0:	00379793          	slli	a5,a5,0x3
80005fc4:	00f687b3          	add	a5,a3,a5
80005fc8:	0087a783          	lw	a5,8(a5)
80005fcc:	00078693          	mv	a3,a5
80005fd0:	800077b7          	lui	a5,0x80007
80005fd4:	d3078613          	addi	a2,a5,-720 # 80006d30 <__stack_top+0xfffc5700>
80005fd8:	800077b7          	lui	a5,0x80007
80005fdc:	d5878513          	addi	a0,a5,-680 # 80006d58 <__stack_top+0xfffc5728>
80005fe0:	ea9fc0ef          	jal	ra,80002e88 <printsvsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:89
    TaskList[slot].status = TASK_SLOT_EMPTY;
80005fe4:	800216b7          	lui	a3,0x80021
80005fe8:	fec42703          	lw	a4,-20(s0)
80005fec:	00070793          	mv	a5,a4
80005ff0:	00479793          	slli	a5,a5,0x4
80005ff4:	40e787b3          	sub	a5,a5,a4
80005ff8:	00379793          	slli	a5,a5,0x3
80005ffc:	2d868713          	addi	a4,a3,728 # 800212d8 <__stack_top+0xfffdfca8>
80006000:	00e787b3          	add	a5,a5,a4
80006004:	0007a023          	sw	zero,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:90
    vTaskDelete(TaskList[slot].TaskHandler);
80006008:	800217b7          	lui	a5,0x80021
8000600c:	fec42703          	lw	a4,-20(s0)
80006010:	2d878693          	addi	a3,a5,728 # 800212d8 <__stack_top+0xfffdfca8>
80006014:	00070793          	mv	a5,a4
80006018:	00479793          	slli	a5,a5,0x4
8000601c:	40e787b3          	sub	a5,a5,a4
80006020:	00379793          	slli	a5,a5,0x3
80006024:	00f687b3          	add	a5,a3,a5
80006028:	00c7a783          	lw	a5,12(a5)
8000602c:	00078513          	mv	a0,a5
80006030:	838fc0ef          	jal	ra,80002068 <vTaskDelete>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:91
    return;
80006034:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/applications.c:92
}
80006038:	01c12083          	lw	ra,28(sp)
8000603c:	01812403          	lw	s0,24(sp)
80006040:	02010113          	addi	sp,sp,32
80006044:	00008067          	ret

80006048 <API_PipeInitialization>:
API_PipeInitialization():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:11
extern volatile ServicePacket ServicePipe[PIPE_SIZE];
extern unsigned int messageID;

////////////////////////////////////////////////////////////
// Initialize the PIPE, setting the status of each slot to FREE
void API_PipeInitialization(){
80006048:	fe010113          	addi	sp,sp,-32
8000604c:	00812e23          	sw	s0,28(sp)
80006050:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:13
    int i;
    messageID = 0;
80006054:	800207b7          	lui	a5,0x80020
80006058:	1a07a623          	sw	zero,428(a5) # 800201ac <__stack_top+0xfffdeb7c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:14
    for( i = 0; i < PIPE_SIZE; i++ ){
8000605c:	fe042623          	sw	zero,-20(s0)
80006060:	0740006f          	j	800060d4 <API_PipeInitialization+0x8c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:15 (discriminator 3)
        MessagePipe[i].status = PIPE_FREE;
80006064:	800207b7          	lui	a5,0x80020
80006068:	fec42683          	lw	a3,-20(s0)
8000606c:	24400713          	li	a4,580
80006070:	02e68733          	mul	a4,a3,a4
80006074:	22078793          	addi	a5,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80006078:	00f707b3          	add	a5,a4,a5
8000607c:	fff00713          	li	a4,-1
80006080:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:16 (discriminator 3)
        MessagePipe[i].msgID  = 0;
80006084:	800207b7          	lui	a5,0x80020
80006088:	fec42683          	lw	a3,-20(s0)
8000608c:	22078713          	addi	a4,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80006090:	24400793          	li	a5,580
80006094:	02f687b3          	mul	a5,a3,a5
80006098:	00f707b3          	add	a5,a4,a5
8000609c:	0007a423          	sw	zero,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:17 (discriminator 3)
        ServicePipe[i].status = PIPE_FREE;
800060a0:	800206b7          	lui	a3,0x80020
800060a4:	fec42703          	lw	a4,-20(s0)
800060a8:	00070793          	mv	a5,a4
800060ac:	00479793          	slli	a5,a5,0x4
800060b0:	40e787b3          	sub	a5,a5,a4
800060b4:	00279793          	slli	a5,a5,0x2
800060b8:	0bc68713          	addi	a4,a3,188 # 800200bc <__stack_top+0xfffdea8c>
800060bc:	00e787b3          	add	a5,a5,a4
800060c0:	fff00713          	li	a4,-1
800060c4:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:14 (discriminator 3)
    for( i = 0; i < PIPE_SIZE; i++ ){
800060c8:	fec42783          	lw	a5,-20(s0)
800060cc:	00178793          	addi	a5,a5,1
800060d0:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:14 (discriminator 1)
800060d4:	fec42703          	lw	a4,-20(s0)
800060d8:	00300793          	li	a5,3
800060dc:	f8e7d4e3          	ble	a4,a5,80006064 <API_PipeInitialization+0x1c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:19
    }
    return;
800060e0:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:20
}
800060e4:	01c12403          	lw	s0,28(sp)
800060e8:	02010113          	addi	sp,sp,32
800060ec:	00008067          	ret

800060f0 <API_GetMessageSlot>:
API_GetMessageSlot():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:24

////////////////////////////////////////////////////////////
// Returns a free Message slot 
unsigned int API_GetMessageSlot(){
800060f0:	fe010113          	addi	sp,sp,-32
800060f4:	00812e23          	sw	s0,28(sp)
800060f8:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:26
    int i;
    unsigned int sel = PIPE_FULL;
800060fc:	fdfe07b7          	lui	a5,0xfdfe0
80006100:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
80006104:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:27
    for( i = 0; i < PIPE_SIZE; i++ ){
80006108:	fe042623          	sw	zero,-20(s0)
8000610c:	0980006f          	j	800061a4 <API_GetMessageSlot+0xb4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:28
        if (MessagePipe[i].status == PIPE_FREE){
80006110:	800207b7          	lui	a5,0x80020
80006114:	fec42683          	lw	a3,-20(s0)
80006118:	24400713          	li	a4,580
8000611c:	02e68733          	mul	a4,a3,a4
80006120:	22078793          	addi	a5,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80006124:	00f707b3          	add	a5,a4,a5
80006128:	0007a703          	lw	a4,0(a5)
8000612c:	fff00793          	li	a5,-1
80006130:	06f71463          	bne	a4,a5,80006198 <API_GetMessageSlot+0xa8>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:29
            MessagePipe[i].status = PIPE_OCCUPIED;
80006134:	800207b7          	lui	a5,0x80020
80006138:	fec42683          	lw	a3,-20(s0)
8000613c:	24400713          	li	a4,580
80006140:	02e68733          	mul	a4,a3,a4
80006144:	22078793          	addi	a5,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80006148:	00f707b3          	add	a5,a4,a5
8000614c:	00100713          	li	a4,1
80006150:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:30
            MessagePipe[i].msgID = messageID;
80006154:	800207b7          	lui	a5,0x80020
80006158:	1ac7a703          	lw	a4,428(a5) # 800201ac <__stack_top+0xfffdeb7c>
8000615c:	800207b7          	lui	a5,0x80020
80006160:	fec42603          	lw	a2,-20(s0)
80006164:	22078693          	addi	a3,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80006168:	24400793          	li	a5,580
8000616c:	02f607b3          	mul	a5,a2,a5
80006170:	00f687b3          	add	a5,a3,a5
80006174:	00e7a423          	sw	a4,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:31
            messageID++;
80006178:	800207b7          	lui	a5,0x80020
8000617c:	1ac7a783          	lw	a5,428(a5) # 800201ac <__stack_top+0xfffdeb7c>
80006180:	00178713          	addi	a4,a5,1
80006184:	800207b7          	lui	a5,0x80020
80006188:	1ae7a623          	sw	a4,428(a5) # 800201ac <__stack_top+0xfffdeb7c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:32
            sel = i;
8000618c:	fec42783          	lw	a5,-20(s0)
80006190:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:33
            break;
80006194:	01c0006f          	j	800061b0 <API_GetMessageSlot+0xc0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:27 (discriminator 2)
    for( i = 0; i < PIPE_SIZE; i++ ){
80006198:	fec42783          	lw	a5,-20(s0)
8000619c:	00178793          	addi	a5,a5,1
800061a0:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:27 (discriminator 1)
800061a4:	fec42703          	lw	a4,-20(s0)
800061a8:	00300793          	li	a5,3
800061ac:	f6e7d2e3          	ble	a4,a5,80006110 <API_GetMessageSlot+0x20>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:36
        }
    }
    if(messageID > 16777215){
800061b0:	800207b7          	lui	a5,0x80020
800061b4:	1ac7a703          	lw	a4,428(a5) # 800201ac <__stack_top+0xfffdeb7c>
800061b8:	010007b7          	lui	a5,0x1000
800061bc:	06f76663          	bltu	a4,a5,80006228 <API_GetMessageSlot+0x138>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:37
        messageID = 256;
800061c0:	800207b7          	lui	a5,0x80020
800061c4:	10000713          	li	a4,256
800061c8:	1ae7a623          	sw	a4,428(a5) # 800201ac <__stack_top+0xfffdeb7c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:38
        for( i = 0; i < PIPE_SIZE; i++ ){
800061cc:	fe042623          	sw	zero,-20(s0)
800061d0:	04c0006f          	j	8000621c <API_GetMessageSlot+0x12c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:39 (discriminator 3)
            MessagePipe[i].msgID = (MessagePipe[i].msgID & 0x000000FF);
800061d4:	800207b7          	lui	a5,0x80020
800061d8:	fec42683          	lw	a3,-20(s0)
800061dc:	22078713          	addi	a4,a5,544 # 80020220 <__stack_top+0xfffdebf0>
800061e0:	24400793          	li	a5,580
800061e4:	02f687b3          	mul	a5,a3,a5
800061e8:	00f707b3          	add	a5,a4,a5
800061ec:	0087a783          	lw	a5,8(a5)
800061f0:	0ff7f713          	andi	a4,a5,255
800061f4:	800207b7          	lui	a5,0x80020
800061f8:	fec42603          	lw	a2,-20(s0)
800061fc:	22078693          	addi	a3,a5,544 # 80020220 <__stack_top+0xfffdebf0>
80006200:	24400793          	li	a5,580
80006204:	02f607b3          	mul	a5,a2,a5
80006208:	00f687b3          	add	a5,a3,a5
8000620c:	00e7a423          	sw	a4,8(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:38 (discriminator 3)
        for( i = 0; i < PIPE_SIZE; i++ ){
80006210:	fec42783          	lw	a5,-20(s0)
80006214:	00178793          	addi	a5,a5,1
80006218:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:38 (discriminator 1)
8000621c:	fec42703          	lw	a4,-20(s0)
80006220:	00300793          	li	a5,3
80006224:	fae7d8e3          	ble	a4,a5,800061d4 <API_GetMessageSlot+0xe4>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:42
        }
    }
    return sel;
80006228:	fe842783          	lw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:43
}
8000622c:	00078513          	mv	a0,a5
80006230:	01c12403          	lw	s0,28(sp)
80006234:	02010113          	addi	sp,sp,32
80006238:	00008067          	ret

8000623c <API_GetServiceSlot>:
API_GetServiceSlot():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:47

////////////////////////////////////////////////////////////
// Returns a free Service slot
unsigned int API_GetServiceSlot(){
8000623c:	fe010113          	addi	sp,sp,-32
80006240:	00812e23          	sw	s0,28(sp)
80006244:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:49
    int i;
    for( i = 0; i < PIPE_SIZE; i++ ){
80006248:	fe042623          	sw	zero,-20(s0)
8000624c:	06c0006f          	j	800062b8 <API_GetServiceSlot+0x7c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:50
        if (ServicePipe[i].status == PIPE_FREE){
80006250:	800206b7          	lui	a3,0x80020
80006254:	fec42703          	lw	a4,-20(s0)
80006258:	00070793          	mv	a5,a4
8000625c:	00479793          	slli	a5,a5,0x4
80006260:	40e787b3          	sub	a5,a5,a4
80006264:	00279793          	slli	a5,a5,0x2
80006268:	0bc68713          	addi	a4,a3,188 # 800200bc <__stack_top+0xfffdea8c>
8000626c:	00e787b3          	add	a5,a5,a4
80006270:	0007a703          	lw	a4,0(a5)
80006274:	fff00793          	li	a5,-1
80006278:	02f71a63          	bne	a4,a5,800062ac <API_GetServiceSlot+0x70>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:51
            ServicePipe[i].status = PIPE_OCCUPIED;
8000627c:	800206b7          	lui	a3,0x80020
80006280:	fec42703          	lw	a4,-20(s0)
80006284:	00070793          	mv	a5,a4
80006288:	00479793          	slli	a5,a5,0x4
8000628c:	40e787b3          	sub	a5,a5,a4
80006290:	00279793          	slli	a5,a5,0x2
80006294:	0bc68713          	addi	a4,a3,188 # 800200bc <__stack_top+0xfffdea8c>
80006298:	00e787b3          	add	a5,a5,a4
8000629c:	00100713          	li	a4,1
800062a0:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:52
            return i;
800062a4:	fec42783          	lw	a5,-20(s0)
800062a8:	0240006f          	j	800062cc <API_GetServiceSlot+0x90>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:49 (discriminator 2)
    for( i = 0; i < PIPE_SIZE; i++ ){
800062ac:	fec42783          	lw	a5,-20(s0)
800062b0:	00178793          	addi	a5,a5,1
800062b4:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:49 (discriminator 1)
800062b8:	fec42703          	lw	a4,-20(s0)
800062bc:	00300793          	li	a5,3
800062c0:	f8e7d8e3          	ble	a4,a5,80006250 <API_GetServiceSlot+0x14>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:55
        }
    }
    return PIPE_FULL;
800062c4:	fdfe07b7          	lui	a5,0xfdfe0
800062c8:	dfd78793          	addi	a5,a5,-515 # fdfdfdfd <__stack_top+0x7df9e7cd>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:56
}
800062cc:	00078513          	mv	a0,a5
800062d0:	01c12403          	lw	s0,28(sp)
800062d4:	02010113          	addi	sp,sp,32
800062d8:	00008067          	ret

800062dc <API_ClearPipeSlot>:
API_ClearPipeSlot():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:60

////////////////////////////////////////////////////////////
// Clear one PipeSlot after send it
void API_ClearPipeSlot(unsigned int typeSlot){
800062dc:	fd010113          	addi	sp,sp,-48
800062e0:	02812623          	sw	s0,44(sp)
800062e4:	03010413          	addi	s0,sp,48
800062e8:	fca42e23          	sw	a0,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:61
    unsigned type = typeSlot & 0xFFFF0000;
800062ec:	fdc42703          	lw	a4,-36(s0)
800062f0:	ffff07b7          	lui	a5,0xffff0
800062f4:	00f777b3          	and	a5,a4,a5
800062f8:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:62
    unsigned slot = typeSlot & 0x0000FFFF;
800062fc:	fdc42703          	lw	a4,-36(s0)
80006300:	000107b7          	lui	a5,0x10
80006304:	fff78793          	addi	a5,a5,-1 # ffff <HEAP_SIZE-0x1>
80006308:	00f777b3          	and	a5,a4,a5
8000630c:	fef42423          	sw	a5,-24(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:64
    
    if (type == SERVICE){
80006310:	fec42703          	lw	a4,-20(s0)
80006314:	101007b7          	lui	a5,0x10100
80006318:	02f71863          	bne	a4,a5,80006348 <API_ClearPipeSlot+0x6c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:65
        ServicePipe[slot].status = PIPE_FREE;
8000631c:	800206b7          	lui	a3,0x80020
80006320:	fe842703          	lw	a4,-24(s0)
80006324:	00070793          	mv	a5,a4
80006328:	00479793          	slli	a5,a5,0x4
8000632c:	40e787b3          	sub	a5,a5,a4
80006330:	00279793          	slli	a5,a5,0x2
80006334:	0bc68713          	addi	a4,a3,188 # 800200bc <__stack_top+0xfffdea8c>
80006338:	00e787b3          	add	a5,a5,a4
8000633c:	fff00713          	li	a4,-1
80006340:	00e7a023          	sw	a4,0(a5) # 10100000 <RAM_SIZE+0x10080000>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:70
    } else { // type == MESSAGE
        //printsv("cleaning message pipe slot: ", slot);
        MessagePipe[slot].status = PIPE_FREE;
    }
    return;
80006344:	0280006f          	j	8000636c <API_ClearPipeSlot+0x90>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:68
        MessagePipe[slot].status = PIPE_FREE;
80006348:	800207b7          	lui	a5,0x80020
8000634c:	fe842683          	lw	a3,-24(s0)
80006350:	24400713          	li	a4,580
80006354:	02e68733          	mul	a4,a3,a4
80006358:	22078793          	addi	a5,a5,544 # 80020220 <__stack_top+0xfffdebf0>
8000635c:	00f707b3          	add	a5,a4,a5
80006360:	fff00713          	li	a4,-1
80006364:	00e7a023          	sw	a4,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:70
    return;
80006368:	00000013          	nop
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:71
}
8000636c:	02c12403          	lw	s0,44(sp)
80006370:	03010113          	addi	sp,sp,48
80006374:	00008067          	ret

80006378 <API_checkPipe>:
API_checkPipe():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:73

unsigned int API_checkPipe(unsigned int taskSlot){
80006378:	fd010113          	addi	sp,sp,-48
8000637c:	02812623          	sw	s0,44(sp)
80006380:	03010413          	addi	s0,sp,48
80006384:	fca42e23          	sw	a0,-36(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:75
    unsigned int i;
    for(i = 0; i < PIPE_SIZE; i++){
80006388:	fe042623          	sw	zero,-20(s0)
8000638c:	0600006f          	j	800063ec <API_checkPipe+0x74>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:80
        // printsv("i: ", i);
        // printsv("status: ", MessagePipe[i].status);
        // printsv("holder: ", MessagePipe[i].holder);
        // prints("---\n");
        if(MessagePipe[i].status == PIPE_OCCUPIED){
80006390:	800207b7          	lui	a5,0x80020
80006394:	fec42683          	lw	a3,-20(s0)
80006398:	24400713          	li	a4,580
8000639c:	02e68733          	mul	a4,a3,a4
800063a0:	22078793          	addi	a5,a5,544 # 80020220 <__stack_top+0xfffdebf0>
800063a4:	00f707b3          	add	a5,a4,a5
800063a8:	0007a703          	lw	a4,0(a5)
800063ac:	00100793          	li	a5,1
800063b0:	02f71863          	bne	a4,a5,800063e0 <API_checkPipe+0x68>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:81
            if(MessagePipe[i].holder == taskSlot){
800063b4:	800207b7          	lui	a5,0x80020
800063b8:	fec42683          	lw	a3,-20(s0)
800063bc:	22078713          	addi	a4,a5,544 # 80020220 <__stack_top+0xfffdebf0>
800063c0:	24400793          	li	a5,580
800063c4:	02f687b3          	mul	a5,a3,a5
800063c8:	00f707b3          	add	a5,a4,a5
800063cc:	0047a783          	lw	a5,4(a5)
800063d0:	fdc42703          	lw	a4,-36(s0)
800063d4:	00f71663          	bne	a4,a5,800063e0 <API_checkPipe+0x68>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:82
                return 1;
800063d8:	00100793          	li	a5,1
800063dc:	0200006f          	j	800063fc <API_checkPipe+0x84>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:75 (discriminator 2)
    for(i = 0; i < PIPE_SIZE; i++){
800063e0:	fec42783          	lw	a5,-20(s0)
800063e4:	00178793          	addi	a5,a5,1
800063e8:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:75 (discriminator 1)
800063ec:	fec42703          	lw	a4,-20(s0)
800063f0:	00300793          	li	a5,3
800063f4:	f8e7fee3          	bleu	a4,a5,80006390 <API_checkPipe+0x18>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:86
            }
        }
    }
    return 0;
800063f8:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../FreeRTOS/packet.c:87
}
800063fc:	00078513          	mv	a0,a5
80006400:	02c12403          	lw	s0,44(sp)
80006404:	03010113          	addi	sp,sp,48
80006408:	00008067          	ret

8000640c <PLIC_init>:
PLIC_init():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:124
{
8000640c:	fe010113          	addi	sp,sp,-32
80006410:	00812e23          	sw	s0,28(sp)
80006414:	02010413          	addi	s0,sp,32
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:126
    unsigned long hart_id = read_csr(mhartid);
80006418:	f14027f3          	csrr	a5,mhartid
8000641c:	fef42423          	sw	a5,-24(s0)
80006420:	fe842783          	lw	a5,-24(s0)
80006424:	fef42223          	sw	a5,-28(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:129
    for(inc = 0; inc < ((PLIC_NUM_SOURCES + 32u) / 32u); ++inc)
80006428:	fe042623          	sw	zero,-20(s0)
8000642c:	03c0006f          	j	80006468 <PLIC_init+0x5c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:131 (discriminator 3)
        PLIC->TARGET_ENABLES[hart_id].ENABLES[inc] = 0;
80006430:	40000737          	lui	a4,0x40000
80006434:	fe442783          	lw	a5,-28(s0)
80006438:	00579693          	slli	a3,a5,0x5
8000643c:	fec42783          	lw	a5,-20(s0)
80006440:	00f686b3          	add	a3,a3,a5
80006444:	000017b7          	lui	a5,0x1
80006448:	80078793          	addi	a5,a5,-2048 # 800 <HEAP_SIZE-0xf800>
8000644c:	00f687b3          	add	a5,a3,a5
80006450:	00279793          	slli	a5,a5,0x2
80006454:	00f707b3          	add	a5,a4,a5
80006458:	0007a023          	sw	zero,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:129 (discriminator 3)
    for(inc = 0; inc < ((PLIC_NUM_SOURCES + 32u) / 32u); ++inc)
8000645c:	fec42783          	lw	a5,-20(s0)
80006460:	00178793          	addi	a5,a5,1
80006464:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:129 (discriminator 1)
80006468:	fec42783          	lw	a5,-20(s0)
8000646c:	fc0782e3          	beqz	a5,80006430 <PLIC_init+0x24>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:137
    for(inc = 0; inc < PLIC_NUM_SOURCES; ++inc)
80006470:	fe042623          	sw	zero,-20(s0)
80006474:	0240006f          	j	80006498 <PLIC_init+0x8c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:139 (discriminator 3)
        PLIC->SOURCE_PRIORITY[inc] = 0;
80006478:	40000737          	lui	a4,0x40000
8000647c:	fec42783          	lw	a5,-20(s0)
80006480:	00279793          	slli	a5,a5,0x2
80006484:	00f707b3          	add	a5,a4,a5
80006488:	0007a023          	sw	zero,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:137 (discriminator 3)
    for(inc = 0; inc < PLIC_NUM_SOURCES; ++inc)
8000648c:	fec42783          	lw	a5,-20(s0)
80006490:	00178793          	addi	a5,a5,1
80006494:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:137 (discriminator 1)
80006498:	fec42703          	lw	a4,-20(s0)
8000649c:	01e00793          	li	a5,30
800064a0:	fce7fce3          	bleu	a4,a5,80006478 <PLIC_init+0x6c>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:143
    PLIC->TARGET[hart_id].PRIORITY_THRESHOLD = 0;
800064a4:	40000737          	lui	a4,0x40000
800064a8:	fe442783          	lw	a5,-28(s0)
800064ac:	20078793          	addi	a5,a5,512
800064b0:	00c79793          	slli	a5,a5,0xc
800064b4:	00f707b3          	add	a5,a4,a5
800064b8:	0007a023          	sw	zero,0(a5)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:146
    set_csr(mie, MIP_MEIP);
800064bc:	000017b7          	lui	a5,0x1
800064c0:	80078793          	addi	a5,a5,-2048 # 800 <HEAP_SIZE-0xf800>
800064c4:	3047a7f3          	csrrs	a5,mie,a5
800064c8:	fef42023          	sw	a5,-32(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../riscv_hal/riscv_plic.h:147
}
800064cc:	00000013          	nop
800064d0:	01c12403          	lw	s0,28(sp)
800064d4:	02010113          	addi	sp,sp,32
800064d8:	00008067          	ret

800064dc <main>:
main():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:49
unsigned int ProcessorAddr;

/*-----------------------------------------------------------*/

int main( void )
{
800064dc:	fd010113          	addi	sp,sp,-48
800064e0:	02112623          	sw	ra,44(sp)
800064e4:	02812423          	sw	s0,40(sp)
800064e8:	03010413          	addi	s0,sp,48
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:51
	char str[20];
    PLIC_init();
800064ec:	f21ff0ef          	jal	ra,8000640c <PLIC_init>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:57

    /**************************************************************************
    * Initialize CoreUART with its base address, baud value, and line
    * configuration.
    *************************************************************************/
    UART_init(&g_uart, COREUARTAPB0_BASE_ADDR, BAUD_VALUE_115200,
800064f0:	00100693          	li	a3,1
800064f4:	02c00613          	li	a2,44
800064f8:	700015b7          	lui	a1,0x70001
800064fc:	800217b7          	lui	a5,0x80021
80006500:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
80006504:	acdfa0ef          	jal	ra,80000fd0 <UART_init>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:63
             (DATA_8_BITS | NO_PARITY) );
    
	/**************************************************************************
    * Initialize the Chronos platform stuff
    *************************************************************************/
	UART_polled_tx_string( &g_uart, (const uint8_t *)"\n Chronos platform initializing... \n" );
80006508:	800077b7          	lui	a5,0x80007
8000650c:	d7878593          	addi	a1,a5,-648 # 80006d78 <__stack_top+0xfffc5748>
80006510:	800217b7          	lui	a5,0x80021
80006514:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
80006518:	c85fa0ef          	jal	ra,8000119c <UART_polled_tx_string>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:64
	Chronos_init();
8000651c:	fa0fc0ef          	jal	ra,80002cbc <Chronos_init>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:65
	UART_polled_tx_string( &g_uart, (const uint8_t *)"\n This terminal belongs to the address: " );
80006520:	800077b7          	lui	a5,0x80007
80006524:	da078593          	addi	a1,a5,-608 # 80006da0 <__stack_top+0xfffc5770>
80006528:	800217b7          	lui	a5,0x80021
8000652c:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
80006530:	c6dfa0ef          	jal	ra,8000119c <UART_polled_tx_string>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:66
	myItoa(ProcessorAddr, str, 16);
80006534:	800217b7          	lui	a5,0x80021
80006538:	6207a783          	lw	a5,1568(a5) # 80021620 <__stack_top+0xfffdfff0>
8000653c:	00078713          	mv	a4,a5
80006540:	fdc40793          	addi	a5,s0,-36
80006544:	01000613          	li	a2,16
80006548:	00078593          	mv	a1,a5
8000654c:	00070513          	mv	a0,a4
80006550:	958fd0ef          	jal	ra,800036a8 <myItoa>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:67
    UART_polled_tx_string( &g_uart, (const uint8_t *)str); UART_polled_tx_string( &g_uart, (const uint8_t *)"\n");
80006554:	fdc40793          	addi	a5,s0,-36
80006558:	00078593          	mv	a1,a5
8000655c:	800217b7          	lui	a5,0x80021
80006560:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
80006564:	c39fa0ef          	jal	ra,8000119c <UART_polled_tx_string>
80006568:	800077b7          	lui	a5,0x80007
8000656c:	dcc78593          	addi	a1,a5,-564 # 80006dcc <__stack_top+0xfffc579c>
80006570:	800217b7          	lui	a5,0x80021
80006574:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
80006578:	c25fa0ef          	jal	ra,8000119c <UART_polled_tx_string>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:71
	
	//AppsToMap = 0;
	
	if (ProcessorAddr == 0x0000){
8000657c:	800217b7          	lui	a5,0x80021
80006580:	6207a783          	lw	a5,1568(a5) # 80021620 <__stack_top+0xfffdfff0>
80006584:	04079463          	bnez	a5,800065cc <main+0xf0>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:72
		UART_polled_tx_string( &g_uart, (const uint8_t *)"\n This processor is the Global Master: \n" );
80006588:	800077b7          	lui	a5,0x80007
8000658c:	dd078593          	addi	a1,a5,-560 # 80006dd0 <__stack_top+0xfffc57a0>
80006590:	800217b7          	lui	a5,0x80021
80006594:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
80006598:	c05fa0ef          	jal	ra,8000119c <UART_polled_tx_string>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:74
		/* Create the GlobalManager task */
		xTaskCreate( GlobalManagerTask, "GlobalMaster", 1000, NULL, (configMAX_PRIORITIES - 1), NULL );
8000659c:	00000893          	li	a7,0
800065a0:	00000813          	li	a6,0
800065a4:	00000793          	li	a5,0
800065a8:	00400713          	li	a4,4
800065ac:	00000693          	li	a3,0
800065b0:	3e800613          	li	a2,1000
800065b4:	800075b7          	lui	a1,0x80007
800065b8:	dfc58593          	addi	a1,a1,-516 # 80006dfc <__stack_top+0xfffc57cc>
800065bc:	80006537          	lui	a0,0x80006
800065c0:	71050513          	addi	a0,a0,1808 # 80006710 <__stack_top+0xfffc50e0>
800065c4:	889fb0ef          	jal	ra,80001e4c <xTaskGenericCreate>
800065c8:	0440006f          	j	8000660c <main+0x130>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:76
	} else {
		UART_polled_tx_string( &g_uart, (const uint8_t *)"\n This processor is a Slave: \n" );
800065cc:	800077b7          	lui	a5,0x80007
800065d0:	e0c78593          	addi	a1,a5,-500 # 80006e0c <__stack_top+0xfffc57dc>
800065d4:	800217b7          	lui	a5,0x80021
800065d8:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
800065dc:	bc1fa0ef          	jal	ra,8000119c <UART_polled_tx_string>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:79
		
		/* Create the two test tasks. */
		xTaskCreate( vUartAliveTask, "Alive", 1000, NULL, 0, NULL );
800065e0:	00000893          	li	a7,0
800065e4:	00000813          	li	a6,0
800065e8:	00000793          	li	a5,0
800065ec:	00000713          	li	a4,0
800065f0:	00000693          	li	a3,0
800065f4:	3e800613          	li	a2,1000
800065f8:	800075b7          	lui	a1,0x80007
800065fc:	e2c58593          	addi	a1,a1,-468 # 80006e2c <__stack_top+0xfffc57fc>
80006600:	80006537          	lui	a0,0x80006
80006604:	65850513          	addi	a0,a0,1624 # 80006658 <__stack_top+0xfffc5028>
80006608:	845fb0ef          	jal	ra,80001e4c <xTaskGenericCreate>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:83
	}	

	/* Start the kernel.  From here on, only tasks and interrupts will run. */
	vTaskStartScheduler();
8000660c:	bbdfb0ef          	jal	ra,800021c8 <vTaskStartScheduler>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:86

	/* Exit FreeRTOS */
	return 0;
80006610:	00000793          	li	a5,0
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:87
}
80006614:	00078513          	mv	a0,a5
80006618:	02c12083          	lw	ra,44(sp)
8000661c:	02812403          	lw	s0,40(sp)
80006620:	03010113          	addi	sp,sp,48
80006624:	00008067          	ret

80006628 <vApplicationMallocFailedHook>:
vApplicationMallocFailedHook():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:92

/*-----------------------------------------------------------*/

void vApplicationMallocFailedHook( void )
{
80006628:	ff010113          	addi	sp,sp,-16
8000662c:	00812623          	sw	s0,12(sp)
80006630:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:103
	demo application.  If heap_1.c or heap_2.c are used, then the size of the
	heap available to pvPortMalloc() is defined by configTOTAL_HEAP_SIZE in
	FreeRTOSConfig.h, and the xPortGetFreeHeapSize() API function can be used
	to query the size of free heap space that remains (although it does not
	provide information on how the remaining heap might be fragmented). */
	taskDISABLE_INTERRUPTS();
80006634:	30047073          	csrci	mstatus,8
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:104 (discriminator 1)
	for( ;; );
80006638:	0000006f          	j	80006638 <vApplicationMallocFailedHook+0x10>

8000663c <vApplicationIdleHook>:
vApplicationIdleHook():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:109
}
/*-----------------------------------------------------------*/

void vApplicationIdleHook( void )
{
8000663c:	ff010113          	addi	sp,sp,-16
80006640:	00812623          	sw	s0,12(sp)
80006644:	01010413          	addi	s0,sp,16
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:119
	specified, or call vTaskDelay()).  If the application makes use of the
	vTaskDelete() API function (as this demo application does) then it is also
	important that vApplicationIdleHook() is permitted to return to its calling
	function, because it is the responsibility of the idle task to clean up
	memory allocated by the kernel to any task that has since been deleted. */
}
80006648:	00000013          	nop
8000664c:	00c12403          	lw	s0,12(sp)
80006650:	01010113          	addi	sp,sp,16
80006654:	00008067          	ret

80006658 <vUartAliveTask>:
vUartAliveTask():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:136
	for( ;; );
}
/*-----------------------------------------------------------*/

static void vUartAliveTask( void *pvParameters )
{
80006658:	fc010113          	addi	sp,sp,-64
8000665c:	02112e23          	sw	ra,60(sp)
80006660:	02812c23          	sw	s0,56(sp)
80006664:	04010413          	addi	s0,sp,64
80006668:	fca42623          	sw	a0,-52(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:140
	( void ) pvParameters;
	char str[20];
	unsigned int i;
	for( i = 0 ;; i++ ){
8000666c:	fe042623          	sw	zero,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:141 (discriminator 2)
		myItoa(ProcessorAddr, str, 16);
80006670:	800217b7          	lui	a5,0x80021
80006674:	6207a783          	lw	a5,1568(a5) # 80021620 <__stack_top+0xfffdfff0>
80006678:	00078713          	mv	a4,a5
8000667c:	fd840793          	addi	a5,s0,-40
80006680:	01000613          	li	a2,16
80006684:	00078593          	mv	a1,a5
80006688:	00070513          	mv	a0,a4
8000668c:	81cfd0ef          	jal	ra,800036a8 <myItoa>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:142 (discriminator 2)
		UART_polled_tx_string( &g_uart, (const uint8_t *)str);
80006690:	fd840793          	addi	a5,s0,-40
80006694:	00078593          	mv	a1,a5
80006698:	800217b7          	lui	a5,0x80021
8000669c:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
800066a0:	afdfa0ef          	jal	ra,8000119c <UART_polled_tx_string>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:143 (discriminator 2)
		UART_polled_tx_string( &g_uart, (const uint8_t *)" PE is alive - " );
800066a4:	800077b7          	lui	a5,0x80007
800066a8:	e3478593          	addi	a1,a5,-460 # 80006e34 <__stack_top+0xfffc5804>
800066ac:	800217b7          	lui	a5,0x80021
800066b0:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
800066b4:	ae9fa0ef          	jal	ra,8000119c <UART_polled_tx_string>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:144 (discriminator 2)
		myItoa(i, str, 10);
800066b8:	fec42783          	lw	a5,-20(s0)
800066bc:	fd840713          	addi	a4,s0,-40
800066c0:	00a00613          	li	a2,10
800066c4:	00070593          	mv	a1,a4
800066c8:	00078513          	mv	a0,a5
800066cc:	fddfc0ef          	jal	ra,800036a8 <myItoa>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:145 (discriminator 2)
		UART_polled_tx_string( &g_uart, (const uint8_t *)str);
800066d0:	fd840793          	addi	a5,s0,-40
800066d4:	00078593          	mv	a1,a5
800066d8:	800217b7          	lui	a5,0x80021
800066dc:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
800066e0:	abdfa0ef          	jal	ra,8000119c <UART_polled_tx_string>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:146 (discriminator 2)
		UART_polled_tx_string( &g_uart, (const uint8_t *)" -\r\n" );
800066e4:	800077b7          	lui	a5,0x80007
800066e8:	e4478593          	addi	a1,a5,-444 # 80006e44 <__stack_top+0xfffc5814>
800066ec:	800217b7          	lui	a5,0x80021
800066f0:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
800066f4:	aa9fa0ef          	jal	ra,8000119c <UART_polled_tx_string>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:147 (discriminator 2)
	    vTaskDelay(10);
800066f8:	00a00513          	li	a0,10
800066fc:	a49fb0ef          	jal	ra,80002144 <vTaskDelay>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:140 (discriminator 2)
	for( i = 0 ;; i++ ){
80006700:	fec42783          	lw	a5,-20(s0)
80006704:	00178793          	addi	a5,a5,1
80006708:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:141 (discriminator 2)
		myItoa(ProcessorAddr, str, 16);
8000670c:	f65ff06f          	j	80006670 <vUartAliveTask+0x18>

80006710 <GlobalManagerTask>:
GlobalManagerTask():
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:153
	}
}

/*-----------------------------------------------------------*/

static void GlobalManagerTask( void *pvParameters ){
80006710:	fc010113          	addi	sp,sp,-64
80006714:	02112e23          	sw	ra,60(sp)
80006718:	02812c23          	sw	s0,56(sp)
8000671c:	04010413          	addi	s0,sp,64
80006720:	fca42623          	sw	a0,-52(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:158
	( void ) pvParameters;
	int tick;
	char str[20];
	// Initialize the priority vector with the pattern policy
	GeneratePatternMatrix();
80006724:	af4fe0ef          	jal	ra,80004a18 <GeneratePatternMatrix>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:161

	// Initialize the System Tiles Info
	API_TilesReset();
80006728:	9c8fe0ef          	jal	ra,800048f0 <API_TilesReset>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:164

	// Initialize the applications vector
    API_ApplicationsReset();
8000672c:	964fe0ef          	jal	ra,80004890 <API_ApplicationsReset>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:167

	// Informs the Repository that the GLOBALMASTER is ready to receive the application info
	API_RepositoryWakeUp();
80006730:	df5fd0ef          	jal	ra,80004524 <API_RepositoryWakeUp>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:170 (discriminator 1)

	for(;;){
		tick = xTaskGetTickCount();
80006734:	cadfb0ef          	jal	ra,800023e0 <xTaskGetTickCount>
80006738:	00050793          	mv	a5,a0
8000673c:	fef42623          	sw	a5,-20(s0)
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:171 (discriminator 1)
		myItoa(tick, str, 10);
80006740:	fd840793          	addi	a5,s0,-40
80006744:	00a00613          	li	a2,10
80006748:	00078593          	mv	a1,a5
8000674c:	fec42503          	lw	a0,-20(s0)
80006750:	f59fc0ef          	jal	ra,800036a8 <myItoa>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:172 (discriminator 1)
		UART_polled_tx_string( &g_uart, (const uint8_t *)str);
80006754:	fd840793          	addi	a5,s0,-40
80006758:	00078593          	mv	a1,a5
8000675c:	800217b7          	lui	a5,0x80021
80006760:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
80006764:	a39fa0ef          	jal	ra,8000119c <UART_polled_tx_string>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:173 (discriminator 1)
		printsv("GlobalMasterActive", tick);
80006768:	fec42583          	lw	a1,-20(s0)
8000676c:	800077b7          	lui	a5,0x80007
80006770:	e4c78513          	addi	a0,a5,-436 # 80006e4c <__stack_top+0xfffc581c>
80006774:	eccfc0ef          	jal	ra,80002e40 <printsv>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:174 (discriminator 1)
		UART_polled_tx_string( &g_uart, (const uint8_t *)" GlobalMasterRoutine...\r\n" );
80006778:	800077b7          	lui	a5,0x80007
8000677c:	e6078593          	addi	a1,a5,-416 # 80006e60 <__stack_top+0xfffc5830>
80006780:	800217b7          	lui	a5,0x80021
80006784:	61878513          	addi	a0,a5,1560 # 80021618 <__stack_top+0xfffdffe8>
80006788:	a15fa0ef          	jal	ra,8000119c <UART_polled_tx_string>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:177 (discriminator 1)

		// Checks if there is some task to allocate...
		API_AllocateTasks(tick);
8000678c:	fec42783          	lw	a5,-20(s0)
80006790:	00078513          	mv	a0,a5
80006794:	b2cfe0ef          	jal	ra,80004ac0 <API_AllocateTasks>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:179 (discriminator 1)

		vTaskDelay(1);
80006798:	00100513          	li	a0,1
8000679c:	9a9fb0ef          	jal	ra,80002144 <vTaskDelay>
/home/iacana.weber/Chronos-RISCV/FreeRTOS/Debug/../main.c:170 (discriminator 1)
		tick = xTaskGetTickCount();
800067a0:	f95ff06f          	j	80006734 <GlobalManagerTask+0x24>

800067a4 <write>:
write():
800067a4:	00000797          	auipc	a5,0x0
800067a8:	6ec78793          	addi	a5,a5,1772 # 80006e90 <_impure_ptr>
800067ac:	00060693          	mv	a3,a2
800067b0:	00058613          	mv	a2,a1
800067b4:	00050593          	mv	a1,a0
800067b8:	0007a503          	lw	a0,0(a5)
800067bc:	0040006f          	j	800067c0 <_write_r>

800067c0 <_write_r>:
_write_r():
800067c0:	ff010113          	addi	sp,sp,-16
800067c4:	00812423          	sw	s0,8(sp)
800067c8:	00050413          	mv	s0,a0
800067cc:	00058513          	mv	a0,a1
800067d0:	00060593          	mv	a1,a2
800067d4:	00068613          	mv	a2,a3
800067d8:	0001a797          	auipc	a5,0x1a
800067dc:	3407ac23          	sw	zero,856(a5) # 80020b30 <errno>
800067e0:	00112623          	sw	ra,12(sp)
800067e4:	e2cfa0ef          	jal	ra,80000e10 <_write>
800067e8:	fff00793          	li	a5,-1
800067ec:	00f51c63          	bne	a0,a5,80006804 <_write_r+0x44>
800067f0:	0001a797          	auipc	a5,0x1a
800067f4:	34078793          	addi	a5,a5,832 # 80020b30 <errno>
800067f8:	0007a783          	lw	a5,0(a5)
800067fc:	00078463          	beqz	a5,80006804 <_write_r+0x44>
80006800:	00f42023          	sw	a5,0(s0)
80006804:	00c12083          	lw	ra,12(sp)
80006808:	00812403          	lw	s0,8(sp)
8000680c:	01010113          	addi	sp,sp,16
80006810:	00008067          	ret
	...
80006820:	6568                	flw	fa0,76(a0)
80006822:	6c6c                	flw	fa1,92(s0)
80006824:	0000006f          	j	80006824 <_write_r+0x64>
80006828:	6544                	flw	fs1,12(a0)
8000682a:	6574                	flw	fa3,76(a0)
8000682c:	69657463          	bleu	s6,a0,80006eb4 <__data_load+0x14>
80006830:	7520                	flw	fs0,104(a0)
80006832:	616d                	addi	sp,sp,240
80006834:	6320                	flw	fs0,64(a4)
80006836:	6168                	flw	fa0,68(a0)
80006838:	616d                	addi	sp,sp,240
8000683a:	6164                	flw	fs1,68(a0)
8000683c:	5420                	lw	s0,104(s0)
8000683e:	5345                	li	t1,-15
80006840:	4554                	lw	a3,12(a0)
80006842:	6420                	flw	fs0,72(s0)
80006844:	2065                	jal	800068ec <_write_r+0x12c>
80006846:	74736973          	csrrsi	s2,0x747,6
8000684a:	6d65                	lui	s10,0x19
8000684c:	2161                	jal	80006cd4 <_write_r+0x514>
8000684e:	000a                	c.slli	zero,0x2
80006850:	7261                	lui	tp,0xffff8
80006852:	00203067          	0x203067
80006856:	0000                	unimp
80006858:	7261                	lui	tp,0xffff8
8000685a:	00203167          	0x203167
8000685e:	0000                	unimp
80006860:	7261                	lui	tp,0xffff8
80006862:	00203267          	0x203267
80006866:	0000                	unimp
80006868:	7261                	lui	tp,0xffff8
8000686a:	00203367          	0x203367
8000686e:	0000                	unimp
80006870:	7261                	lui	tp,0xffff8
80006872:	00203467          	0x203467
80006876:	0000                	unimp
80006878:	7974                	flw	fa3,116(a0)
8000687a:	6570                	flw	fa2,76(a0)
8000687c:	0020                	addi	s0,sp,8
8000687e:	0000                	unimp
80006880:	74737953          	0x74737953
80006884:	6d65                	lui	s10,0x19
80006886:	6c6c6163          	bltu	s8,t1,80006f48 <impure_data+0x28>
8000688a:	6e20                	flw	fs0,88(a2)
8000688c:	206fa3c3          	fmadd.s	ft7,ft11,ft6,ft4,rdn
80006890:	6469                	lui	s0,0x1a
80006892:	6e65                	lui	t3,0x19
80006894:	6974                	flw	fa3,84(a0)
80006896:	6966                	flw	fs2,88(sp)
80006898:	61646163          	bltu	s0,s6,80006e9a <_impure_ptr+0xa>
8000689c:	0a21                	addi	s4,s4,8
8000689e:	0000                	unimp
800068a0:	7274                	flw	fa3,100(a2)
800068a2:	7061                	c.lui	zero,0xffff8
800068a4:	000a                	c.slli	zero,0x2
800068a6:	0000                	unimp
800068a8:	06e0                	addi	s0,sp,844
800068aa:	8000                	0x8000
800068ac:	06e8                	addi	a0,sp,844
800068ae:	8000                	0x8000
800068b0:	06e8                	addi	a0,sp,844
800068b2:	8000                	0x8000
800068b4:	06e8                	addi	a0,sp,844
800068b6:	8000                	0x8000
800068b8:	06e8                	addi	a0,sp,844
800068ba:	8000                	0x8000
800068bc:	06e8                	addi	a0,sp,844
800068be:	8000                	0x8000
800068c0:	06e8                	addi	a0,sp,844
800068c2:	8000                	0x8000
800068c4:	06e8                	addi	a0,sp,844
800068c6:	8000                	0x8000
800068c8:	06e8                	addi	a0,sp,844
800068ca:	8000                	0x8000
800068cc:	06e8                	addi	a0,sp,844
800068ce:	8000                	0x8000
800068d0:	06c0                	addi	s0,sp,836
800068d2:	8000                	0x8000
800068d4:	06e8                	addi	a0,sp,844
800068d6:	8000                	0x8000
800068d8:	06e8                	addi	a0,sp,844
800068da:	8000                	0x8000
800068dc:	06e8                	addi	a0,sp,844
800068de:	8000                	0x8000
800068e0:	06e8                	addi	a0,sp,844
800068e2:	8000                	0x8000
800068e4:	06e8                	addi	a0,sp,844
800068e6:	8000                	0x8000
800068e8:	06e8                	addi	a0,sp,844
800068ea:	8000                	0x8000
800068ec:	06e8                	addi	a0,sp,844
800068ee:	8000                	0x8000
800068f0:	06e8                	addi	a0,sp,844
800068f2:	8000                	0x8000
800068f4:	06e8                	addi	a0,sp,844
800068f6:	8000                	0x8000
800068f8:	06d0                	addi	a2,sp,836
800068fa:	8000                	0x8000
800068fc:	06e8                	addi	a0,sp,844
800068fe:	8000                	0x8000
80006900:	06e8                	addi	a0,sp,844
80006902:	8000                	0x8000
80006904:	06e8                	addi	a0,sp,844
80006906:	8000                	0x8000
80006908:	06e8                	addi	a0,sp,844
8000690a:	8000                	0x8000
8000690c:	06e8                	addi	a0,sp,844
8000690e:	8000                	0x8000
80006910:	06e8                	addi	a0,sp,844
80006912:	8000                	0x8000
80006914:	06e8                	addi	a0,sp,844
80006916:	8000                	0x8000
80006918:	06e8                	addi	a0,sp,844
8000691a:	8000                	0x8000
8000691c:	06e8                	addi	a0,sp,844
8000691e:	8000                	0x8000
80006920:	0684                	addi	s1,sp,832
80006922:	8000                	0x8000
80006924:	06e8                	addi	a0,sp,844
80006926:	8000                	0x8000
80006928:	06e8                	addi	a0,sp,844
8000692a:	8000                	0x8000
8000692c:	06e8                	addi	a0,sp,844
8000692e:	8000                	0x8000
80006930:	06e8                	addi	a0,sp,844
80006932:	8000                	0x8000
80006934:	06e8                	addi	a0,sp,844
80006936:	8000                	0x8000
80006938:	06e8                	addi	a0,sp,844
8000693a:	8000                	0x8000
8000693c:	06e8                	addi	a0,sp,844
8000693e:	8000                	0x8000
80006940:	06e8                	addi	a0,sp,844
80006942:	8000                	0x8000
80006944:	06e8                	addi	a0,sp,844
80006946:	8000                	0x8000
80006948:	0660                	addi	s0,sp,780
8000694a:	8000                	0x8000
8000694c:	06e8                	addi	a0,sp,844
8000694e:	8000                	0x8000
80006950:	06e8                	addi	a0,sp,844
80006952:	8000                	0x8000
80006954:	06e8                	addi	a0,sp,844
80006956:	8000                	0x8000
80006958:	06e8                	addi	a0,sp,844
8000695a:	8000                	0x8000
8000695c:	06e8                	addi	a0,sp,844
8000695e:	8000                	0x8000
80006960:	06e8                	addi	a0,sp,844
80006962:	8000                	0x8000
80006964:	06e8                	addi	a0,sp,844
80006966:	8000                	0x8000
80006968:	06e8                	addi	a0,sp,844
8000696a:	8000                	0x8000
8000696c:	06e8                	addi	a0,sp,844
8000696e:	8000                	0x8000
80006970:	06e8                	addi	a0,sp,844
80006972:	8000                	0x8000
80006974:	06e8                	addi	a0,sp,844
80006976:	8000                	0x8000
80006978:	06e8                	addi	a0,sp,844
8000697a:	8000                	0x8000
8000697c:	06e8                	addi	a0,sp,844
8000697e:	8000                	0x8000
80006980:	06e8                	addi	a0,sp,844
80006982:	8000                	0x8000
80006984:	06e8                	addi	a0,sp,844
80006986:	8000                	0x8000
80006988:	05d8                	addi	a4,sp,708
8000698a:	8000                	0x8000
8000698c:	7830                	flw	fa2,112(s0)
8000698e:	0000                	unimp
80006990:	500a                	0x500a
80006992:	6f72                	flw	ft10,28(sp)
80006994:	206d6167          	0x206d6167
80006998:	6168                	flw	fa0,68(a0)
8000699a:	78652073          	csrs	0x786,a0
8000699e:	7469                	lui	s0,0xffffa
800069a0:	6465                	lui	s0,0x19
800069a2:	7720                	flw	fs0,104(a4)
800069a4:	7469                	lui	s0,0xffffa
800069a6:	2068                	fld	fa0,192(s0)
800069a8:	65646f63          	bltu	s0,s6,80007006 <__sbss_end+0x16>
800069ac:	003a                	c.slli	zero,0xe
800069ae:	0000                	unimp
800069b0:	000d                	c.nop	3
800069b2:	0000                	unimp
800069b4:	4449                	li	s0,18
800069b6:	454c                	lw	a1,12(a0)
800069b8:	0000                	unimp
800069ba:	0000                	unimp
800069bc:	000a                	c.slli	zero,0x2
800069be:	0000                	unimp
800069c0:	7266                	flw	ft4,120(sp)
800069c2:	61206d6f          	jal	s10,8000cfd4 <__global_pointer$+0x5954>
800069c6:	7070                	flw	fa2,100(s0)
800069c8:	696c                	flw	fa1,84(a0)
800069ca:	69746163          	bltu	s0,s7,8000704c <__sbss_end+0x5c>
800069ce:	00206e6f          	jal	t3,8000c9d0 <__global_pointer$+0x5350>
800069d2:	0000                	unimp
800069d4:	4946                	lw	s2,80(sp)
800069d6:	494e                	lw	s2,208(sp)
800069d8:	44454853          	0x44454853
800069dc:	203a                	fld	ft0,392(sp)
800069de:	6154                	flw	fa3,4(a0)
800069e0:	00206b73          	csrrsi	s6,frm,0
800069e4:	4154                	lw	a3,4(a0)
800069e6:	415f4b53          	0x415f4b53
800069ea:	4c4c                	lw	a1,28(s0)
800069ec:	5441434f          	0x5441434f
800069f0:	4f49                	li	t5,18
800069f2:	5f4e                	lw	t5,240(sp)
800069f4:	43435553          	0x43435553
800069f8:	5345                	li	t1,-15
800069fa:	00000a53          	fadd.s	fs4,ft0,ft0,rne
800069fe:	0000                	unimp
80006a00:	67656843          	fmadd.q	fa6,fa0,fs6,fa2,unknown
80006a04:	7520756f          	jal	a0,8000e156 <__global_pointer$+0x6ad6>
80006a08:	206d                	jal	80006ab2 <_write_r+0x2f2>
80006a0a:	4154                	lw	a3,4(a0)
80006a0c:	535f4b53          	0x535f4b53
80006a10:	4154                	lw	a3,4(a0)
80006a12:	5452                	lw	s0,52(sp)
80006a14:	0a21                	addi	s4,s4,8
80006a16:	0000                	unimp
80006a18:	67656843          	fmadd.q	fa6,fa0,fs6,fa2,unknown
80006a1c:	7520756f          	jal	a0,8000e16e <__global_pointer$+0x6aee>
80006a20:	206d                	jal	80006aca <_write_r+0x30a>
80006a22:	4154                	lw	a3,4(a0)
80006a24:	525f4b53          	0x525f4b53
80006a28:	4e55                	li	t3,21
80006a2a:	0a21                	addi	s4,s4,8
80006a2c:	0000                	unimp
80006a2e:	0000                	unimp
80006a30:	7266                	flw	ft4,120(sp)
80006a32:	61206d6f          	jal	s10,8000d044 <__global_pointer$+0x59c4>
80006a36:	7070                	flw	fa2,100(s0)
80006a38:	203a                	fld	ft0,392(sp)
80006a3a:	0000                	unimp
80006a3c:	72617453          	0x72617453
80006a40:	6974                	flw	fa3,84(a0)
80006a42:	676e                	flw	fa4,216(sp)
80006a44:	5420                	lw	s0,104(s0)
80006a46:	7361                	lui	t1,0xffff8
80006a48:	00203a6b          	0x203a6b
80006a4c:	6154                	flw	fa3,4(a0)
80006a4e:	203a6b73          	csrrsi	s6,hideleg,20
80006a52:	0000                	unimp
80006a54:	67656843          	fmadd.q	fa6,fa0,fs6,fa2,unknown
80006a58:	7520756f          	jal	a0,8000e1aa <__global_pointer$+0x6b2a>
80006a5c:	206d                	jal	80006b06 <_write_r+0x346>
80006a5e:	656d                	lui	a0,0x1b
80006a60:	67617373          	csrrci	t1,0x676,2
80006a64:	2065                	jal	80006b0c <_write_r+0x34c>
80006a66:	6572                	flw	fa0,28(sp)
80006a68:	7571                	lui	a0,0xffffc
80006a6a:	7365                	lui	t1,0xffff9
80006a6c:	2174                	fld	fa3,192(a0)
80006a6e:	4120                	lw	s0,64(a0)
80006a70:	7070                	flw	fa2,100(s0)
80006a72:	203a                	fld	ft0,392(sp)
80006a74:	0000                	unimp
80006a76:	0000                	unimp
80006a78:	654d                	lui	a0,0x13
80006a7a:	736e                	flw	ft6,248(sp)
80006a7c:	6761                	lui	a4,0x18
80006a7e:	6d65                	lui	s10,0x19
80006a80:	6e20                	flw	fs0,88(a2)
80006a82:	206fa3c3          	fmadd.s	ft7,ft11,ft6,ft4,rdn
80006a86:	6e65                	lui	t3,0x19
80006a88:	746e6f63          	bltu	t3,t1,800071e6 <__sbss_end+0x1f6>
80006a8c:	6172                	flw	ft2,28(sp)
80006a8e:	6164                	flw	fs1,68(a0)
80006a90:	202c                	fld	fa1,64(s0)
80006a92:	6461                	lui	s0,0x18
80006a94:	6369                	lui	t1,0x1a
80006a96:	6f69                	lui	t5,0x1a
80006a98:	616e                	flw	ft2,216(sp)
80006a9a:	646e                	flw	fs0,216(sp)
80006a9c:	6f61206f          	j	80019192 <__global_pointer$+0x11b12>
80006aa0:	5020                	lw	s0,96(s0)
80006aa2:	6e65                	lui	t3,0x19
80006aa4:	6964                	flw	fs1,84(a0)
80006aa6:	676e                	flw	fa4,216(sp)
80006aa8:	6552                	flw	fa0,20(sp)
80006aaa:	2171                	jal	80006f36 <impure_data+0x16>
80006aac:	000a                	c.slli	zero,0x2
80006aae:	0000                	unimp
80006ab0:	654d                	lui	a0,0x13
80006ab2:	736e                	flw	ft6,248(sp)
80006ab4:	6761                	lui	a4,0x18
80006ab6:	6d65                	lui	s10,0x19
80006ab8:	6520                	flw	fs0,72(a0)
80006aba:	636e                	flw	ft6,216(sp)
80006abc:	72746e6f          	jal	t3,8004d9e2 <__stack_top+0xc3b2>
80006ac0:	6461                	lui	s0,0x18
80006ac2:	2061                	jal	80006b4a <_write_r+0x38a>
80006ac4:	6f6e                	flw	ft10,216(sp)
80006ac6:	7020                	flw	fs0,96(s0)
80006ac8:	7069                	c.lui	zero,0xffffa
80006aca:	2165                	jal	80006f72 <impure_data+0x52>
80006acc:	000a                	c.slli	zero,0x2
80006ace:	0000                	unimp
80006ad0:	6554                	flw	fa3,12(a0)
80006ad2:	206d                	jal	80006b7c <_write_r+0x3bc>
80006ad4:	6d75                	lui	s10,0x1d
80006ad6:	2061                	jal	80006b5e <_write_r+0x39e>
80006ad8:	656d                	lui	a0,0x1b
80006ada:	736e                	flw	ft6,248(sp)
80006adc:	6761                	lui	a4,0x18
80006ade:	6d65                	lui	s10,0x19
80006ae0:	6320                	flw	fs0,64(a4)
80006ae2:	6568                	flw	fa0,76(a0)
80006ae4:	646e6167          	0x646e6167
80006ae8:	2e2e2e6f          	jal	t3,800e8dca <__stack_top+0xa779a>
80006aec:	000a                	c.slli	zero,0x2
80006aee:	0000                	unimp
80006af0:	454d                	li	a0,19
80006af2:	47415353          	0x47415353
80006af6:	5f45                	li	t5,-15
80006af8:	4544                	lw	s1,12(a0)
80006afa:	494c                	lw	a1,20(a0)
80006afc:	4556                	lw	a0,84(sp)
80006afe:	5952                	lw	s2,52(sp)
80006b00:	6120                	flw	fs0,64(a0)
80006b02:	6464                	flw	fs1,76(s0)
80006b04:	3a72                	fld	fs4,312(sp)
80006b06:	0020                	addi	s0,sp,8
80006b08:	6f64                	flw	fs1,92(a4)
80006b0a:	656e                	flw	fa0,216(sp)
80006b0c:	2e2e                	fld	ft8,200(sp)
80006b0e:	0a2e                	slli	s4,s4,0xb
80006b10:	2d2d                	jal	8000714a <__sbss_end+0x15a>
80006b12:	2d2d                	jal	8000714c <__sbss_end+0x15c>
80006b14:	2d2d                	jal	8000714e <__sbss_end+0x15e>
80006b16:	2d2d                	jal	80007150 <__sbss_end+0x160>
80006b18:	2d2d                	jal	80007152 <__sbss_end+0x162>
80006b1a:	000a                	c.slli	zero,0x2
80006b1c:	5245                	li	tp,-15
80006b1e:	4f52                	lw	t5,20(sp)
80006b20:	2052                	fld	ft0,272(sp)
80006b22:	7845                	lui	a6,0xffff1
80006b24:	6574                	flw	fa3,76(a0)
80006b26:	6e72                	flw	ft8,28(sp)
80006b28:	6c61                	lui	s8,0x18
80006b2a:	325f 495f 5152      	0x5152495f325f
80006b30:	6148                	flw	fa0,4(a0)
80006b32:	646e                	flw	fs0,216(sp)
80006b34:	656c                	flw	fa1,76(a0)
80006b36:	2072                	fld	ft0,280(sp)
80006b38:	6e55                	lui	t3,0x15
80006b3a:	776f6e6b          	0x776f6e6b
80006b3e:	2d6e                	fld	fs10,216(sp)
80006b40:	76726553          	0x76726553
80006b44:	6369                	lui	t1,0x1a
80006b46:	2065                	jal	80006bee <_write_r+0x42e>
80006b48:	0000                	unimp
80006b4a:	0000                	unimp
80006b4c:	7266                	flw	ft4,120(sp)
80006b4e:	203a6d6f          	jal	s10,800ad550 <__stack_top+0x6bf20>
80006b52:	0000                	unimp
80006b54:	736d                	lui	t1,0xffffb
80006b56:	6f702067          	0x6f702067
80006b5a:	6e69                	lui	t3,0x1a
80006b5c:	6574                	flw	fa3,76(a0)
80006b5e:	3a72                	fld	fs4,312(sp)
80006b60:	0020                	addi	s0,sp,8
80006b62:	0000                	unimp
80006b64:	694d                	lui	s2,0x13
80006b66:	686e                	flw	fa6,216(sp)
80006b68:	2061                	jal	80006bf0 <_write_r+0x430>
80006b6a:	6174                	flw	fa3,68(a0)
80006b6c:	49206b73          	csrrsi	s6,0x492,0
80006b70:	3a44                	fld	fs1,176(a2)
80006b72:	0020                	addi	s0,sp,8
80006b74:	646e6553          	0x646e6553
80006b78:	6e69                	lui	t3,0x1a
80006b7a:	65755167          	0x65755167
80006b7e:	6575                	lui	a0,0x1d
80006b80:	665f 6f72 746e      	0x746e6f72665f
80006b86:	203a                	fld	ft0,392(sp)
80006b88:	0000                	unimp
80006b8a:	0000                	unimp
80006b8c:	7365                	lui	t1,0xffff9
80006b8e:	6570                	flw	fa2,76(a0)
80006b90:	6172                	flw	ft2,28(sp)
80006b92:	646e                	flw	fs0,216(sp)
80006b94:	6d75206f          	j	80059a6a <__stack_top+0x1843a>
80006b98:	6d20                	flw	fs0,88(a0)
80006b9a:	7365                	lui	t1,0xffff9
80006b9c:	65676173          	csrrsi	sp,0x656,14
80006ba0:	7320                	flw	fs0,96(a4)
80006ba2:	6f6c                	flw	fa1,92(a4)
80006ba4:	2e74                	fld	fa3,216(a2)
80006ba6:	2e2e                	fld	ft8,200(sp)
80006ba8:	000a                	c.slli	zero,0x2
80006baa:	0000                	unimp
80006bac:	6441                	lui	s0,0x10
80006bae:	6964                	flw	fs1,84(a0)
80006bb0:	676e                	flw	fa4,216(sp)
80006bb2:	6120                	flw	fs0,64(a0)
80006bb4:	6d20                	flw	fs0,88(a0)
80006bb6:	69206773          	csrrsi	a4,0x692,0
80006bba:	206e                	fld	ft0,216(sp)
80006bbc:	6874                	flw	fa3,84(s0)
80006bbe:	2065                	jal	80006c66 <_write_r+0x4a6>
80006bc0:	4950                	lw	a2,20(a0)
80006bc2:	4550                	lw	a2,12(a0)
80006bc4:	7320                	flw	fs0,96(a4)
80006bc6:	6f6c                	flw	fa1,92(a4)
80006bc8:	2074                	fld	fa3,192(s0)
80006bca:	0000                	unimp
80006bcc:	3e3e                	fld	ft8,488(sp)
80006bce:	3e3e                	fld	ft8,488(sp)
80006bd0:	413e                	lw	sp,204(sp)
80006bd2:	69656863          	bltu	a0,s6,80007262 <__sbss_end+0x272>
80006bd6:	6120                	flw	fs0,64(a0)
80006bd8:	7571                	lui	a0,0xffffc
80006bda:	2069                	jal	80006c64 <_write_r+0x4a4>
80006bdc:	6f6e                	flw	ft10,216(sp)
80006bde:	7020                	flw	fs0,96(s0)
80006be0:	6e65                	lui	t3,0x19
80006be2:	6964                	flw	fs1,84(a0)
80006be4:	676e                	flw	fa4,216(sp)
80006be6:	0a21                	addi	s4,s4,8
80006be8:	0000                	unimp
80006bea:	0000                	unimp
80006bec:	7345                	lui	t1,0xffff1
80006bee:	6570                	flw	fa2,76(a0)
80006bf0:	6172                	flw	ft2,28(sp)
80006bf2:	646e                	flw	fs0,216(sp)
80006bf4:	654d206f          	j	800d9248 <__stack_top+0x97c18>
80006bf8:	736e                	flw	ft6,248(sp)
80006bfa:	6761                	lui	a4,0x18
80006bfc:	6d65                	lui	s10,0x19
80006bfe:	0a21                	addi	s4,s4,8
80006c00:	0000                	unimp
80006c02:	0000                	unimp
80006c04:	6520                	flw	fs0,72(a0)
80006c06:	72657073          	csrci	0x726,10
80006c0a:	6e61                	lui	t3,0x18
80006c0c:	6f64                	flw	fs1,92(a4)
80006c0e:	6d20                	flw	fs0,88(a0)
80006c10:	6e65                	lui	t3,0x19
80006c12:	65676173          	csrrsi	sp,0x656,14
80006c16:	206d                	jal	80006cc0 <_write_r+0x500>
80006c18:	0000                	unimp
80006c1a:	0000                	unimp
80006c1c:	6174                	flw	fa3,68(a0)
80006c1e:	6c736b73          	csrrsi	s6,0x6c7,6
80006c22:	0020746f          	jal	s0,8000dc24 <__global_pointer$+0x65a4>
80006c26:	0000                	unimp
80006c28:	654d                	lui	a0,0x13
80006c2a:	736e                	flw	ft6,248(sp)
80006c2c:	6761                	lui	a4,0x18
80006c2e:	6d65                	lui	s10,0x19
80006c30:	5220                	lw	s0,96(a2)
80006c32:	6365                	lui	t1,0x19
80006c34:	6265                	lui	tp,0x19
80006c36:	6469                	lui	s0,0x1a
80006c38:	2161                	jal	800070c0 <__sbss_end+0xd0>
80006c3a:	000a                	c.slli	zero,0x2
80006c3c:	654e                	flw	fa0,208(sp)
80006c3e:	70612077          	0x70612077
80006c42:	6c70                	flw	fa2,92(s0)
80006c44:	6369                	lui	t1,0x1a
80006c46:	7461                	lui	s0,0xffff8
80006c48:	6f69                	lui	t5,0x1a
80006c4a:	206e                	fld	ft0,216(sp)
80006c4c:	6572                	flw	fa0,28(sp)
80006c4e:	74736967          	0x74736967
80006c52:	7265                	lui	tp,0xffff9
80006c54:	6465                	lui	s0,0x19
80006c56:	2d20                	fld	fs0,88(a0)
80006c58:	4920                	lw	s0,80(a0)
80006c5a:	3a44                	fld	fs1,176(a2)
80006c5c:	0020                	addi	s0,sp,8
80006c5e:	0000                	unimp
80006c60:	20736177          	0x20736177
80006c64:	7865                	lui	a6,0xffff9
80006c66:	6365                	lui	t1,0x19
80006c68:	7475                	lui	s0,0xffffd
80006c6a:	6465                	lui	s0,0x19
80006c6c:	6920                	flw	fs0,80(a0)
80006c6e:	206e                	fld	ft0,216(sp)
80006c70:	0000                	unimp
80006c72:	0000                	unimp
80006c74:	7041                	c.lui	zero,0xffff0
80006c76:	6c70                	flw	fa2,92(s0)
80006c78:	6369                	lui	t1,0x1a
80006c7a:	7461                	lui	s0,0xffff8
80006c7c:	6f69                	lui	t5,0x1a
80006c7e:	206e                	fld	ft0,216(sp)
80006c80:	0000                	unimp
80006c82:	0000                	unimp
80006c84:	0909                	addi	s2,s2,2
80006c86:	6854                	flw	fa3,20(s0)
80006c88:	7369                	lui	t1,0xffffa
80006c8a:	6120                	flw	fs0,64(a0)
80006c8c:	7070                	flw	fa2,100(s0)
80006c8e:	696c                	flw	fa1,84(a0)
80006c90:	69746163          	bltu	s0,s7,80007312 <__sbss_end+0x322>
80006c94:	73206e6f          	jal	t3,8000d3c6 <__global_pointer$+0x5d46>
80006c98:	6974                	flw	fa3,84(a0)
80006c9a:	6c6c                	flw	fa1,92(s0)
80006c9c:	6e20                	flw	fs0,88(a2)
80006c9e:	6565                	lui	a0,0x19
80006ca0:	2064                	fld	fs1,192(s0)
80006ca2:	6f74                	flw	fa3,92(a4)
80006ca4:	7220                	flw	fs0,96(a2)
80006ca6:	6e75                	lui	t3,0x1d
80006ca8:	203a                	fld	ft0,392(sp)
80006caa:	0000                	unimp
80006cac:	0909                	addi	s2,s2,2
80006cae:	6854                	flw	fa3,20(s0)
80006cb0:	7369                	lui	t1,0xffffa
80006cb2:	6120                	flw	fs0,64(a0)
80006cb4:	7070                	flw	fa2,100(s0)
80006cb6:	696c                	flw	fa1,84(a0)
80006cb8:	69746163          	bltu	s0,s7,8000733a <__sbss_end+0x34a>
80006cbc:	69206e6f          	jal	t3,8000d34e <__global_pointer$+0x5cce>
80006cc0:	4f442073          	csrs	0x4f4,s0
80006cc4:	454e                	lw	a0,208(sp)
80006cc6:	0a21                	addi	s4,s4,8
80006cc8:	0000                	unimp
80006cca:	0000                	unimp
80006ccc:	2049                	jal	80006d4e <_write_r+0x58e>
80006cce:	20746f67          	0x20746f67
80006cd2:	2061                	jal	80006d5a <_write_r+0x59a>
80006cd4:	7266                	flw	ft4,120(sp)
80006cd6:	6565                	lui	a0,0x19
80006cd8:	7320                	flw	fs0,96(a4)
80006cda:	7265                	lui	tp,0xffff9
80006cdc:	6976                	flw	fs2,92(sp)
80006cde:	73206563          	bltu	zero,s2,80007408 <__sbss_end+0x418>
80006ce2:	6f6c                	flw	fa1,92(a4)
80006ce4:	2174                	fld	fa3,192(a0)
80006ce6:	2021                	jal	80006cee <_write_r+0x52e>
80006ce8:	3e2d                	jal	80006822 <_write_r+0x62>
80006cea:	0020                	addi	s0,sp,8
80006cec:	7041                	c.lui	zero,0xffff0
80006cee:	6c70                	flw	fa2,92(s0)
80006cf0:	6369                	lui	t1,0x1a
80006cf2:	7461                	lui	s0,0xffff8
80006cf4:	6f69                	lui	t5,0x1a
80006cf6:	206e                	fld	ft0,216(sp)
80006cf8:	6c61                	lui	s8,0x18
80006cfa:	6f6c                	flw	fa1,92(a4)
80006cfc:	65746163          	bltu	s0,s7,8000733e <__sbss_end+0x34e>
80006d00:	3a64                	fld	fs1,240(a2)
80006d02:	0020                	addi	s0,sp,8
80006d04:	5309                	li	t1,-30
80006d06:	6174                	flw	fa3,68(a0)
80006d08:	7472                	flw	fs0,60(sp)
80006d0a:	6320                	flw	fs0,64(a4)
80006d0c:	616d6d6f          	jal	s10,800dd322 <__stack_top+0x9bcf2>
80006d10:	646e                	flw	fs0,216(sp)
80006d12:	7320                	flw	fs0,96(a4)
80006d14:	6e65                	lui	t3,0x19
80006d16:	2074                	fld	fa3,192(s0)
80006d18:	6f74                	flw	fa3,92(a4)
80006d1a:	6520                	flw	fs0,72(a0)
80006d1c:	6576                	flw	fa0,92(sp)
80006d1e:	7972                	flw	fs2,60(sp)
80006d20:	7420                	flw	fs0,104(s0)
80006d22:	7361                	lui	t1,0xffff8
80006d24:	000a2e6b          	0xa2e6b
80006d28:	614c                	flw	fa1,4(a0)
80006d2a:	6154                	flw	fa3,4(a0)
80006d2c:	00006b73          	csrrsi	s6,ustatus,0
80006d30:	6564                	flw	fs1,76(a0)
80006d32:	656c                	flw	fa1,76(a0)
80006d34:	6574                	flw	fa3,76(a0)
80006d36:	2064                	fld	fs1,192(s0)
80006d38:	68746977          	0x68746977
80006d3c:	7320                	flw	fs0,96(a4)
80006d3e:	6375                	lui	t1,0x1d
80006d40:	73736573          	csrrsi	a0,0x737,6
80006d44:	2021                	jal	80006d4c <_write_r+0x58c>
80006d46:	7246                	flw	ft4,112(sp)
80006d48:	61206d6f          	jal	s10,8000d35a <__global_pointer$+0x5cda>
80006d4c:	7070                	flw	fa2,100(s0)
80006d4e:	696c                	flw	fa1,84(a0)
80006d50:	69746163          	bltu	s0,s7,800073d2 <__sbss_end+0x3e2>
80006d54:	00206e6f          	jal	t3,8000cd56 <__global_pointer$+0x56d6>
80006d58:	6154                	flw	fa3,4(a0)
80006d5a:	00206b73          	csrrsi	s6,frm,0
80006d5e:	0000                	unimp
80006d60:	0a0d                	addi	s4,s4,3
80006d62:	7246                	flw	ft4,112(sp)
80006d64:	6565                	lui	a0,0x19
80006d66:	5452                	lw	s0,52(sp)
80006d68:	4520534f          	0x4520534f
80006d6c:	6178                	flw	fa4,68(a0)
80006d6e:	706d                	c.lui	zero,0xffffb
80006d70:	656c                	flw	fa1,76(a0)
80006d72:	0a0d                	addi	s4,s4,3
80006d74:	0000                	unimp
80006d76:	0000                	unimp
80006d78:	200a                	fld	ft0,128(sp)
80006d7a:	6f726843          	fmadd.q	fa6,ft4,fs7,fa3,unknown
80006d7e:	6f6e                	flw	ft10,216(sp)
80006d80:	6c702073          	csrr	zero,0x6c7
80006d84:	7461                	lui	s0,0xffff8
80006d86:	6f66                	flw	ft10,88(sp)
80006d88:	6d72                	flw	fs10,28(sp)
80006d8a:	6920                	flw	fs0,80(a0)
80006d8c:	696e                	flw	fs2,216(sp)
80006d8e:	6974                	flw	fa3,84(a0)
80006d90:	6c61                	lui	s8,0x18
80006d92:	7a69                	lui	s4,0xffffa
80006d94:	6e69                	lui	t3,0x1a
80006d96:	2e2e2e67          	0x2e2e2e67
80006d9a:	0a20                	addi	s0,sp,280
80006d9c:	0000                	unimp
80006d9e:	0000                	unimp
80006da0:	200a                	fld	ft0,128(sp)
80006da2:	6854                	flw	fa3,20(s0)
80006da4:	7369                	lui	t1,0xffffa
80006da6:	7420                	flw	fs0,104(s0)
80006da8:	7265                	lui	tp,0xffff9
80006daa:	696d                	lui	s2,0x1b
80006dac:	616e                	flw	ft2,216(sp)
80006dae:	206c                	fld	fa1,192(s0)
80006db0:	6562                	flw	fa0,24(sp)
80006db2:	6f6c                	flw	fa1,92(a4)
80006db4:	676e                	flw	fa4,216(sp)
80006db6:	6f742073          	csrs	0x6f7,s0
80006dba:	7420                	flw	fs0,104(s0)
80006dbc:	6568                	flw	fa0,76(a0)
80006dbe:	6120                	flw	fs0,64(a0)
80006dc0:	6464                	flw	fs1,76(s0)
80006dc2:	6572                	flw	fa0,28(sp)
80006dc4:	203a7373          	csrrci	t1,hideleg,20
80006dc8:	0000                	unimp
80006dca:	0000                	unimp
80006dcc:	000a                	c.slli	zero,0x2
80006dce:	0000                	unimp
80006dd0:	200a                	fld	ft0,128(sp)
80006dd2:	6854                	flw	fa3,20(s0)
80006dd4:	7369                	lui	t1,0xffffa
80006dd6:	7020                	flw	fs0,96(s0)
80006dd8:	6f72                	flw	ft10,28(sp)
80006dda:	73736563          	bltu	t1,s7,80007504 <__sbss_end+0x514>
80006dde:	6920726f          	jal	tp,8000e470 <__global_pointer$+0x6df0>
80006de2:	68742073          	csrs	0x687,s0
80006de6:	2065                	jal	80006e8e <mtimecmp+0x2>
80006de8:	626f6c47          	fmsub.d	fs8,ft10,ft6,fa2,unknown
80006dec:	6c61                	lui	s8,0x18
80006dee:	4d20                	lw	s0,88(a0)
80006df0:	7361                	lui	t1,0xffff8
80006df2:	6574                	flw	fa3,76(a0)
80006df4:	3a72                	fld	fs4,312(sp)
80006df6:	0a20                	addi	s0,sp,280
80006df8:	0000                	unimp
80006dfa:	0000                	unimp
80006dfc:	626f6c47          	fmsub.d	fs8,ft10,ft6,fa2,unknown
80006e00:	6c61                	lui	s8,0x18
80006e02:	614d                	addi	sp,sp,176
80006e04:	72657473          	csrrci	s0,0x726,10
80006e08:	0000                	unimp
80006e0a:	0000                	unimp
80006e0c:	200a                	fld	ft0,128(sp)
80006e0e:	6854                	flw	fa3,20(s0)
80006e10:	7369                	lui	t1,0xffffa
80006e12:	7020                	flw	fs0,96(s0)
80006e14:	6f72                	flw	ft10,28(sp)
80006e16:	73736563          	bltu	t1,s7,80007540 <__sbss_end+0x550>
80006e1a:	6920726f          	jal	tp,8000e4ac <__global_pointer$+0x6e2c>
80006e1e:	20612073          	csrs	0x206,sp
80006e22:	76616c53          	0x76616c53
80006e26:	3a65                	jal	800067de <_write_r+0x1e>
80006e28:	0a20                	addi	s0,sp,280
80006e2a:	0000                	unimp
80006e2c:	6c41                	lui	s8,0x10
80006e2e:	7669                	lui	a2,0xffffa
80006e30:	0065                	c.nop	25
80006e32:	0000                	unimp
80006e34:	5020                	lw	s0,96(s0)
80006e36:	2045                	jal	80006ed6 <__data_load+0x36>
80006e38:	7369                	lui	t1,0xffffa
80006e3a:	6120                	flw	fs0,64(a0)
80006e3c:	696c                	flw	fa1,84(a0)
80006e3e:	6576                	flw	fa0,92(sp)
80006e40:	2d20                	fld	fs0,88(a0)
80006e42:	0020                	addi	s0,sp,8
80006e44:	2d20                	fld	fs0,88(a0)
80006e46:	0a0d                	addi	s4,s4,3
80006e48:	0000                	unimp
80006e4a:	0000                	unimp
80006e4c:	626f6c47          	fmsub.d	fs8,ft10,ft6,fa2,unknown
80006e50:	6c61                	lui	s8,0x18
80006e52:	614d                	addi	sp,sp,176
80006e54:	72657473          	csrrci	s0,0x726,10
80006e58:	6341                	lui	t1,0x10
80006e5a:	6974                	flw	fa3,84(a0)
80006e5c:	6576                	flw	fa0,92(sp)
80006e5e:	0000                	unimp
80006e60:	4720                	lw	s0,72(a4)
80006e62:	6f6c                	flw	fa1,92(a4)
80006e64:	6162                	flw	ft2,24(sp)
80006e66:	4d6c                	lw	a1,92(a0)
80006e68:	7361                	lui	t1,0xffff8
80006e6a:	6574                	flw	fa3,76(a0)
80006e6c:	5272                	lw	tp,60(sp)
80006e6e:	6974756f          	jal	a0,8004ed04 <__stack_top+0xd6d4>
80006e72:	656e                	flw	fa0,216(sp)
80006e74:	2e2e                	fld	ft8,200(sp)
80006e76:	0d2e                	slli	s10,s10,0xb
80006e78:	000a                	c.slli	zero,0x2
80006e7a:	0000                	unimp
80006e7c:	0000                	unimp
	...
